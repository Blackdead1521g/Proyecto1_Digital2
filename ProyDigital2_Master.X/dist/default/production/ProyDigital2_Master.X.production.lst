

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 31 23:51:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     008F                     	;# 
   120     0090                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0097                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     0105                     	;# 
   139     0107                     	;# 
   140     0108                     	;# 
   141     0109                     	;# 
   142     010C                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     010F                     	;# 
   147     0185                     	;# 
   148     0187                     	;# 
   149     0188                     	;# 
   150     0189                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0000                     	;# 
   154     0001                     	;# 
   155     0002                     	;# 
   156     0003                     	;# 
   157     0004                     	;# 
   158     0005                     	;# 
   159     0006                     	;# 
   160     0007                     	;# 
   161     0008                     	;# 
   162     0009                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0014                     	;# 
   175     0015                     	;# 
   176     0015                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     001A                     	;# 
   182     001B                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     0088                     	;# 
   193     0089                     	;# 
   194     008C                     	;# 
   195     008D                     	;# 
   196     008E                     	;# 
   197     008F                     	;# 
   198     0090                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009C                     	;# 
   213     009D                     	;# 
   214     009E                     	;# 
   215     009F                     	;# 
   216     0105                     	;# 
   217     0107                     	;# 
   218     0108                     	;# 
   219     0109                     	;# 
   220     010C                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     0185                     	;# 
   226     0187                     	;# 
   227     0188                     	;# 
   228     0189                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     008F                     	;# 
   276     0090                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009C                     	;# 
   291     009D                     	;# 
   292     009E                     	;# 
   293     009F                     	;# 
   294     0105                     	;# 
   295     0107                     	;# 
   296     0108                     	;# 
   297     0109                     	;# 
   298     010C                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     0185                     	;# 
   304     0187                     	;# 
   305     0188                     	;# 
   306     0189                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0000                     	;# 
   310     0001                     	;# 
   311     0002                     	;# 
   312     0003                     	;# 
   313     0004                     	;# 
   314     0005                     	;# 
   315     0006                     	;# 
   316     0007                     	;# 
   317     0008                     	;# 
   318     0009                     	;# 
   319     000A                     	;# 
   320     000B                     	;# 
   321     000C                     	;# 
   322     000D                     	;# 
   323     000E                     	;# 
   324     000E                     	;# 
   325     000F                     	;# 
   326     0010                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0013                     	;# 
   330     0014                     	;# 
   331     0015                     	;# 
   332     0015                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001B                     	;# 
   340     001C                     	;# 
   341     001D                     	;# 
   342     001E                     	;# 
   343     001F                     	;# 
   344     0081                     	;# 
   345     0085                     	;# 
   346     0086                     	;# 
   347     0087                     	;# 
   348     0088                     	;# 
   349     0089                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     008E                     	;# 
   353     008F                     	;# 
   354     0090                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0094                     	;# 
   361     0095                     	;# 
   362     0096                     	;# 
   363     0097                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009A                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     0105                     	;# 
   373     0107                     	;# 
   374     0108                     	;# 
   375     0109                     	;# 
   376     010C                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     0185                     	;# 
   382     0187                     	;# 
   383     0188                     	;# 
   384     0189                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     008F                     	;# 
   432     0090                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     0105                     	;# 
   451     0107                     	;# 
   452     0108                     	;# 
   453     0109                     	;# 
   454     010C                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0185                     	;# 
   460     0187                     	;# 
   461     0188                     	;# 
   462     0189                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465                           
   466                           	psect	strings
   467     0585                     __pstrings:
   468     0585                     stringtab:
   469     0585                     __stringtab:
   470                           
   471                           ;	String table - string pointers are 1 byte each
   472     0585  1BFF               	btfsc	btemp+1,7
   473     0586  2D8F               	ljmp	stringcode
   474     0587  1383               	bcf	3,7
   475     0588  187F               	btfsc	btemp+1,0
   476     0589  1783               	bsf	3,7
   477     058A  0800               	movf	0,w
   478     058B  0A84               	incf	4,f
   479     058C  1903               	skipnz
   480     058D  0AFF               	incf	btemp+1,f
   481     058E  0008               	return
   482     058F                     stringcode:
   483     058F                     stringdir:
   484     058F  3005               	movlw	high stringdir
   485     0590  008A               	movwf	10
   486     0591  0804               	movf	4,w
   487     0592  0A84               	incf	4,f
   488     0593  0782               	addwf	2,f
   489     0594                     __stringbase:
   490     0594  3400               	retlw	0
   491     0595                     __end_of__stringtab:
   492     0595                     _dpowers:
   493     0595  3401               	retlw	1
   494     0596  3400               	retlw	0
   495     0597  340A               	retlw	10
   496     0598  3400               	retlw	0
   497     0599  3464               	retlw	100
   498     059A  3400               	retlw	0
   499     059B  34E8               	retlw	232
   500     059C  3403               	retlw	3
   501     059D  3410               	retlw	16
   502     059E  3427               	retlw	39
   503     059F                     __end_of_dpowers:
   504     0019                     _TXREG	set	25
   505     0018                     _RCSTAbits	set	24
   506     0009                     _PORTE	set	9
   507     0007                     _PORTC	set	7
   508     0006                     _PORTB	set	6
   509     0005                     _PORTA	set	5
   510     0006                     _PORTBbits	set	6
   511     000B                     _INTCONbits	set	11
   512     001A                     _RCREG	set	26
   513     000C                     _PIR1bits	set	12
   514     0009                     _PORTEbits	set	9
   515     0008                     _PORTD	set	8
   516     0013                     _SSPBUF	set	19
   517     0014                     _SSPCON	set	20
   518     00C6                     _RX9	set	198
   519     0064                     _TXIF	set	100
   520     00C7                     _SPEN	set	199
   521     00C4                     _CREN	set	196
   522     0063                     _SSPIF	set	99
   523     005E                     _PEIE	set	94
   524     005F                     _GIE	set	95
   525     0098                     _TXSTAbits	set	152
   526     0099                     _SPBRG	set	153
   527     008C                     _PIE1bits	set	140
   528     009A                     _SPBRGH	set	154
   529     008F                     _OSCCONbits	set	143
   530     0096                     _IOCB	set	150
   531     0081                     _OPTION_REGbits	set	129
   532     0089                     _TRISE	set	137
   533     0088                     _TRISD	set	136
   534     0087                     _TRISC	set	135
   535     0086                     _TRISB	set	134
   536     0085                     _TRISA	set	133
   537     0091                     _SSPCON2bits	set	145
   538     0087                     _TRISCbits	set	135
   539     0094                     _SSPSTAT	set	148
   540     0093                     _SSPADD	set	147
   541     0091                     _SSPCON2	set	145
   542     04C1                     _TRMT	set	1217
   543     04C2                     _BRGH	set	1218
   544     04C5                     _TXEN	set	1221
   545     04C6                     _TX9	set	1222
   546     04C4                     _SYNC	set	1220
   547     0463                     _SSPIE	set	1123
   548     043C                     _TRISC4	set	1084
   549     043B                     _TRISC3	set	1083
   550     0189                     _ANSELH	set	393
   551     0188                     _ANSEL	set	392
   552     0C3B                     _BRG16	set	3131
   553     059F                     STR_12:
   554     059F  3449               	retlw	73	;'I'
   555     05A0  346E               	retlw	110	;'n'
   556     05A1  3466               	retlw	102	;'f'
   557     05A2  3472               	retlw	114	;'r'
   558     05A3  3461               	retlw	97	;'a'
   559     05A4  3400               	retlw	0
   560     05A5                     STR_10:
   561     05A5  3455               	retlw	85	;'U'
   562     05A6  346C               	retlw	108	;'l'
   563     05A7  3474               	retlw	116	;'t'
   564     05A8  3472               	retlw	114	;'r'
   565     05A9  3461               	retlw	97	;'a'
   566     05AA  3400               	retlw	0
   567     05AB                     STR_11:
   568     05AB  3446               	retlw	70	;'F'
   569     05AC  346F               	retlw	111	;'o'
   570     05AD  3474               	retlw	116	;'t'
   571     05AE  346F               	retlw	111	;'o'
   572     05AF  3400               	retlw	0
   573     05B0                     STR_4:
   574     05B0  3425               	retlw	37	;'%'
   575     05B1  3464               	retlw	100	;'d'
   576     05B2  340D               	retlw	13
   577     05B3  3400               	retlw	0
   578     05B4                     STR_7:
   579     05B4  3425               	retlw	37	;'%'
   580     05B5  3464               	retlw	100	;'d'
   581     05B6  3400               	retlw	0
   582     05B7                     STR_1:
   583     05B7  3466               	retlw	102	;'f'
   584     05B8  3400               	retlw	0
   585     05B9                     STR_2:
   586     05B9  3469               	retlw	105	;'i'
   587     05BA  3400               	retlw	0
   588     05BB                     STR_3:
   589     05BB  3475               	retlw	117	;'u'
   590     05BC  3400               	retlw	0
   591     05B0                     
   592                           	psect	cinit
   593     000F                     start_initialization:	
   594                           ; #config settings
   595                           
   596     000F                     __initialization:
   597                           
   598                           ; Clear objects allocated to COMMON
   599     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   600     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   601                           
   602                           ; Clear objects allocated to BANK0
   603     0011  1383               	bcf	3,7	;select IRP bank0
   604     0012  3020               	movlw	low __pbssBANK0
   605     0013  0084               	movwf	4
   606     0014  304B               	movlw	low (__pbssBANK0+43)
   607     0015  120A  118A  271B  120A  118A  	fcall	clear_ram0
   608     001A                     end_of_initialization:	
   609                           ;End of C runtime variable initialization code
   610                           
   611     001A                     __end_of__initialization:
   612     001A  0183               	clrf	3
   613     001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   614                           
   615                           	psect	bssCOMMON
   616     007A                     __pbssCOMMON:
   617     007A                     _BANDERA:
   618     007A                     	ds	1
   619     007B                     _datos:
   620     007B                     	ds	1
   621                           
   622                           	psect	bssBANK0
   623     0020                     __pbssBANK0:
   624     0020                     _Total:
   625     0020                     	ds	10
   626     002A                     _Infrarrojo:
   627     002A                     	ds	2
   628     002C                     _Fotoresistencia:
   629     002C                     	ds	2
   630     002E                     _Ultrasonico:
   631     002E                     	ds	2
   632     0030                     _contador:
   633     0030                     	ds	1
   634     0031                     _Bandera:
   635     0031                     	ds	1
   636     0032                     _data:
   637     0032                     	ds	1
   638     0033                     _infra:
   639     0033                     	ds	4
   640     0037                     _foto:
   641     0037                     	ds	4
   642     003B                     _ultra:
   643     003B                     	ds	4
   644     003F                     _Infra:
   645     003F                     	ds	4
   646     0043                     _Foto:
   647     0043                     	ds	4
   648     0047                     _Ultra:
   649     0047                     	ds	4
   650                           
   651                           	psect	clrtext
   652     071B                     clear_ram0:	
   653                           ;	Called with FSR containing the base address, and
   654                           ;	W with the last address+1
   655                           
   656     071B  0064               	clrwdt	;clear the watchdog before getting into this loop
   657     071C                     clrloop0:
   658     071C  0180               	clrf	0	;clear RAM location pointed to by FSR
   659     071D  0A84               	incf	4,f	;increment pointer
   660     071E  0604               	xorwf	4,w	;XOR with final address
   661     071F  1903               	btfsc	3,2	;have we reached the end yet?
   662     0720  3400               	retlw	0	;all done for this memory range, return
   663     0721  0604               	xorwf	4,w	;XOR again to restore value
   664     0722  2F1C               	goto	clrloop0	;do the next byte
   665                           
   666                           	psect	cstackCOMMON
   667     0070                     __pcstackCOMMON:
   668     0070                     ?_setup:
   669     0070                     ?_UART_write_char:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_I2C_Master_Wait:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_I2C_Master_Start:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_I2C_Master_Stop:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_Lcd_Port8:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Lcd_Cmd8:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_Lcd_Clear8:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_Lcd_Init8:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_Lcd_Write_Char8:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?_isr:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ??_isr:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_main:	
   703                           ; 1 bytes @ 0x0
   704                           
   705                           
   706                           ; 1 bytes @ 0x0
   707     0070                     	ds	2
   708     0072                     ??_UART_write_char:
   709     0072                     ?_strcat:	
   710                           ; 1 bytes @ 0x2
   711                           
   712     0072                     ?_UART_RX_config:	
   713                           ; 1 bytes @ 0x2
   714                           
   715     0072                     ?_UART_TX_config:	
   716                           ; 1 bytes @ 0x2
   717                           
   718     0072                     ??_I2C_Master_Wait:	
   719                           ; 1 bytes @ 0x2
   720                           
   721     0072                     ??_I2C_Master_Start:	
   722                           ; 1 bytes @ 0x2
   723                           
   724     0072                     ??_I2C_Master_Stop:	
   725                           ; 1 bytes @ 0x2
   726                           
   727     0072                     ?_I2C_Master_Write:	
   728                           ; 1 bytes @ 0x2
   729                           
   730     0072                     ??_Lcd_Port8:	
   731                           ; 1 bytes @ 0x2
   732                           
   733     0072                     ?_I2C_Master_Read:	
   734                           ; 1 bytes @ 0x2
   735                           
   736     0072                     ?___lwdiv:	
   737                           ; 2 bytes @ 0x2
   738                           
   739     0072                     ?___lldiv:	
   740                           ; 2 bytes @ 0x2
   741                           
   742     0072                     Lcd_Port8@a:	
   743                           ; 4 bytes @ 0x2
   744                           
   745     0072                     strcat@from:	
   746                           ; 1 bytes @ 0x2
   747                           
   748     0072                     I2C_Master_Write@d:	
   749                           ; 1 bytes @ 0x2
   750                           
   751     0072                     I2C_Master_Read@a:	
   752                           ; 2 bytes @ 0x2
   753                           
   754     0072                     UART_RX_config@baudrate:	
   755                           ; 2 bytes @ 0x2
   756                           
   757     0072                     UART_TX_config@baudrate:	
   758                           ; 2 bytes @ 0x2
   759                           
   760     0072                     ___lwdiv@divisor:	
   761                           ; 2 bytes @ 0x2
   762                           
   763     0072                     ___lldiv@divisor:	
   764                           ; 2 bytes @ 0x2
   765                           
   766                           
   767                           ; 4 bytes @ 0x2
   768     0072                     	ds	1
   769     0073                     ??_strcat:
   770     0073                     ??_Lcd_Cmd8:	
   771                           ; 1 bytes @ 0x3
   772                           
   773     0073                     ??_Lcd_Write_Char8:	
   774                           ; 1 bytes @ 0x3
   775                           
   776     0073                     UART_write_char@i:	
   777                           ; 1 bytes @ 0x3
   778                           
   779                           
   780                           ; 2 bytes @ 0x3
   781     0073                     	ds	1
   782     0074                     ??_UART_RX_config:
   783     0074                     ??_UART_TX_config:	
   784                           ; 1 bytes @ 0x4
   785                           
   786     0074                     ??_I2C_Master_Write:	
   787                           ; 1 bytes @ 0x4
   788                           
   789     0074                     ??_I2C_Master_Read:	
   790                           ; 1 bytes @ 0x4
   791                           
   792     0074                     Lcd_Write_Char8@y:	
   793                           ; 1 bytes @ 0x4
   794                           
   795     0074                     strcat@cp:	
   796                           ; 1 bytes @ 0x4
   797                           
   798     0074                     ___lwdiv@dividend:	
   799                           ; 1 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803     0074                     	ds	1
   804     0075                     Lcd_Cmd8@a:
   805     0075                     Lcd_Write_Char8@a:	
   806                           ; 1 bytes @ 0x5
   807                           
   808     0075                     UART_write_char@txt:	
   809                           ; 1 bytes @ 0x5
   810                           
   811     0075                     strcat@to:	
   812                           ; 1 bytes @ 0x5
   813                           
   814                           
   815                           ; 1 bytes @ 0x5
   816     0075                     	ds	1
   817     0076                     ??_Lcd_Clear8:
   818     0076                     ?_Lcd_Set_Cursor8:	
   819                           ; 1 bytes @ 0x6
   820                           
   821     0076                     ??_Lcd_Init8:	
   822                           ; 1 bytes @ 0x6
   823                           
   824     0076                     ?_Lcd_Write_String8:	
   825                           ; 1 bytes @ 0x6
   826                           
   827     0076                     ??___lwdiv:	
   828                           ; 1 bytes @ 0x6
   829                           
   830     0076                     Lcd_Set_Cursor8@b:	
   831                           ; 1 bytes @ 0x6
   832                           
   833     0076                     I2C_Master_Read@temp:	
   834                           ; 1 bytes @ 0x6
   835                           
   836     0076                     Lcd_Write_String8@a:	
   837                           ; 2 bytes @ 0x6
   838                           
   839     0076                     ___lldiv@dividend:	
   840                           ; 2 bytes @ 0x6
   841                           
   842                           
   843                           ; 4 bytes @ 0x6
   844     0076                     	ds	1
   845     0077                     ??_Lcd_Set_Cursor8:
   846     0077                     Lcd_Set_Cursor8@a:	
   847                           ; 1 bytes @ 0x7
   848                           
   849     0077                     ___lwdiv@quotient:	
   850                           ; 1 bytes @ 0x7
   851                           
   852                           
   853                           ; 2 bytes @ 0x7
   854     0077                     	ds	1
   855     0078                     Lcd_Set_Cursor8@temp:
   856     0078                     Lcd_Write_String8@i:	
   857                           ; 1 bytes @ 0x8
   858                           
   859                           
   860                           ; 2 bytes @ 0x8
   861     0078                     	ds	1
   862     0079                     ___lwdiv@counter:
   863                           
   864                           ; 1 bytes @ 0x9
   865     0079                     	ds	1
   866     007A                     ??_setup:
   867                           
   868                           	psect	cstackBANK0
   869     004B                     __pcstackBANK0:	
   870                           ; 1 bytes @ 0xA
   871                           
   872     004B                     ??_Lcd_Write_String8:
   873     004B                     ??___lldiv:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     004B                     ?___lwmod:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     004B                     ___lwmod@divisor:	
   880                           ; 2 bytes @ 0x0
   881                           
   882                           
   883                           ; 2 bytes @ 0x0
   884     004B                     	ds	1
   885     004C                     ___lldiv@quotient:
   886                           
   887                           ; 4 bytes @ 0x1
   888     004C                     	ds	1
   889     004D                     ___lwmod@dividend:
   890                           
   891                           ; 2 bytes @ 0x2
   892     004D                     	ds	2
   893     004F                     ??___lwmod:
   894                           
   895                           ; 1 bytes @ 0x4
   896     004F                     	ds	1
   897     0050                     ___lldiv@counter:
   898     0050                     ___lwmod@counter:	
   899                           ; 1 bytes @ 0x5
   900                           
   901                           
   902                           ; 1 bytes @ 0x5
   903     0050                     	ds	1
   904     0051                     ?_I2C_Master_Init:
   905     0051                     ?_sprintf:	
   906                           ; 1 bytes @ 0x6
   907                           
   908     0051                     sprintf@f:	
   909                           ; 2 bytes @ 0x6
   910                           
   911     0051                     I2C_Master_Init@c:	
   912                           ; 1 bytes @ 0x6
   913                           
   914                           
   915                           ; 4 bytes @ 0x6
   916     0051                     	ds	3
   917     0054                     ??_sprintf:
   918                           
   919                           ; 1 bytes @ 0x9
   920     0054                     	ds	1
   921     0055                     ??_I2C_Master_Init:
   922                           
   923                           ; 1 bytes @ 0xA
   924     0055                     	ds	2
   925     0057                     sprintf@ap:
   926                           
   927                           ; 1 bytes @ 0xC
   928     0057                     	ds	1
   929     0058                     sprintf@flag:
   930                           
   931                           ; 1 bytes @ 0xD
   932     0058                     	ds	1
   933     0059                     sprintf@prec:
   934                           
   935                           ; 1 bytes @ 0xE
   936     0059                     	ds	1
   937     005A                     sprintf@val:
   938                           
   939                           ; 2 bytes @ 0xF
   940     005A                     	ds	2
   941     005C                     sprintf@sp:
   942                           
   943                           ; 1 bytes @ 0x11
   944     005C                     	ds	1
   945     005D                     sprintf@c:
   946                           
   947                           ; 1 bytes @ 0x12
   948     005D                     	ds	1
   949     005E                     ??_main:
   950                           
   951                           ; 1 bytes @ 0x13
   952     005E                     	ds	3
   953                           
   954                           	psect	maintext
   955     001E                     __pmaintext:	
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 105 in file "Master_Sensores.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  a               2    0        unsigned int 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : B00/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0
   977 ;;      Temps:          0       3       0       0       0
   978 ;;      Totals:         0       3       0       0       0
   979 ;;Total ram usage:        3 bytes
   980 ;; Hardware stack levels required when called: 4
   981 ;; This function calls:
   982 ;;		_I2C_Master_Read
   983 ;;		_I2C_Master_Start
   984 ;;		_I2C_Master_Stop
   985 ;;		_I2C_Master_Write
   986 ;;		_Lcd_Clear8
   987 ;;		_Lcd_Init8
   988 ;;		_Lcd_Set_Cursor8
   989 ;;		_Lcd_Write_String8
   990 ;;		_UART_write_char
   991 ;;		_setup
   992 ;;		_sprintf
   993 ;;		_strcat
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999     001E                     _main:	
  1000                           ;psect for function _main
  1001                           
  1002     001E                     l2287:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1005                           
  1006                           
  1007                           ;Master_Sensores.c: 106:     setup();
  1008     001E  120A  118A  2507  120A  118A  	fcall	_setup
  1009                           
  1010                           ;Master_Sensores.c: 107:     Lcd_Init8();
  1011     0023  120A  118A  23A4  120A  118A  	fcall	_Lcd_Init8
  1012                           
  1013                           ;Master_Sensores.c: 108:     Lcd_Clear8();
  1014     0028  120A  118A  26E5  120A  118A  	fcall	_Lcd_Clear8
  1015     002D                     l2289:
  1016                           
  1017                           ;Master_Sensores.c: 114:         if(datos == 0){
  1018     002D  087B               	movf	_datos,w
  1019     002E  1D03               	btfss	3,2
  1020     002F  2831               	goto	u1461
  1021     0030  2832               	goto	u1460
  1022     0031                     u1461:
  1023     0031  2842               	goto	l2295
  1024     0032                     u1460:
  1025     0032                     l2291:
  1026                           
  1027                           ;Master_Sensores.c: 116:             UART_write_char(strcat(foto, "f"));
  1028     0032  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1029     0033  00F2               	movwf	strcat@from
  1030     0034  3037               	movlw	(low (_foto| 0))& (0+255)
  1031     0035  120A  118A  2623  120A  118A  	fcall	_strcat
  1032     003A  120A  118A  264F  120A  118A  	fcall	_UART_write_char
  1033     003F                     l2293:
  1034                           
  1035                           ;Master_Sensores.c: 118:             datos = 1;
  1036     003F  01FB               	clrf	_datos
  1037     0040  0AFB               	incf	_datos,f
  1038                           
  1039                           ;Master_Sensores.c: 119:         }
  1040     0041  286B               	goto	l2307
  1041     0042                     l2295:
  1042     0042  037B               	decf	_datos,w
  1043     0043  1D03               	btfss	3,2
  1044     0044  2846               	goto	u1471
  1045     0045  2847               	goto	u1470
  1046     0046                     u1471:
  1047     0046  2857               	goto	l2301
  1048     0047                     u1470:
  1049     0047                     l2297:
  1050                           
  1051                           ;Master_Sensores.c: 122:             UART_write_char(strcat(infra, "i"));
  1052     0047  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1053     0048  00F2               	movwf	strcat@from
  1054     0049  3033               	movlw	(low (_infra| 0))& (0+255)
  1055     004A  120A  118A  2623  120A  118A  	fcall	_strcat
  1056     004F  120A  118A  264F  120A  118A  	fcall	_UART_write_char
  1057     0054                     l2299:
  1058                           
  1059                           ;Master_Sensores.c: 124:             datos = 2;
  1060     0054  3002               	movlw	2
  1061     0055  00FB               	movwf	_datos
  1062                           
  1063                           ;Master_Sensores.c: 125:         }
  1064     0056  286B               	goto	l2307
  1065     0057                     l2301:
  1066     0057  3002               	movlw	2
  1067     0058  067B               	xorwf	_datos,w
  1068     0059  1D03               	btfss	3,2
  1069     005A  285C               	goto	u1481
  1070     005B  285D               	goto	u1480
  1071     005C                     u1481:
  1072     005C  286B               	goto	l2307
  1073     005D                     u1480:
  1074     005D                     l2303:
  1075                           
  1076                           ;Master_Sensores.c: 128:             UART_write_char(strcat(Ultra, "u"));
  1077     005D  3027               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1078     005E  00F2               	movwf	strcat@from
  1079     005F  3047               	movlw	(low (_Ultra| 0))& (0+255)
  1080     0060  120A  118A  2623  120A  118A  	fcall	_strcat
  1081     0065  120A  118A  264F  120A  118A  	fcall	_UART_write_char
  1082     006A                     l2305:
  1083                           
  1084                           ;Master_Sensores.c: 130:             datos = 0;
  1085     006A  01FB               	clrf	_datos
  1086     006B                     l2307:
  1087                           
  1088                           ;Master_Sensores.c: 135:         I2C_Master_Start();
  1089     006B  120A  118A  2712  120A  118A  	fcall	_I2C_Master_Start
  1090     0070                     l2309:
  1091                           
  1092                           ;Master_Sensores.c: 136:         I2C_Master_Write(0x60);
  1093     0070  3060               	movlw	96
  1094     0071  00F2               	movwf	I2C_Master_Write@d
  1095     0072  3000               	movlw	0
  1096     0073  00F3               	movwf	I2C_Master_Write@d+1
  1097     0074  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1098     0079                     l2311:
  1099                           
  1100                           ;Master_Sensores.c: 137:         I2C_Master_Write(BANDERA);
  1101     0079  087A               	movf	_BANDERA,w
  1102     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1103     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1104     007C  00DE               	movwf	??_main
  1105     007D  01DF               	clrf	??_main+1
  1106     007E  085E               	movf	??_main,w
  1107     007F  00F2               	movwf	I2C_Master_Write@d
  1108     0080  085F               	movf	??_main+1,w
  1109     0081  00F3               	movwf	I2C_Master_Write@d+1
  1110     0082  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1111     0087                     l2313:
  1112                           
  1113                           ;Master_Sensores.c: 138:         I2C_Master_Stop();
  1114     0087  120A  118A  2709  120A  118A  	fcall	_I2C_Master_Stop
  1115     008C                     l2315:
  1116                           
  1117                           ;Master_Sensores.c: 139:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1118     008C  3004               	movlw	4
  1119     008D  1283               	bcf	3,5	;RP0=0, select bank0
  1120     008E  1303               	bcf	3,6	;RP1=0, select bank0
  1121     008F  00E0               	movwf	??_main+2
  1122     0090  300C               	movlw	12
  1123     0091  00DF               	movwf	??_main+1
  1124     0092  3033               	movlw	51
  1125     0093  00DE               	movwf	??_main
  1126     0094                     u1527:
  1127     0094  0BDE               	decfsz	??_main,f
  1128     0095  2894               	goto	u1527
  1129     0096  0BDF               	decfsz	??_main+1,f
  1130     0097  2894               	goto	u1527
  1131     0098  0BE0               	decfsz	??_main+2,f
  1132     0099  2894               	goto	u1527
  1133     009A                     l2317:
  1134                           
  1135                           ;Master_Sensores.c: 141:         I2C_Master_Start();
  1136     009A  120A  118A  2712  120A  118A  	fcall	_I2C_Master_Start
  1137     009F                     l2319:
  1138                           
  1139                           ;Master_Sensores.c: 142:         I2C_Master_Write(0x61);
  1140     009F  3061               	movlw	97
  1141     00A0  00F2               	movwf	I2C_Master_Write@d
  1142     00A1  3000               	movlw	0
  1143     00A2  00F3               	movwf	I2C_Master_Write@d+1
  1144     00A3  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1145     00A8                     l2321:
  1146                           
  1147                           ;Master_Sensores.c: 143:         Fotoresistencia = I2C_Master_Read(0);
  1148     00A8  3000               	movlw	0
  1149     00A9  00F2               	movwf	I2C_Master_Read@a
  1150     00AA  00F3               	movwf	I2C_Master_Read@a+1
  1151     00AB  120A  118A  25F5  120A  118A  	fcall	_I2C_Master_Read
  1152     00B0  0873               	movf	?_I2C_Master_Read+1,w
  1153     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1154     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1155     00B3  00AD               	movwf	_Fotoresistencia+1
  1156     00B4  0872               	movf	?_I2C_Master_Read,w
  1157     00B5  00AC               	movwf	_Fotoresistencia
  1158     00B6                     l2323:
  1159                           
  1160                           ;Master_Sensores.c: 146:         I2C_Master_Stop();
  1161     00B6  120A  118A  2709  120A  118A  	fcall	_I2C_Master_Stop
  1162     00BB                     l2325:
  1163                           
  1164                           ;Master_Sensores.c: 147:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1165     00BB  3004               	movlw	4
  1166     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1167     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1168     00BE  00E0               	movwf	??_main+2
  1169     00BF  300C               	movlw	12
  1170     00C0  00DF               	movwf	??_main+1
  1171     00C1  3033               	movlw	51
  1172     00C2  00DE               	movwf	??_main
  1173     00C3                     u1537:
  1174     00C3  0BDE               	decfsz	??_main,f
  1175     00C4  28C3               	goto	u1537
  1176     00C5  0BDF               	decfsz	??_main+1,f
  1177     00C6  28C3               	goto	u1537
  1178     00C7  0BE0               	decfsz	??_main+2,f
  1179     00C8  28C3               	goto	u1537
  1180     00C9                     l2327:
  1181                           
  1182                           ;Master_Sensores.c: 149:         I2C_Master_Start();
  1183     00C9  120A  118A  2712  120A  118A  	fcall	_I2C_Master_Start
  1184     00CE                     l2329:
  1185                           
  1186                           ;Master_Sensores.c: 150:         I2C_Master_Write(0x70);
  1187     00CE  3070               	movlw	112
  1188     00CF  00F2               	movwf	I2C_Master_Write@d
  1189     00D0  3000               	movlw	0
  1190     00D1  00F3               	movwf	I2C_Master_Write@d+1
  1191     00D2  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1192     00D7                     l2331:
  1193                           
  1194                           ;Master_Sensores.c: 151:         I2C_Master_Write(Bandera);
  1195     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1196     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1197     00D9  0831               	movf	_Bandera,w
  1198     00DA  00DE               	movwf	??_main
  1199     00DB  01DF               	clrf	??_main+1
  1200     00DC  085E               	movf	??_main,w
  1201     00DD  00F2               	movwf	I2C_Master_Write@d
  1202     00DE  085F               	movf	??_main+1,w
  1203     00DF  00F3               	movwf	I2C_Master_Write@d+1
  1204     00E0  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1205     00E5                     l2333:
  1206                           
  1207                           ;Master_Sensores.c: 152:         I2C_Master_Stop();
  1208     00E5  120A  118A  2709  120A  118A  	fcall	_I2C_Master_Stop
  1209     00EA                     l2335:
  1210                           
  1211                           ;Master_Sensores.c: 153:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1212     00EA  3004               	movlw	4
  1213     00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1214     00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1215     00ED  00E0               	movwf	??_main+2
  1216     00EE  300C               	movlw	12
  1217     00EF  00DF               	movwf	??_main+1
  1218     00F0  3033               	movlw	51
  1219     00F1  00DE               	movwf	??_main
  1220     00F2                     u1547:
  1221     00F2  0BDE               	decfsz	??_main,f
  1222     00F3  28F2               	goto	u1547
  1223     00F4  0BDF               	decfsz	??_main+1,f
  1224     00F5  28F2               	goto	u1547
  1225     00F6  0BE0               	decfsz	??_main+2,f
  1226     00F7  28F2               	goto	u1547
  1227     00F8                     l2337:
  1228                           
  1229                           ;Master_Sensores.c: 155:         I2C_Master_Start();
  1230     00F8  120A  118A  2712  120A  118A  	fcall	_I2C_Master_Start
  1231     00FD                     l2339:
  1232                           
  1233                           ;Master_Sensores.c: 156:         I2C_Master_Write(0x71);
  1234     00FD  3071               	movlw	113
  1235     00FE  00F2               	movwf	I2C_Master_Write@d
  1236     00FF  3000               	movlw	0
  1237     0100  00F3               	movwf	I2C_Master_Write@d+1
  1238     0101  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1239     0106                     l2341:
  1240                           
  1241                           ;Master_Sensores.c: 157:         Infrarrojo = I2C_Master_Read(0);
  1242     0106  3000               	movlw	0
  1243     0107  00F2               	movwf	I2C_Master_Read@a
  1244     0108  00F3               	movwf	I2C_Master_Read@a+1
  1245     0109  120A  118A  25F5  120A  118A  	fcall	_I2C_Master_Read
  1246     010E  0873               	movf	?_I2C_Master_Read+1,w
  1247     010F  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0110  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0111  00AB               	movwf	_Infrarrojo+1
  1250     0112  0872               	movf	?_I2C_Master_Read,w
  1251     0113  00AA               	movwf	_Infrarrojo
  1252     0114                     l2343:
  1253                           
  1254                           ;Master_Sensores.c: 160:         I2C_Master_Stop();
  1255     0114  120A  118A  2709  120A  118A  	fcall	_I2C_Master_Stop
  1256     0119                     l2345:
  1257                           
  1258                           ;Master_Sensores.c: 161:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1259     0119  3004               	movlw	4
  1260     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1261     011B  1303               	bcf	3,6	;RP1=0, select bank0
  1262     011C  00E0               	movwf	??_main+2
  1263     011D  300C               	movlw	12
  1264     011E  00DF               	movwf	??_main+1
  1265     011F  3033               	movlw	51
  1266     0120  00DE               	movwf	??_main
  1267     0121                     u1557:
  1268     0121  0BDE               	decfsz	??_main,f
  1269     0122  2921               	goto	u1557
  1270     0123  0BDF               	decfsz	??_main+1,f
  1271     0124  2921               	goto	u1557
  1272     0125  0BE0               	decfsz	??_main+2,f
  1273     0126  2921               	goto	u1557
  1274     0127                     l2347:
  1275                           
  1276                           ;Master_Sensores.c: 163:         I2C_Master_Start();
  1277     0127  120A  118A  2712  120A  118A  	fcall	_I2C_Master_Start
  1278     012C                     l2349:
  1279                           
  1280                           ;Master_Sensores.c: 164:         I2C_Master_Write(0x50);
  1281     012C  3050               	movlw	80
  1282     012D  00F2               	movwf	I2C_Master_Write@d
  1283     012E  3000               	movlw	0
  1284     012F  00F3               	movwf	I2C_Master_Write@d+1
  1285     0130  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1286     0135                     l2351:
  1287                           
  1288                           ;Master_Sensores.c: 165:         I2C_Master_Write(BANDERA);
  1289     0135  087A               	movf	_BANDERA,w
  1290     0136  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0137  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0138  00DE               	movwf	??_main
  1293     0139  01DF               	clrf	??_main+1
  1294     013A  085E               	movf	??_main,w
  1295     013B  00F2               	movwf	I2C_Master_Write@d
  1296     013C  085F               	movf	??_main+1,w
  1297     013D  00F3               	movwf	I2C_Master_Write@d+1
  1298     013E  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1299     0143                     l2353:
  1300                           
  1301                           ;Master_Sensores.c: 166:         I2C_Master_Stop();
  1302     0143  120A  118A  2709  120A  118A  	fcall	_I2C_Master_Stop
  1303     0148                     l2355:
  1304                           
  1305                           ;Master_Sensores.c: 167:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1306     0148  3004               	movlw	4
  1307     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1308     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1309     014B  00E0               	movwf	??_main+2
  1310     014C  300C               	movlw	12
  1311     014D  00DF               	movwf	??_main+1
  1312     014E  3033               	movlw	51
  1313     014F  00DE               	movwf	??_main
  1314     0150                     u1567:
  1315     0150  0BDE               	decfsz	??_main,f
  1316     0151  2950               	goto	u1567
  1317     0152  0BDF               	decfsz	??_main+1,f
  1318     0153  2950               	goto	u1567
  1319     0154  0BE0               	decfsz	??_main+2,f
  1320     0155  2950               	goto	u1567
  1321     0156                     l2357:
  1322                           
  1323                           ;Master_Sensores.c: 169:         I2C_Master_Start();
  1324     0156  120A  118A  2712  120A  118A  	fcall	_I2C_Master_Start
  1325     015B                     l2359:
  1326                           
  1327                           ;Master_Sensores.c: 170:         I2C_Master_Write(0x51);
  1328     015B  3051               	movlw	81
  1329     015C  00F2               	movwf	I2C_Master_Write@d
  1330     015D  3000               	movlw	0
  1331     015E  00F3               	movwf	I2C_Master_Write@d+1
  1332     015F  120A  118A  26FF  120A  118A  	fcall	_I2C_Master_Write
  1333     0164                     l2361:
  1334                           
  1335                           ;Master_Sensores.c: 171:         Ultrasonico = I2C_Master_Read(0);
  1336     0164  3000               	movlw	0
  1337     0165  00F2               	movwf	I2C_Master_Read@a
  1338     0166  00F3               	movwf	I2C_Master_Read@a+1
  1339     0167  120A  118A  25F5  120A  118A  	fcall	_I2C_Master_Read
  1340     016C  0873               	movf	?_I2C_Master_Read+1,w
  1341     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1342     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1343     016F  00AF               	movwf	_Ultrasonico+1
  1344     0170  0872               	movf	?_I2C_Master_Read,w
  1345     0171  00AE               	movwf	_Ultrasonico
  1346     0172                     l2363:
  1347                           
  1348                           ;Master_Sensores.c: 174:         I2C_Master_Stop();
  1349     0172  120A  118A  2709  120A  118A  	fcall	_I2C_Master_Stop
  1350     0177                     l2365:
  1351                           
  1352                           ;Master_Sensores.c: 175:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1353     0177  3004               	movlw	4
  1354     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1355     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1356     017A  00E0               	movwf	??_main+2
  1357     017B  300C               	movlw	12
  1358     017C  00DF               	movwf	??_main+1
  1359     017D  3033               	movlw	51
  1360     017E  00DE               	movwf	??_main
  1361     017F                     u1577:
  1362     017F  0BDE               	decfsz	??_main,f
  1363     0180  297F               	goto	u1577
  1364     0181  0BDF               	decfsz	??_main+1,f
  1365     0182  297F               	goto	u1577
  1366     0183  0BE0               	decfsz	??_main+2,f
  1367     0184  297F               	goto	u1577
  1368     0185                     l2367:
  1369                           
  1370                           ;Master_Sensores.c: 180:         sprintf(ultra, "%d\r", Ultrasonico);
  1371     0185  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1372     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1374     0188  00D1               	movwf	sprintf@f
  1375     0189  082F               	movf	_Ultrasonico+1,w
  1376     018A  00D3               	movwf	?_sprintf+2
  1377     018B  082E               	movf	_Ultrasonico,w
  1378     018C  00D2               	movwf	?_sprintf+1
  1379     018D  303B               	movlw	(low (_ultra| 0))& (0+255)
  1380     018E  120A  118A  2260  120A  118A  	fcall	_sprintf
  1381     0193                     l2369:
  1382                           
  1383                           ;Master_Sensores.c: 181:         sprintf(foto, "%d\r", Fotoresistencia);
  1384     0193  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1385     0194  1283               	bcf	3,5	;RP0=0, select bank0
  1386     0195  1303               	bcf	3,6	;RP1=0, select bank0
  1387     0196  00D1               	movwf	sprintf@f
  1388     0197  082D               	movf	_Fotoresistencia+1,w
  1389     0198  00D3               	movwf	?_sprintf+2
  1390     0199  082C               	movf	_Fotoresistencia,w
  1391     019A  00D2               	movwf	?_sprintf+1
  1392     019B  3037               	movlw	(low (_foto| 0))& (0+255)
  1393     019C  120A  118A  2260  120A  118A  	fcall	_sprintf
  1394     01A1                     l2371:
  1395                           
  1396                           ;Master_Sensores.c: 182:         sprintf(infra, "%d\r", Infrarrojo);
  1397     01A1  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1398     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1399     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1400     01A4  00D1               	movwf	sprintf@f
  1401     01A5  082B               	movf	_Infrarrojo+1,w
  1402     01A6  00D3               	movwf	?_sprintf+2
  1403     01A7  082A               	movf	_Infrarrojo,w
  1404     01A8  00D2               	movwf	?_sprintf+1
  1405     01A9  3033               	movlw	(low (_infra| 0))& (0+255)
  1406     01AA  120A  118A  2260  120A  118A  	fcall	_sprintf
  1407     01AF                     l2373:
  1408                           
  1409                           ;Master_Sensores.c: 188:         sprintf(Ultra, "%d", Ultrasonico);
  1410     01AF  3020               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1411     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1412     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1413     01B2  00D1               	movwf	sprintf@f
  1414     01B3  082F               	movf	_Ultrasonico+1,w
  1415     01B4  00D3               	movwf	?_sprintf+2
  1416     01B5  082E               	movf	_Ultrasonico,w
  1417     01B6  00D2               	movwf	?_sprintf+1
  1418     01B7  3047               	movlw	(low (_Ultra| 0))& (0+255)
  1419     01B8  120A  118A  2260  120A  118A  	fcall	_sprintf
  1420     01BD                     l2375:
  1421                           
  1422                           ;Master_Sensores.c: 189:         sprintf(Foto, "%d", Fotoresistencia);
  1423     01BD  3020               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1424     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1425     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1426     01C0  00D1               	movwf	sprintf@f
  1427     01C1  082D               	movf	_Fotoresistencia+1,w
  1428     01C2  00D3               	movwf	?_sprintf+2
  1429     01C3  082C               	movf	_Fotoresistencia,w
  1430     01C4  00D2               	movwf	?_sprintf+1
  1431     01C5  3043               	movlw	(low (_Foto| 0))& (0+255)
  1432     01C6  120A  118A  2260  120A  118A  	fcall	_sprintf
  1433     01CB                     l2377:
  1434                           
  1435                           ;Master_Sensores.c: 190:         sprintf(Infra, "%d", Infrarrojo);
  1436     01CB  3020               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1437     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1438     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1439     01CE  00D1               	movwf	sprintf@f
  1440     01CF  082B               	movf	_Infrarrojo+1,w
  1441     01D0  00D3               	movwf	?_sprintf+2
  1442     01D1  082A               	movf	_Infrarrojo,w
  1443     01D2  00D2               	movwf	?_sprintf+1
  1444     01D3  303F               	movlw	(low (_Infra| 0))& (0+255)
  1445     01D4  120A  118A  2260  120A  118A  	fcall	_sprintf
  1446     01D9                     l2379:
  1447                           
  1448                           ;Master_Sensores.c: 192:         Lcd_Clear8();
  1449     01D9  120A  118A  26E5  120A  118A  	fcall	_Lcd_Clear8
  1450     01DE                     l2381:
  1451                           
  1452                           ;Master_Sensores.c: 193:         Lcd_Set_Cursor8(1,1);
  1453     01DE  01F6               	clrf	Lcd_Set_Cursor8@b
  1454     01DF  0AF6               	incf	Lcd_Set_Cursor8@b,f
  1455     01E0  3001               	movlw	1
  1456     01E1  120A  118A  2673  120A  118A  	fcall	_Lcd_Set_Cursor8
  1457     01E6                     l2383:
  1458                           
  1459                           ;Master_Sensores.c: 194:         Lcd_Write_String8("Ultra");
  1460     01E6  3011               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1461     01E7  00F6               	movwf	Lcd_Write_String8@a
  1462     01E8  3080               	movlw	128
  1463     01E9  00F7               	movwf	Lcd_Write_String8@a+1
  1464     01EA  120A  118A  24C3  120A  118A  	fcall	_Lcd_Write_String8
  1465     01EF                     l2385:
  1466                           
  1467                           ;Master_Sensores.c: 196:         Lcd_Set_Cursor8(1,8);
  1468     01EF  3008               	movlw	8
  1469     01F0  00F6               	movwf	Lcd_Set_Cursor8@b
  1470     01F1  3001               	movlw	1
  1471     01F2  120A  118A  2673  120A  118A  	fcall	_Lcd_Set_Cursor8
  1472     01F7                     l2387:
  1473                           
  1474                           ;Master_Sensores.c: 197:         Lcd_Write_String8("Foto");
  1475     01F7  3017               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1476     01F8  00F6               	movwf	Lcd_Write_String8@a
  1477     01F9  3080               	movlw	128
  1478     01FA  00F7               	movwf	Lcd_Write_String8@a+1
  1479     01FB  120A  118A  24C3  120A  118A  	fcall	_Lcd_Write_String8
  1480     0200                     l2389:
  1481                           
  1482                           ;Master_Sensores.c: 199:         Lcd_Set_Cursor8(1,14);
  1483     0200  300E               	movlw	14
  1484     0201  00F6               	movwf	Lcd_Set_Cursor8@b
  1485     0202  3001               	movlw	1
  1486     0203  120A  118A  2673  120A  118A  	fcall	_Lcd_Set_Cursor8
  1487     0208                     l2391:
  1488                           
  1489                           ;Master_Sensores.c: 200:         Lcd_Write_String8("Infra");
  1490     0208  300B               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1491     0209  00F6               	movwf	Lcd_Write_String8@a
  1492     020A  3080               	movlw	128
  1493     020B  00F7               	movwf	Lcd_Write_String8@a+1
  1494     020C  120A  118A  24C3  120A  118A  	fcall	_Lcd_Write_String8
  1495     0211                     l2393:
  1496                           
  1497                           ;Master_Sensores.c: 202:         Lcd_Set_Cursor8(2,1);
  1498     0211  01F6               	clrf	Lcd_Set_Cursor8@b
  1499     0212  0AF6               	incf	Lcd_Set_Cursor8@b,f
  1500     0213  3002               	movlw	2
  1501     0214  120A  118A  2673  120A  118A  	fcall	_Lcd_Set_Cursor8
  1502     0219                     l2395:
  1503                           
  1504                           ;Master_Sensores.c: 206:         Lcd_Write_String8(Ultra);
  1505     0219  3047               	movlw	(low (_Ultra| 0))& (0+255)
  1506     021A  00F6               	movwf	Lcd_Write_String8@a
  1507     021B  3000               	movlw	0
  1508     021C  00F7               	movwf	Lcd_Write_String8@a+1
  1509     021D  120A  118A  24C3  120A  118A  	fcall	_Lcd_Write_String8
  1510     0222                     l2397:
  1511                           
  1512                           ;Master_Sensores.c: 208:         Lcd_Set_Cursor8(2,8);
  1513     0222  3008               	movlw	8
  1514     0223  00F6               	movwf	Lcd_Set_Cursor8@b
  1515     0224  3002               	movlw	2
  1516     0225  120A  118A  2673  120A  118A  	fcall	_Lcd_Set_Cursor8
  1517     022A                     l2399:
  1518                           
  1519                           ;Master_Sensores.c: 212:         Lcd_Write_String8(Foto);
  1520     022A  3043               	movlw	(low (_Foto| 0))& (0+255)
  1521     022B  00F6               	movwf	Lcd_Write_String8@a
  1522     022C  3000               	movlw	0
  1523     022D  00F7               	movwf	Lcd_Write_String8@a+1
  1524     022E  120A  118A  24C3  120A  118A  	fcall	_Lcd_Write_String8
  1525     0233                     l2401:
  1526                           
  1527                           ;Master_Sensores.c: 214:         Lcd_Set_Cursor8(2,14);
  1528     0233  300E               	movlw	14
  1529     0234  00F6               	movwf	Lcd_Set_Cursor8@b
  1530     0235  3002               	movlw	2
  1531     0236  120A  118A  2673  120A  118A  	fcall	_Lcd_Set_Cursor8
  1532     023B                     l2403:
  1533                           
  1534                           ;Master_Sensores.c: 218:         Lcd_Write_String8(Infra);
  1535     023B  303F               	movlw	(low (_Infra| 0))& (0+255)
  1536     023C  00F6               	movwf	Lcd_Write_String8@a
  1537     023D  3000               	movlw	0
  1538     023E  00F7               	movwf	Lcd_Write_String8@a+1
  1539     023F  120A  118A  24C3  120A  118A  	fcall	_Lcd_Write_String8
  1540     0244                     l2405:
  1541                           
  1542                           ;Master_Sensores.c: 220:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1543     0244  3002               	movlw	2
  1544     0245  1283               	bcf	3,5	;RP0=0, select bank0
  1545     0246  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0247  00E0               	movwf	??_main+2
  1547     0248  3004               	movlw	4
  1548     0249  00DF               	movwf	??_main+1
  1549     024A  30B9               	movlw	185
  1550     024B  00DE               	movwf	??_main
  1551     024C                     u1587:
  1552     024C  0BDE               	decfsz	??_main,f
  1553     024D  2A4C               	goto	u1587
  1554     024E  0BDF               	decfsz	??_main+1,f
  1555     024F  2A4C               	goto	u1587
  1556     0250  0BE0               	decfsz	??_main+2,f
  1557     0251  2A4C               	goto	u1587
  1558     0252  2A53               	nop2
  1559     0253                     l2407:
  1560                           
  1561                           ;Master_Sensores.c: 223:         BANDERA = 0;
  1562     0253  01FA               	clrf	_BANDERA
  1563     0254                     l2409:
  1564                           
  1565                           ;Master_Sensores.c: 224:         contador++;
  1566     0254  3001               	movlw	1
  1567     0255  1283               	bcf	3,5	;RP0=0, select bank0
  1568     0256  1303               	bcf	3,6	;RP1=0, select bank0
  1569     0257  00DE               	movwf	??_main
  1570     0258  085E               	movf	??_main,w
  1571     0259  07B0               	addwf	_contador,f
  1572     025A                     l2411:
  1573                           
  1574                           ;Master_Sensores.c: 225:         PORTA = Ultrasonico;
  1575     025A  082E               	movf	_Ultrasonico,w
  1576     025B  0085               	movwf	5	;volatile
  1577     025C  282D               	goto	l2289
  1578     025D  120A  118A  280C   	ljmp	start
  1579     0260                     __end_of_main:
  1580                           
  1581                           	psect	text1
  1582     0623                     __ptext1:	
  1583 ;; *************** function _strcat *****************
  1584 ;; Defined at:
  1585 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strcat.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  to              1    wreg     PTR unsigned char 
  1588 ;;		 -> Ultra(4), infra(4), foto(4), 
  1589 ;;  from            1    2[COMMON] PTR const unsigned char 
  1590 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  to              1    5[COMMON] PTR unsigned char 
  1593 ;;		 -> Ultra(4), infra(4), foto(4), 
  1594 ;;  cp              1    4[COMMON] PTR unsigned char 
  1595 ;;		 -> Ultra(4), infra(4), foto(4), 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      PTR unsigned char 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         1       0       0       0       0
  1606 ;;      Locals:         2       0       0       0       0
  1607 ;;      Temps:          1       0       0       0       0
  1608 ;;      Totals:         4       0       0       0       0
  1609 ;;Total ram usage:        4 bytes
  1610 ;; Hardware stack levels used: 2
  1611 ;; Hardware stack levels required when called: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619     0623                     _strcat:	
  1620                           ;psect for function _strcat
  1621                           
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+pclath]
  1625                           ;strcat@to stored from wreg
  1626     0623  00F5               	movwf	strcat@to
  1627     0624                     l1807:
  1628     0624  0875               	movf	strcat@to,w
  1629     0625  00F4               	movwf	strcat@cp
  1630     0626  2E2B               	goto	l1811
  1631     0627                     l1809:
  1632     0627  3001               	movlw	1
  1633     0628  00F3               	movwf	??_strcat
  1634     0629  0873               	movf	??_strcat,w
  1635     062A  07F4               	addwf	strcat@cp,f
  1636     062B                     l1811:
  1637     062B  0874               	movf	strcat@cp,w
  1638     062C  0084               	movwf	4
  1639     062D  1383               	bcf	3,7	;select IRP bank0
  1640     062E  0800               	movf	0,w
  1641     062F  1D03               	btfss	3,2
  1642     0630  2E32               	goto	u991
  1643     0631  2E33               	goto	u990
  1644     0632                     u991:
  1645     0632  2E27               	goto	l1809
  1646     0633                     u990:
  1647     0633  2E3C               	goto	l1815
  1648     0634                     l1813:
  1649     0634  3001               	movlw	1
  1650     0635  00F3               	movwf	??_strcat
  1651     0636  0873               	movf	??_strcat,w
  1652     0637  07F4               	addwf	strcat@cp,f
  1653     0638  3001               	movlw	1
  1654     0639  00F3               	movwf	??_strcat
  1655     063A  0873               	movf	??_strcat,w
  1656     063B  07F2               	addwf	strcat@from,f
  1657     063C                     l1815:
  1658     063C  0872               	movf	strcat@from,w
  1659     063D  0084               	movwf	4
  1660     063E  120A  118A  258F  120A  118A  	fcall	stringdir
  1661     0643  00F3               	movwf	??_strcat
  1662     0644  0874               	movf	strcat@cp,w
  1663     0645  0084               	movwf	4
  1664     0646  0873               	movf	??_strcat,w
  1665     0647  0080               	movwf	0
  1666     0648  0800               	movf	0,w
  1667     0649  1D03               	btfss	3,2
  1668     064A  2E4C               	goto	u1001
  1669     064B  2E4D               	goto	u1000
  1670     064C                     u1001:
  1671     064C  2E34               	goto	l1813
  1672     064D                     u1000:
  1673     064D                     l1817:
  1674     064D  0875               	movf	strcat@to,w
  1675     064E                     l901:
  1676     064E  0008               	return
  1677     064F                     __end_of_strcat:
  1678                           
  1679                           	psect	text2
  1680     0260                     __ptext2:	
  1681 ;; *************** function _sprintf *****************
  1682 ;; Defined at:
  1683 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  sp              1    wreg     PTR unsigned char 
  1686 ;;		 -> UART_read_char@CONT(15), Infra(4), Foto(4), ultra(4), 
  1687 ;;		 -> Ultra(4), infra(4), foto(4), 
  1688 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1689 ;;		 -> STR_13(4), STR_9(3), STR_8(3), STR_7(3), 
  1690 ;;		 -> STR_6(4), STR_5(4), STR_4(4), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1693 ;;		 -> UART_read_char@CONT(15), Infra(4), Foto(4), ultra(4), 
  1694 ;;		 -> Ultra(4), infra(4), foto(4), 
  1695 ;;  tmpval          4    0        struct .
  1696 ;;  val             2   15[BANK0 ] unsigned int 
  1697 ;;  cp              2    0        PTR const unsigned char 
  1698 ;;  len             2    0        unsigned int 
  1699 ;;  c               1   18[BANK0 ] unsigned char 
  1700 ;;  prec            1   14[BANK0 ] char 
  1701 ;;  flag            1   13[BANK0 ] unsigned char 
  1702 ;;  ap              1   12[BANK0 ] PTR void [1]
  1703 ;;		 -> ?_sprintf(2), 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    6[BANK0 ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       3       0       0       0
  1714 ;;      Locals:         0       7       0       0       0
  1715 ;;      Temps:          0       3       0       0       0
  1716 ;;      Totals:         0      13       0       0       0
  1717 ;;Total ram usage:       13 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 2
  1720 ;; This function calls:
  1721 ;;		___lwdiv
  1722 ;;		___lwmod
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;;		_UART_read_char
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729     0260                     _sprintf:	
  1730                           ;psect for function _sprintf
  1731                           
  1732                           
  1733                           ;incstack = 0
  1734                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1735                           ;sprintf@sp stored from wreg
  1736     0260  1283               	bcf	3,5	;RP0=0, select bank0
  1737     0261  1303               	bcf	3,6	;RP1=0, select bank0
  1738     0262  00DC               	movwf	sprintf@sp
  1739     0263                     l2221:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1742     0263  3052               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1743     0264  00D7               	movwf	sprintf@ap
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1746     0265  2B27               	goto	l2273
  1747     0266                     l2223:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1750     0266  3025               	movlw	37
  1751     0267  065D               	xorwf	sprintf@c,w
  1752     0268  1903               	btfsc	3,2
  1753     0269  2A6B               	goto	u1391
  1754     026A  2A6C               	goto	u1390
  1755     026B                     u1391:
  1756     026B  2A76               	goto	l2229
  1757     026C                     u1390:
  1758     026C                     l2225:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1761     026C  085C               	movf	sprintf@sp,w
  1762     026D  0084               	movwf	4
  1763     026E  085D               	movf	sprintf@c,w
  1764     026F  1383               	bcf	3,7	;select IRP bank0
  1765     0270  0080               	movwf	0
  1766     0271                     l2227:
  1767     0271  3001               	movlw	1
  1768     0272  00D4               	movwf	??_sprintf
  1769     0273  0854               	movf	??_sprintf,w
  1770     0274  07DC               	addwf	sprintf@sp,f
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1773     0275  2B27               	goto	l2273
  1774     0276                     l2229:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1777     0276  01D8               	clrf	sprintf@flag
  1778     0277                     l2233:	
  1779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1780                           
  1781     0277  3001               	movlw	1
  1782     0278  07D1               	addwf	sprintf@f,f
  1783     0279  30FF               	movlw	-1
  1784     027A  0751               	addwf	sprintf@f,w
  1785     027B  0084               	movwf	4
  1786     027C  120A  118A  258F  120A  118A  	fcall	stringdir
  1787     0281  00DD               	movwf	sprintf@c
  1788     0282  00D4               	movwf	??_sprintf
  1789     0283  01D5               	clrf	??_sprintf+1
  1790                           
  1791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1792                           ; Switch size 1, requested type "simple"
  1793                           ; Number of cases is 1, Range of values is 0 to 0
  1794                           ; switch strategies available:
  1795                           ; Name         Instructions Cycles
  1796                           ; simple_byte            4     3 (average)
  1797                           ; direct_byte           11     8 (fixed)
  1798                           ; jumptable            260     6 (fixed)
  1799                           ;	Chosen strategy is simple_byte
  1800     0284  0855               	movf	??_sprintf+1,w
  1801     0285  3A00               	xorlw	0	; case 0
  1802     0286  1903               	skipnz
  1803     0287  2A89               	goto	l2449
  1804     0288  2B27               	goto	l2273
  1805     0289                     l2449:
  1806                           
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 3, Range of values is 0 to 105
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte           10     6 (average)
  1812                           ; jumptable            260     6 (fixed)
  1813                           ;	Chosen strategy is simple_byte
  1814     0289  0854               	movf	??_sprintf,w
  1815     028A  3A00               	xorlw	0	; case 0
  1816     028B  1903               	skipnz
  1817     028C  2B37               	goto	l2275
  1818     028D  3A64               	xorlw	100	; case 100
  1819     028E  1903               	skipnz
  1820     028F  2A94               	goto	l2235
  1821     0290  3A0D               	xorlw	13	; case 105
  1822     0291  1903               	skipnz
  1823     0292  2A94               	goto	l2235
  1824     0293  2B27               	goto	l2273
  1825     0294                     l2235:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1828     0294  0857               	movf	sprintf@ap,w
  1829     0295  0084               	movwf	4
  1830     0296  1383               	bcf	3,7	;select IRP bank0
  1831     0297  0800               	movf	0,w
  1832     0298  00DA               	movwf	sprintf@val
  1833     0299  0A84               	incf	4,f
  1834     029A  0800               	movf	0,w
  1835     029B  00DB               	movwf	sprintf@val+1
  1836     029C                     l2237:
  1837     029C  3002               	movlw	2
  1838     029D  00D4               	movwf	??_sprintf
  1839     029E  0854               	movf	??_sprintf,w
  1840     029F  07D7               	addwf	sprintf@ap,f
  1841     02A0                     l2239:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1844     02A0  1FDB               	btfss	sprintf@val+1,7
  1845     02A1  2AA3               	goto	u1401
  1846     02A2  2AA4               	goto	u1400
  1847     02A3                     u1401:
  1848     02A3  2AAD               	goto	l2245
  1849     02A4                     u1400:
  1850     02A4                     l2241:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1853     02A4  3003               	movlw	3
  1854     02A5  00D4               	movwf	??_sprintf
  1855     02A6  0854               	movf	??_sprintf,w
  1856     02A7  04D8               	iorwf	sprintf@flag,f
  1857     02A8                     l2243:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1860     02A8  09DA               	comf	sprintf@val,f
  1861     02A9  09DB               	comf	sprintf@val+1,f
  1862     02AA  0ADA               	incf	sprintf@val,f
  1863     02AB  1903               	skipnz
  1864     02AC  0ADB               	incf	sprintf@val+1,f
  1865     02AD                     l2245:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1868     02AD  01DD               	clrf	sprintf@c
  1869     02AE  0ADD               	incf	sprintf@c,f
  1870     02AF                     l2251:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1873     02AF  085D               	movf	sprintf@c,w
  1874     02B0  00D4               	movwf	??_sprintf
  1875     02B1  0754               	addwf	??_sprintf,w
  1876     02B2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1877     02B3  0084               	movwf	4
  1878     02B4  120A  118A  258F  120A  118A  	fcall	stringdir
  1879     02B9  00D5               	movwf	??_sprintf+1
  1880     02BA  120A  118A  258F  120A  118A  	fcall	stringdir
  1881     02BF  00D6               	movwf	??_sprintf+2
  1882     02C0  0856               	movf	??_sprintf+2,w
  1883     02C1  025B               	subwf	sprintf@val+1,w
  1884     02C2  1D03               	skipz
  1885     02C3  2AC6               	goto	u1415
  1886     02C4  0855               	movf	??_sprintf+1,w
  1887     02C5  025A               	subwf	sprintf@val,w
  1888     02C6                     u1415:
  1889     02C6  1803               	skipnc
  1890     02C7  2AC9               	goto	u1411
  1891     02C8  2ACA               	goto	u1410
  1892     02C9                     u1411:
  1893     02C9  2ACB               	goto	l2255
  1894     02CA                     u1410:
  1895     02CA  2AD5               	goto	l2257
  1896     02CB                     l2255:
  1897     02CB  3001               	movlw	1
  1898     02CC  00D4               	movwf	??_sprintf
  1899     02CD  0854               	movf	??_sprintf,w
  1900     02CE  07DD               	addwf	sprintf@c,f
  1901     02CF  3005               	movlw	5
  1902     02D0  065D               	xorwf	sprintf@c,w
  1903     02D1  1D03               	btfss	3,2
  1904     02D2  2AD4               	goto	u1421
  1905     02D3  2AD5               	goto	u1420
  1906     02D4                     u1421:
  1907     02D4  2AAF               	goto	l2251
  1908     02D5                     u1420:
  1909     02D5                     l2257:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1912     02D5  0858               	movf	sprintf@flag,w
  1913     02D6  3903               	andlw	3
  1914     02D7  1903               	btfsc	3,2
  1915     02D8  2ADA               	goto	u1431
  1916     02D9  2ADB               	goto	u1430
  1917     02DA                     u1431:
  1918     02DA  2AE4               	goto	l2263
  1919     02DB                     u1430:
  1920     02DB                     l2259:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1923     02DB  085C               	movf	sprintf@sp,w
  1924     02DC  0084               	movwf	4
  1925     02DD  302D               	movlw	45
  1926     02DE  1383               	bcf	3,7	;select IRP bank0
  1927     02DF  0080               	movwf	0
  1928     02E0                     l2261:
  1929     02E0  3001               	movlw	1
  1930     02E1  00D4               	movwf	??_sprintf
  1931     02E2  0854               	movf	??_sprintf,w
  1932     02E3  07DC               	addwf	sprintf@sp,f
  1933     02E4                     l2263:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1936     02E4  085D               	movf	sprintf@c,w
  1937     02E5  00D9               	movwf	sprintf@prec
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1940     02E6  2B1E               	goto	l2271
  1941     02E7                     l2265:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1944     02E7  300A               	movlw	10
  1945     02E8  00CB               	movwf	___lwmod@divisor
  1946     02E9  3000               	movlw	0
  1947     02EA  00CC               	movwf	___lwmod@divisor+1
  1948     02EB  0859               	movf	sprintf@prec,w
  1949     02EC  00D4               	movwf	??_sprintf
  1950     02ED  0754               	addwf	??_sprintf,w
  1951     02EE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1952     02EF  0084               	movwf	4
  1953     02F0  120A  118A  258F  120A  118A  	fcall	stringdir
  1954     02F5  00F2               	movwf	___lwdiv@divisor
  1955     02F6  120A  118A  258F  120A  118A  	fcall	stringdir
  1956     02FB  00F3               	movwf	___lwdiv@divisor+1
  1957     02FC  085B               	movf	sprintf@val+1,w
  1958     02FD  00F5               	movwf	___lwdiv@dividend+1
  1959     02FE  085A               	movf	sprintf@val,w
  1960     02FF  00F4               	movwf	___lwdiv@dividend
  1961     0300  120A  118A  247F  120A  118A  	fcall	___lwdiv
  1962     0305  0873               	movf	?___lwdiv+1,w
  1963     0306  1283               	bcf	3,5	;RP0=0, select bank0
  1964     0307  1303               	bcf	3,6	;RP1=0, select bank0
  1965     0308  00CE               	movwf	___lwmod@dividend+1
  1966     0309  0872               	movf	?___lwdiv,w
  1967     030A  00CD               	movwf	___lwmod@dividend
  1968     030B  120A  118A  2549  120A  118A  	fcall	___lwmod
  1969     0310  1283               	bcf	3,5	;RP0=0, select bank0
  1970     0311  1303               	bcf	3,6	;RP1=0, select bank0
  1971     0312  084B               	movf	?___lwmod,w
  1972     0313  3E30               	addlw	48
  1973     0314  00DD               	movwf	sprintf@c
  1974     0315                     l2267:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1977     0315  085C               	movf	sprintf@sp,w
  1978     0316  0084               	movwf	4
  1979     0317  085D               	movf	sprintf@c,w
  1980     0318  1383               	bcf	3,7	;select IRP bank0
  1981     0319  0080               	movwf	0
  1982     031A                     l2269:
  1983     031A  3001               	movlw	1
  1984     031B  00D4               	movwf	??_sprintf
  1985     031C  0854               	movf	??_sprintf,w
  1986     031D  07DC               	addwf	sprintf@sp,f
  1987     031E                     l2271:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1990     031E  30FF               	movlw	255
  1991     031F  00D4               	movwf	??_sprintf
  1992     0320  0854               	movf	??_sprintf,w
  1993     0321  07D9               	addwf	sprintf@prec,f
  1994     0322  0A59               	incf	sprintf@prec,w
  1995     0323  1D03               	btfss	3,2
  1996     0324  2B26               	goto	u1441
  1997     0325  2B27               	goto	u1440
  1998     0326                     u1441:
  1999     0326  2AE7               	goto	l2265
  2000     0327                     u1440:
  2001     0327                     l2273:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2004     0327  3001               	movlw	1
  2005     0328  07D1               	addwf	sprintf@f,f
  2006     0329  30FF               	movlw	-1
  2007     032A  0751               	addwf	sprintf@f,w
  2008     032B  0084               	movwf	4
  2009     032C  120A  118A  258F  120A  118A  	fcall	stringdir
  2010     0331  00DD               	movwf	sprintf@c
  2011     0332  085D               	movf	sprintf@c,w
  2012     0333  1D03               	btfss	3,2
  2013     0334  2B36               	goto	u1451
  2014     0335  2B37               	goto	u1450
  2015     0336                     u1451:
  2016     0336  2A66               	goto	l2223
  2017     0337                     u1450:
  2018     0337                     l2275:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2021     0337  085C               	movf	sprintf@sp,w
  2022     0338  0084               	movwf	4
  2023     0339  1383               	bcf	3,7	;select IRP bank0
  2024     033A  0180               	clrf	0
  2025     033B                     l440:
  2026     033B  0008               	return
  2027     033C                     __end_of_sprintf:
  2028                           
  2029                           	psect	text3
  2030     0549                     __ptext3:	
  2031 ;; *************** function ___lwmod *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         2    0[BANK0 ] unsigned int 
  2036 ;;  dividend        2    2[BANK0 ] unsigned int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  counter         1    5[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2    0[BANK0 ] unsigned int 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       4       0       0       0
  2049 ;;      Locals:         0       1       0       0       0
  2050 ;;      Temps:          0       1       0       0       0
  2051 ;;      Totals:         0       6       0       0       0
  2052 ;;Total ram usage:        6 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_sprintf
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062     0549                     ___lwmod:	
  2063                           ;psect for function ___lwmod
  2064                           
  2065     0549                     l2137:	
  2066                           ;incstack = 0
  2067                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2068                           
  2069     0549  1283               	bcf	3,5	;RP0=0, select bank0
  2070     054A  1303               	bcf	3,6	;RP1=0, select bank0
  2071     054B  084B               	movf	___lwmod@divisor,w
  2072     054C  044C               	iorwf	___lwmod@divisor+1,w
  2073     054D  1903               	btfsc	3,2
  2074     054E  2D50               	goto	u1281
  2075     054F  2D51               	goto	u1280
  2076     0550                     u1281:
  2077     0550  2D80               	goto	l2155
  2078     0551                     u1280:
  2079     0551                     l2139:
  2080     0551  01D0               	clrf	___lwmod@counter
  2081     0552  0AD0               	incf	___lwmod@counter,f
  2082     0553  2D5F               	goto	l2145
  2083     0554                     l2141:
  2084     0554  3001               	movlw	1
  2085     0555                     u1295:
  2086     0555  1003               	clrc
  2087     0556  0DCB               	rlf	___lwmod@divisor,f
  2088     0557  0DCC               	rlf	___lwmod@divisor+1,f
  2089     0558  3EFF               	addlw	-1
  2090     0559  1D03               	skipz
  2091     055A  2D55               	goto	u1295
  2092     055B                     l2143:
  2093     055B  3001               	movlw	1
  2094     055C  00CF               	movwf	??___lwmod
  2095     055D  084F               	movf	??___lwmod,w
  2096     055E  07D0               	addwf	___lwmod@counter,f
  2097     055F                     l2145:
  2098     055F  1FCC               	btfss	___lwmod@divisor+1,7
  2099     0560  2D62               	goto	u1301
  2100     0561  2D63               	goto	u1300
  2101     0562                     u1301:
  2102     0562  2D54               	goto	l2141
  2103     0563                     u1300:
  2104     0563                     l2147:
  2105     0563  084C               	movf	___lwmod@divisor+1,w
  2106     0564  024E               	subwf	___lwmod@dividend+1,w
  2107     0565  1D03               	skipz
  2108     0566  2D69               	goto	u1315
  2109     0567  084B               	movf	___lwmod@divisor,w
  2110     0568  024D               	subwf	___lwmod@dividend,w
  2111     0569                     u1315:
  2112     0569  1C03               	skipc
  2113     056A  2D6C               	goto	u1311
  2114     056B  2D6D               	goto	u1310
  2115     056C                     u1311:
  2116     056C  2D73               	goto	l2151
  2117     056D                     u1310:
  2118     056D                     l2149:
  2119     056D  084B               	movf	___lwmod@divisor,w
  2120     056E  02CD               	subwf	___lwmod@dividend,f
  2121     056F  084C               	movf	___lwmod@divisor+1,w
  2122     0570  1C03               	skipc
  2123     0571  03CE               	decf	___lwmod@dividend+1,f
  2124     0572  02CE               	subwf	___lwmod@dividend+1,f
  2125     0573                     l2151:
  2126     0573  3001               	movlw	1
  2127     0574                     u1325:
  2128     0574  1003               	clrc
  2129     0575  0CCC               	rrf	___lwmod@divisor+1,f
  2130     0576  0CCB               	rrf	___lwmod@divisor,f
  2131     0577  3EFF               	addlw	-1
  2132     0578  1D03               	skipz
  2133     0579  2D74               	goto	u1325
  2134     057A                     l2153:
  2135     057A  3001               	movlw	1
  2136     057B  02D0               	subwf	___lwmod@counter,f
  2137     057C  1D03               	btfss	3,2
  2138     057D  2D7F               	goto	u1331
  2139     057E  2D80               	goto	u1330
  2140     057F                     u1331:
  2141     057F  2D63               	goto	l2147
  2142     0580                     u1330:
  2143     0580                     l2155:
  2144     0580  084E               	movf	___lwmod@dividend+1,w
  2145     0581  00CC               	movwf	?___lwmod+1
  2146     0582  084D               	movf	___lwmod@dividend,w
  2147     0583  00CB               	movwf	?___lwmod
  2148     0584                     l726:
  2149     0584  0008               	return
  2150     0585                     __end_of___lwmod:
  2151                           
  2152                           	psect	text4
  2153     047F                     __ptext4:	
  2154 ;; *************** function ___lwdiv *****************
  2155 ;; Defined at:
  2156 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  divisor         2    2[COMMON] unsigned int 
  2159 ;;  dividend        2    4[COMMON] unsigned int 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  quotient        2    7[COMMON] unsigned int 
  2162 ;;  counter         1    9[COMMON] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    2[COMMON] unsigned int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         4       0       0       0       0
  2173 ;;      Locals:         3       0       0       0       0
  2174 ;;      Temps:          1       0       0       0       0
  2175 ;;      Totals:         8       0       0       0       0
  2176 ;;Total ram usage:        8 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_sprintf
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     047F                     ___lwdiv:	
  2187                           ;psect for function ___lwdiv
  2188                           
  2189     047F                     l1669:	
  2190                           ;incstack = 0
  2191                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2192                           
  2193     047F  01F7               	clrf	___lwdiv@quotient
  2194     0480  01F8               	clrf	___lwdiv@quotient+1
  2195     0481                     l1671:
  2196     0481  0872               	movf	___lwdiv@divisor,w
  2197     0482  0473               	iorwf	___lwdiv@divisor+1,w
  2198     0483  1903               	btfsc	3,2
  2199     0484  2C86               	goto	u801
  2200     0485  2C87               	goto	u800
  2201     0486                     u801:
  2202     0486  2CBE               	goto	l1691
  2203     0487                     u800:
  2204     0487                     l1673:
  2205     0487  01F9               	clrf	___lwdiv@counter
  2206     0488  0AF9               	incf	___lwdiv@counter,f
  2207     0489  2C95               	goto	l1679
  2208     048A                     l1675:
  2209     048A  3001               	movlw	1
  2210     048B                     u815:
  2211     048B  1003               	clrc
  2212     048C  0DF2               	rlf	___lwdiv@divisor,f
  2213     048D  0DF3               	rlf	___lwdiv@divisor+1,f
  2214     048E  3EFF               	addlw	-1
  2215     048F  1D03               	skipz
  2216     0490  2C8B               	goto	u815
  2217     0491                     l1677:
  2218     0491  3001               	movlw	1
  2219     0492  00F6               	movwf	??___lwdiv
  2220     0493  0876               	movf	??___lwdiv,w
  2221     0494  07F9               	addwf	___lwdiv@counter,f
  2222     0495                     l1679:
  2223     0495  1FF3               	btfss	___lwdiv@divisor+1,7
  2224     0496  2C98               	goto	u821
  2225     0497  2C99               	goto	u820
  2226     0498                     u821:
  2227     0498  2C8A               	goto	l1675
  2228     0499                     u820:
  2229     0499                     l1681:
  2230     0499  3001               	movlw	1
  2231     049A                     u835:
  2232     049A  1003               	clrc
  2233     049B  0DF7               	rlf	___lwdiv@quotient,f
  2234     049C  0DF8               	rlf	___lwdiv@quotient+1,f
  2235     049D  3EFF               	addlw	-1
  2236     049E  1D03               	skipz
  2237     049F  2C9A               	goto	u835
  2238     04A0  0873               	movf	___lwdiv@divisor+1,w
  2239     04A1  0275               	subwf	___lwdiv@dividend+1,w
  2240     04A2  1D03               	skipz
  2241     04A3  2CA6               	goto	u845
  2242     04A4  0872               	movf	___lwdiv@divisor,w
  2243     04A5  0274               	subwf	___lwdiv@dividend,w
  2244     04A6                     u845:
  2245     04A6  1C03               	skipc
  2246     04A7  2CA9               	goto	u841
  2247     04A8  2CAA               	goto	u840
  2248     04A9                     u841:
  2249     04A9  2CB1               	goto	l1687
  2250     04AA                     u840:
  2251     04AA                     l1683:
  2252     04AA  0872               	movf	___lwdiv@divisor,w
  2253     04AB  02F4               	subwf	___lwdiv@dividend,f
  2254     04AC  0873               	movf	___lwdiv@divisor+1,w
  2255     04AD  1C03               	skipc
  2256     04AE  03F5               	decf	___lwdiv@dividend+1,f
  2257     04AF  02F5               	subwf	___lwdiv@dividend+1,f
  2258     04B0                     l1685:
  2259     04B0  1477               	bsf	___lwdiv@quotient,0
  2260     04B1                     l1687:
  2261     04B1  3001               	movlw	1
  2262     04B2                     u855:
  2263     04B2  1003               	clrc
  2264     04B3  0CF3               	rrf	___lwdiv@divisor+1,f
  2265     04B4  0CF2               	rrf	___lwdiv@divisor,f
  2266     04B5  3EFF               	addlw	-1
  2267     04B6  1D03               	skipz
  2268     04B7  2CB2               	goto	u855
  2269     04B8                     l1689:
  2270     04B8  3001               	movlw	1
  2271     04B9  02F9               	subwf	___lwdiv@counter,f
  2272     04BA  1D03               	btfss	3,2
  2273     04BB  2CBD               	goto	u861
  2274     04BC  2CBE               	goto	u860
  2275     04BD                     u861:
  2276     04BD  2C99               	goto	l1681
  2277     04BE                     u860:
  2278     04BE                     l1691:
  2279     04BE  0878               	movf	___lwdiv@quotient+1,w
  2280     04BF  00F3               	movwf	?___lwdiv+1
  2281     04C0  0877               	movf	___lwdiv@quotient,w
  2282     04C1  00F2               	movwf	?___lwdiv
  2283     04C2                     l716:
  2284     04C2  0008               	return
  2285     04C3                     __end_of___lwdiv:
  2286                           
  2287                           	psect	text5
  2288     0507                     __ptext5:	
  2289 ;; *************** function _setup *****************
  2290 ;; Defined at:
  2291 ;;		line 233 in file "Master_Sensores.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0
  2308 ;;      Totals:         0       0       0       0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 3
  2312 ;; This function calls:
  2313 ;;		_I2C_Master_Init
  2314 ;;		_UART_RX_config
  2315 ;;		_UART_TX_config
  2316 ;; This function is called by:
  2317 ;;		_main
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321     0507                     _setup:	
  2322                           ;psect for function _setup
  2323                           
  2324     0507                     l2191:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2327                           
  2328                           
  2329                           ;Master_Sensores.c: 234:     ANSEL = 0;
  2330     0507  1683               	bsf	3,5	;RP0=1, select bank3
  2331     0508  1703               	bsf	3,6	;RP1=1, select bank3
  2332     0509  0188               	clrf	8	;volatile
  2333                           
  2334                           ;Master_Sensores.c: 235:     ANSELH = 0;
  2335     050A  0189               	clrf	9	;volatile
  2336                           
  2337                           ;Master_Sensores.c: 238:     TRISA = 0;
  2338     050B  1683               	bsf	3,5	;RP0=1, select bank1
  2339     050C  1303               	bcf	3,6	;RP1=0, select bank1
  2340     050D  0185               	clrf	5	;volatile
  2341     050E                     l2193:
  2342                           
  2343                           ;Master_Sensores.c: 239:     TRISB = 0b11111111;
  2344     050E  30FF               	movlw	255
  2345     050F  0086               	movwf	6	;volatile
  2346     0510                     l2195:
  2347                           
  2348                           ;Master_Sensores.c: 240:     TRISC = 0b11000000;
  2349     0510  30C0               	movlw	192
  2350     0511  0087               	movwf	7	;volatile
  2351                           
  2352                           ;Master_Sensores.c: 241:     TRISD = 0;
  2353     0512  0188               	clrf	8	;volatile
  2354                           
  2355                           ;Master_Sensores.c: 242:     TRISE = 0;
  2356     0513  0189               	clrf	9	;volatile
  2357                           
  2358                           ;Master_Sensores.c: 245:     PORTA = 0;
  2359     0514  1283               	bcf	3,5	;RP0=0, select bank0
  2360     0515  1303               	bcf	3,6	;RP1=0, select bank0
  2361     0516  0185               	clrf	5	;volatile
  2362                           
  2363                           ;Master_Sensores.c: 246:     PORTB = 0;
  2364     0517  0186               	clrf	6	;volatile
  2365                           
  2366                           ;Master_Sensores.c: 247:     PORTC = 0;
  2367     0518  0187               	clrf	7	;volatile
  2368                           
  2369                           ;Master_Sensores.c: 248:     PORTD = 0;
  2370     0519  0188               	clrf	8	;volatile
  2371                           
  2372                           ;Master_Sensores.c: 249:     PORTE = 0;
  2373     051A  0189               	clrf	9	;volatile
  2374     051B                     l2197:
  2375                           
  2376                           ;Master_Sensores.c: 251:     OPTION_REGbits.nRBPU = 0;
  2377     051B  1683               	bsf	3,5	;RP0=1, select bank1
  2378     051C  1303               	bcf	3,6	;RP1=0, select bank1
  2379     051D  1381               	bcf	1,7	;volatile
  2380     051E                     l2199:
  2381                           
  2382                           ;Master_Sensores.c: 252:     IOCB = 0b11111111;
  2383     051E  30FF               	movlw	255
  2384     051F  0096               	movwf	22	;volatile
  2385     0520                     l2201:
  2386                           
  2387                           ;Master_Sensores.c: 254:     OSCCONbits.IRCF = 0b111;
  2388     0520  3070               	movlw	112
  2389     0521  048F               	iorwf	15,f	;volatile
  2390     0522                     l2203:
  2391                           
  2392                           ;Master_Sensores.c: 255:     OSCCONbits.SCS = 1;
  2393     0522  140F               	bsf	15,0	;volatile
  2394     0523                     l2205:
  2395                           
  2396                           ;Master_Sensores.c: 257:     INTCONbits.RBIF = 0;
  2397     0523  100B               	bcf	11,0	;volatile
  2398     0524                     l2207:
  2399                           
  2400                           ;Master_Sensores.c: 258:     INTCONbits.RBIE = 1;
  2401     0524  158B               	bsf	11,3	;volatile
  2402     0525                     l2209:
  2403                           
  2404                           ;Master_Sensores.c: 259:     INTCONbits.GIE = 1;
  2405     0525  178B               	bsf	11,7	;volatile
  2406     0526                     l2211:
  2407                           
  2408                           ;Master_Sensores.c: 260:     INTCONbits.PEIE = 1;
  2409     0526  170B               	bsf	11,6	;volatile
  2410     0527                     l2213:
  2411                           
  2412                           ;Master_Sensores.c: 261:     UART_RX_config(9600);
  2413     0527  3080               	movlw	128
  2414     0528  00F2               	movwf	UART_RX_config@baudrate
  2415     0529  3025               	movlw	37
  2416     052A  00F3               	movwf	UART_RX_config@baudrate+1
  2417     052B  120A  118A  23EF  120A  118A  	fcall	_UART_RX_config
  2418     0530                     l2215:
  2419                           
  2420                           ;Master_Sensores.c: 262:     UART_TX_config(9600);
  2421     0530  3080               	movlw	128
  2422     0531  00F2               	movwf	UART_TX_config@baudrate
  2423     0532  3025               	movlw	37
  2424     0533  00F3               	movwf	UART_TX_config@baudrate+1
  2425     0534  120A  118A  2439  120A  118A  	fcall	_UART_TX_config
  2426     0539                     l2217:
  2427                           
  2428                           ;Master_Sensores.c: 264:     I2C_Master_Init(100000);
  2429     0539  3000               	movlw	0
  2430     053A  1283               	bcf	3,5	;RP0=0, select bank0
  2431     053B  1303               	bcf	3,6	;RP1=0, select bank0
  2432     053C  00D4               	movwf	I2C_Master_Init@c+3
  2433     053D  3001               	movlw	1
  2434     053E  00D3               	movwf	I2C_Master_Init@c+2
  2435     053F  3086               	movlw	134
  2436     0540  00D2               	movwf	I2C_Master_Init@c+1
  2437     0541  30A0               	movlw	160
  2438     0542  00D1               	movwf	I2C_Master_Init@c
  2439     0543  120A  118A  25BD  120A  118A  	fcall	_I2C_Master_Init
  2440     0548                     l221:
  2441     0548  0008               	return
  2442     0549                     __end_of_setup:
  2443                           
  2444                           	psect	text6
  2445     0439                     __ptext6:	
  2446 ;; *************** function _UART_TX_config *****************
  2447 ;; Defined at:
  2448 ;;		line 48 in file "USART.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  baudrate        2    2[COMMON] unsigned int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         2       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:         2       0       0       0       0
  2466 ;;Total ram usage:        2 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_setup
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     0439                     _UART_TX_config:	
  2477                           ;psect for function _UART_TX_config
  2478                           
  2479     0439                     l1649:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0]
  2482                           
  2483                           
  2484                           ;USART.c: 49:     TXSTAbits.BRGH = 0;
  2485     0439  1683               	bsf	3,5	;RP0=1, select bank1
  2486     043A  1303               	bcf	3,6	;RP1=0, select bank1
  2487     043B  1118               	bcf	24,2	;volatile
  2488                           
  2489                           ;USART.c: 50:     BRG16 = 0;
  2490     043C  1683               	bsf	3,5	;RP0=1, select bank3
  2491     043D  1703               	bsf	3,6	;RP1=1, select bank3
  2492     043E  1187               	bcf	7,3	;volatile
  2493                           
  2494                           ;USART.c: 51:     TXSTAbits.SYNC = 0;
  2495     043F  1683               	bsf	3,5	;RP0=1, select bank1
  2496     0440  1303               	bcf	3,6	;RP1=0, select bank1
  2497     0441  1218               	bcf	24,4	;volatile
  2498                           
  2499                           ;USART.c: 52:     TXSTAbits.TXEN = 1;
  2500     0442  1698               	bsf	24,5	;volatile
  2501                           
  2502                           ;USART.c: 53:     TXIF = 0;
  2503     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2504     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2505     0445  120C               	bcf	12,4	;volatile
  2506     0446                     l1651:
  2507                           
  2508                           ;USART.c: 57:     if(baudrate == 1200){
  2509     0446  30B0               	movlw	176
  2510     0447  0672               	xorwf	UART_TX_config@baudrate,w
  2511     0448  3004               	movlw	4
  2512     0449  1903               	skipnz
  2513     044A  0673               	xorwf	UART_TX_config@baudrate+1,w
  2514     044B  1D03               	btfss	3,2
  2515     044C  2C4E               	goto	u761
  2516     044D  2C4F               	goto	u760
  2517     044E                     u761:
  2518     044E  2C54               	goto	l1655
  2519     044F                     u760:
  2520     044F                     l1653:
  2521                           
  2522                           ;USART.c: 58:         SPBRG = 103;
  2523     044F  3067               	movlw	103
  2524     0450  1683               	bsf	3,5	;RP0=1, select bank1
  2525     0451  1303               	bcf	3,6	;RP1=0, select bank1
  2526     0452  0099               	movwf	25	;volatile
  2527                           
  2528                           ;USART.c: 59:     }
  2529     0453  2C7E               	goto	l285
  2530     0454                     l1655:
  2531     0454  3060               	movlw	96
  2532     0455  0672               	xorwf	UART_TX_config@baudrate,w
  2533     0456  3009               	movlw	9
  2534     0457  1903               	skipnz
  2535     0458  0673               	xorwf	UART_TX_config@baudrate+1,w
  2536     0459  1D03               	btfss	3,2
  2537     045A  2C5C               	goto	u771
  2538     045B  2C5D               	goto	u770
  2539     045C                     u771:
  2540     045C  2C62               	goto	l1659
  2541     045D                     u770:
  2542     045D                     l1657:
  2543                           
  2544                           ;USART.c: 61:         SPBRG = 51;
  2545     045D  3033               	movlw	51
  2546     045E  1683               	bsf	3,5	;RP0=1, select bank1
  2547     045F  1303               	bcf	3,6	;RP1=0, select bank1
  2548     0460  0099               	movwf	25	;volatile
  2549                           
  2550                           ;USART.c: 62:     }
  2551     0461  2C7E               	goto	l285
  2552     0462                     l1659:
  2553     0462  3080               	movlw	128
  2554     0463  0672               	xorwf	UART_TX_config@baudrate,w
  2555     0464  3025               	movlw	37
  2556     0465  1903               	skipnz
  2557     0466  0673               	xorwf	UART_TX_config@baudrate+1,w
  2558     0467  1D03               	btfss	3,2
  2559     0468  2C6A               	goto	u781
  2560     0469  2C6B               	goto	u780
  2561     046A                     u781:
  2562     046A  2C70               	goto	l1663
  2563     046B                     u780:
  2564     046B                     l1661:
  2565                           
  2566                           ;USART.c: 64:         SPBRG = 12;
  2567     046B  300C               	movlw	12
  2568     046C  1683               	bsf	3,5	;RP0=1, select bank1
  2569     046D  1303               	bcf	3,6	;RP1=0, select bank1
  2570     046E  0099               	movwf	25	;volatile
  2571                           
  2572                           ;USART.c: 65:     }
  2573     046F  2C7E               	goto	l285
  2574     0470                     l1663:
  2575     0470  30B1               	movlw	177
  2576     0471  0672               	xorwf	UART_TX_config@baudrate,w
  2577     0472  3028               	movlw	40
  2578     0473  1903               	skipnz
  2579     0474  0673               	xorwf	UART_TX_config@baudrate+1,w
  2580     0475  1D03               	btfss	3,2
  2581     0476  2C78               	goto	u791
  2582     0477  2C79               	goto	u790
  2583     0478                     u791:
  2584     0478  2C7E               	goto	l279
  2585     0479                     u790:
  2586     0479                     l1665:
  2587                           
  2588                           ;USART.c: 67:         SPBRG = 11;
  2589     0479  300B               	movlw	11
  2590     047A  1683               	bsf	3,5	;RP0=1, select bank1
  2591     047B  1303               	bcf	3,6	;RP1=0, select bank1
  2592     047C  0099               	movwf	25	;volatile
  2593     047D  2C7E               	goto	l285
  2594     047E                     l279:
  2595     047E                     l285:
  2596     047E  0008               	return
  2597     047F                     __end_of_UART_TX_config:
  2598                           
  2599                           	psect	text7
  2600     03EF                     __ptext7:	
  2601 ;; *************** function _UART_RX_config *****************
  2602 ;; Defined at:
  2603 ;;		line 15 in file "USART.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  baudrate        2    2[COMMON] unsigned int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         2       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         2       0       0       0       0
  2621 ;;Total ram usage:        2 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_setup
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631     03EF                     _UART_RX_config:	
  2632                           ;psect for function _UART_RX_config
  2633                           
  2634     03EF                     l1617:	
  2635                           ;incstack = 0
  2636                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0]
  2637                           
  2638                           
  2639                           ;USART.c: 17:     SPBRGH = 0;
  2640     03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2641     03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2642     03F1  019A               	clrf	26	;volatile
  2643     03F2                     l1619:
  2644                           
  2645                           ;USART.c: 18:     BRG16 = 0;
  2646     03F2  1683               	bsf	3,5	;RP0=1, select bank3
  2647     03F3  1703               	bsf	3,6	;RP1=1, select bank3
  2648     03F4  1187               	bcf	7,3	;volatile
  2649     03F5                     l1621:
  2650                           
  2651                           ;USART.c: 21:     CREN = 1;
  2652     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2653     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2654     03F7  1618               	bsf	24,4	;volatile
  2655     03F8                     l1623:
  2656                           
  2657                           ;USART.c: 22:     SPEN = 1;
  2658     03F8  1798               	bsf	24,7	;volatile
  2659     03F9                     l1625:
  2660                           
  2661                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2662     03F9  1318               	bcf	24,6	;volatile
  2663     03FA                     l1627:
  2664                           
  2665                           ;USART.c: 28:     PIE1bits.RCIE = 1;
  2666     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2667     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2668     03FC  168C               	bsf	12,5	;volatile
  2669     03FD                     l1629:
  2670                           
  2671                           ;USART.c: 29:     PIR1bits.RCIF = 0;
  2672     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2673     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2674     03FF  128C               	bcf	12,5	;volatile
  2675     0400                     l1631:
  2676                           
  2677                           ;USART.c: 33:     if(baudrate == 1200){
  2678     0400  30B0               	movlw	176
  2679     0401  0672               	xorwf	UART_RX_config@baudrate,w
  2680     0402  3004               	movlw	4
  2681     0403  1903               	skipnz
  2682     0404  0673               	xorwf	UART_RX_config@baudrate+1,w
  2683     0405  1D03               	btfss	3,2
  2684     0406  2C08               	goto	u721
  2685     0407  2C09               	goto	u720
  2686     0408                     u721:
  2687     0408  2C0E               	goto	l1635
  2688     0409                     u720:
  2689     0409                     l1633:
  2690                           
  2691                           ;USART.c: 34:         SPBRG = 103;
  2692     0409  3067               	movlw	103
  2693     040A  1683               	bsf	3,5	;RP0=1, select bank1
  2694     040B  1303               	bcf	3,6	;RP1=0, select bank1
  2695     040C  0099               	movwf	25	;volatile
  2696                           
  2697                           ;USART.c: 35:     }
  2698     040D  2C38               	goto	l275
  2699     040E                     l1635:
  2700     040E  3060               	movlw	96
  2701     040F  0672               	xorwf	UART_RX_config@baudrate,w
  2702     0410  3009               	movlw	9
  2703     0411  1903               	skipnz
  2704     0412  0673               	xorwf	UART_RX_config@baudrate+1,w
  2705     0413  1D03               	btfss	3,2
  2706     0414  2C16               	goto	u731
  2707     0415  2C17               	goto	u730
  2708     0416                     u731:
  2709     0416  2C1C               	goto	l1639
  2710     0417                     u730:
  2711     0417                     l1637:
  2712                           
  2713                           ;USART.c: 37:         SPBRG = 51;
  2714     0417  3033               	movlw	51
  2715     0418  1683               	bsf	3,5	;RP0=1, select bank1
  2716     0419  1303               	bcf	3,6	;RP1=0, select bank1
  2717     041A  0099               	movwf	25	;volatile
  2718                           
  2719                           ;USART.c: 38:     }
  2720     041B  2C38               	goto	l275
  2721     041C                     l1639:
  2722     041C  3080               	movlw	128
  2723     041D  0672               	xorwf	UART_RX_config@baudrate,w
  2724     041E  3025               	movlw	37
  2725     041F  1903               	skipnz
  2726     0420  0673               	xorwf	UART_RX_config@baudrate+1,w
  2727     0421  1D03               	btfss	3,2
  2728     0422  2C24               	goto	u741
  2729     0423  2C25               	goto	u740
  2730     0424                     u741:
  2731     0424  2C2A               	goto	l1643
  2732     0425                     u740:
  2733     0425                     l1641:
  2734                           
  2735                           ;USART.c: 40:         SPBRG = 12;
  2736     0425  300C               	movlw	12
  2737     0426  1683               	bsf	3,5	;RP0=1, select bank1
  2738     0427  1303               	bcf	3,6	;RP1=0, select bank1
  2739     0428  0099               	movwf	25	;volatile
  2740                           
  2741                           ;USART.c: 41:     }
  2742     0429  2C38               	goto	l275
  2743     042A                     l1643:
  2744     042A  30B1               	movlw	177
  2745     042B  0672               	xorwf	UART_RX_config@baudrate,w
  2746     042C  3028               	movlw	40
  2747     042D  1903               	skipnz
  2748     042E  0673               	xorwf	UART_RX_config@baudrate+1,w
  2749     042F  1D03               	btfss	3,2
  2750     0430  2C32               	goto	u751
  2751     0431  2C33               	goto	u750
  2752     0432                     u751:
  2753     0432  2C38               	goto	l269
  2754     0433                     u750:
  2755     0433                     l1645:
  2756                           
  2757                           ;USART.c: 43:         SPBRG = 11;
  2758     0433  300B               	movlw	11
  2759     0434  1683               	bsf	3,5	;RP0=1, select bank1
  2760     0435  1303               	bcf	3,6	;RP1=0, select bank1
  2761     0436  0099               	movwf	25	;volatile
  2762     0437  2C38               	goto	l275
  2763     0438                     l269:
  2764     0438                     l275:
  2765     0438  0008               	return
  2766     0439                     __end_of_UART_RX_config:
  2767                           
  2768                           	psect	text8
  2769     05BD                     __ptext8:	
  2770 ;; *************** function _I2C_Master_Init *****************
  2771 ;; Defined at:
  2772 ;;		line 17 in file "I2C.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  c               4    6[BANK0 ] const unsigned long 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;		None
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, pclath, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       4       0       0       0
  2787 ;;      Locals:         0       0       0       0       0
  2788 ;;      Temps:          0       4       0       0       0
  2789 ;;      Totals:         0       8       0       0       0
  2790 ;;Total ram usage:        8 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 2
  2793 ;; This function calls:
  2794 ;;		___lldiv
  2795 ;; This function is called by:
  2796 ;;		_setup
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800     05BD                     _I2C_Master_Init:	
  2801                           ;psect for function _I2C_Master_Init
  2802                           
  2803     05BD                     l2103:	
  2804                           ;incstack = 0
  2805                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2806                           
  2807                           
  2808                           ;I2C.c: 17: void I2C_Master_Init(const unsigned long c);I2C.c: 18: {;I2C.c: 19:     SSPC
      +                          ON = 0b00101000;
  2809     05BD  3028               	movlw	40
  2810     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2811     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2812     05C0  0094               	movwf	20	;volatile
  2813     05C1                     l2105:
  2814                           
  2815                           ;I2C.c: 20:     SSPCON2 = 0;
  2816     05C1  1683               	bsf	3,5	;RP0=1, select bank1
  2817     05C2  1303               	bcf	3,6	;RP1=0, select bank1
  2818     05C3  0191               	clrf	17	;volatile
  2819     05C4                     l2107:
  2820                           
  2821                           ;I2C.c: 21:     SSPADD = (8000000/(4*c))-1;
  2822     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2823     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2824     05C6  0851               	movf	I2C_Master_Init@c,w
  2825     05C7  00D5               	movwf	??_I2C_Master_Init
  2826     05C8  0852               	movf	I2C_Master_Init@c+1,w
  2827     05C9  00D6               	movwf	??_I2C_Master_Init+1
  2828     05CA  0853               	movf	I2C_Master_Init@c+2,w
  2829     05CB  00D7               	movwf	??_I2C_Master_Init+2
  2830     05CC  0854               	movf	I2C_Master_Init@c+3,w
  2831     05CD  00D8               	movwf	??_I2C_Master_Init+3
  2832     05CE  3002               	movlw	2
  2833     05CF                     u1275:
  2834     05CF  1003               	clrc
  2835     05D0  0DD5               	rlf	??_I2C_Master_Init,f
  2836     05D1  0DD6               	rlf	??_I2C_Master_Init+1,f
  2837     05D2  0DD7               	rlf	??_I2C_Master_Init+2,f
  2838     05D3  0DD8               	rlf	??_I2C_Master_Init+3,f
  2839     05D4                     u1270:
  2840     05D4  3EFF               	addlw	-1
  2841     05D5  1D03               	skipz
  2842     05D6  2DCF               	goto	u1275
  2843     05D7  0858               	movf	??_I2C_Master_Init+3,w
  2844     05D8  00F5               	movwf	___lldiv@divisor+3
  2845     05D9  0857               	movf	??_I2C_Master_Init+2,w
  2846     05DA  00F4               	movwf	___lldiv@divisor+2
  2847     05DB  0856               	movf	??_I2C_Master_Init+1,w
  2848     05DC  00F3               	movwf	___lldiv@divisor+1
  2849     05DD  0855               	movf	??_I2C_Master_Init,w
  2850     05DE  00F2               	movwf	___lldiv@divisor
  2851     05DF  3000               	movlw	0
  2852     05E0  00F9               	movwf	___lldiv@dividend+3
  2853     05E1  307A               	movlw	122
  2854     05E2  00F8               	movwf	___lldiv@dividend+2
  2855     05E3  3012               	movlw	18
  2856     05E4  00F7               	movwf	___lldiv@dividend+1
  2857     05E5  3000               	movlw	0
  2858     05E6  00F6               	movwf	___lldiv@dividend
  2859     05E7  120A  118A  233C  120A  118A  	fcall	___lldiv
  2860     05EC  0872               	movf	?___lldiv,w
  2861     05ED  3EFF               	addlw	255
  2862     05EE  1683               	bsf	3,5	;RP0=1, select bank1
  2863     05EF  1303               	bcf	3,6	;RP1=0, select bank1
  2864     05F0  0093               	movwf	19	;volatile
  2865     05F1                     l2109:
  2866                           
  2867                           ;I2C.c: 22:     SSPSTAT = 0;
  2868     05F1  0194               	clrf	20	;volatile
  2869     05F2                     l2111:
  2870                           
  2871                           ;I2C.c: 23:     TRISCbits.TRISC3 = 1;
  2872     05F2  1587               	bsf	7,3	;volatile
  2873     05F3                     l2113:
  2874                           
  2875                           ;I2C.c: 24:     TRISCbits.TRISC4 = 1;
  2876     05F3  1607               	bsf	7,4	;volatile
  2877     05F4                     l29:
  2878     05F4  0008               	return
  2879     05F5                     __end_of_I2C_Master_Init:
  2880                           
  2881                           	psect	text9
  2882     033C                     __ptext9:	
  2883 ;; *************** function ___lldiv *****************
  2884 ;; Defined at:
  2885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  divisor         4    2[COMMON] unsigned long 
  2888 ;;  dividend        4    6[COMMON] unsigned long 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  quotient        4    1[BANK0 ] unsigned long 
  2891 ;;  counter         1    5[BANK0 ] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  4    2[COMMON] unsigned long 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         8       0       0       0       0
  2902 ;;      Locals:         0       5       0       0       0
  2903 ;;      Temps:          0       1       0       0       0
  2904 ;;      Totals:         8       6       0       0       0
  2905 ;;Total ram usage:       14 bytes
  2906 ;; Hardware stack levels used: 1
  2907 ;; Hardware stack levels required when called: 1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_I2C_Master_Init
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915     033C                     ___lldiv:	
  2916                           ;psect for function ___lldiv
  2917                           
  2918     033C                     l2079:	
  2919                           ;incstack = 0
  2920                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2921                           
  2922     033C  3000               	movlw	0
  2923     033D  1283               	bcf	3,5	;RP0=0, select bank0
  2924     033E  1303               	bcf	3,6	;RP1=0, select bank0
  2925     033F  00CF               	movwf	___lldiv@quotient+3
  2926     0340  3000               	movlw	0
  2927     0341  00CE               	movwf	___lldiv@quotient+2
  2928     0342  3000               	movlw	0
  2929     0343  00CD               	movwf	___lldiv@quotient+1
  2930     0344  3000               	movlw	0
  2931     0345  00CC               	movwf	___lldiv@quotient
  2932     0346  0875               	movf	___lldiv@divisor+3,w
  2933     0347  0474               	iorwf	___lldiv@divisor+2,w
  2934     0348  0473               	iorwf	___lldiv@divisor+1,w
  2935     0349  0472               	iorwf	___lldiv@divisor,w
  2936     034A  1903               	skipnz
  2937     034B  2B4D               	goto	u1201
  2938     034C  2B4E               	goto	u1200
  2939     034D                     u1201:
  2940     034D  2B9B               	goto	l2099
  2941     034E                     u1200:
  2942     034E                     l2081:
  2943     034E  01D0               	clrf	___lldiv@counter
  2944     034F  0AD0               	incf	___lldiv@counter,f
  2945     0350  2B5E               	goto	l2085
  2946     0351                     l2083:
  2947     0351  3001               	movlw	1
  2948     0352  00CB               	movwf	??___lldiv
  2949     0353                     u1215:
  2950     0353  1003               	clrc
  2951     0354  0DF2               	rlf	___lldiv@divisor,f
  2952     0355  0DF3               	rlf	___lldiv@divisor+1,f
  2953     0356  0DF4               	rlf	___lldiv@divisor+2,f
  2954     0357  0DF5               	rlf	___lldiv@divisor+3,f
  2955     0358  0BCB               	decfsz	??___lldiv,f
  2956     0359  2B53               	goto	u1215
  2957     035A  3001               	movlw	1
  2958     035B  00CB               	movwf	??___lldiv
  2959     035C  084B               	movf	??___lldiv,w
  2960     035D  07D0               	addwf	___lldiv@counter,f
  2961     035E                     l2085:
  2962     035E  1FF5               	btfss	___lldiv@divisor+3,7
  2963     035F  2B61               	goto	u1221
  2964     0360  2B62               	goto	u1220
  2965     0361                     u1221:
  2966     0361  2B51               	goto	l2083
  2967     0362                     u1220:
  2968     0362                     l2087:
  2969     0362  3001               	movlw	1
  2970     0363  00CB               	movwf	??___lldiv
  2971     0364                     u1235:
  2972     0364  1003               	clrc
  2973     0365  0DCC               	rlf	___lldiv@quotient,f
  2974     0366  0DCD               	rlf	___lldiv@quotient+1,f
  2975     0367  0DCE               	rlf	___lldiv@quotient+2,f
  2976     0368  0DCF               	rlf	___lldiv@quotient+3,f
  2977     0369  0BCB               	decfsz	??___lldiv,f
  2978     036A  2B64               	goto	u1235
  2979     036B                     l2089:
  2980     036B  0875               	movf	___lldiv@divisor+3,w
  2981     036C  0279               	subwf	___lldiv@dividend+3,w
  2982     036D  1D03               	skipz
  2983     036E  2B79               	goto	u1245
  2984     036F  0874               	movf	___lldiv@divisor+2,w
  2985     0370  0278               	subwf	___lldiv@dividend+2,w
  2986     0371  1D03               	skipz
  2987     0372  2B79               	goto	u1245
  2988     0373  0873               	movf	___lldiv@divisor+1,w
  2989     0374  0277               	subwf	___lldiv@dividend+1,w
  2990     0375  1D03               	skipz
  2991     0376  2B79               	goto	u1245
  2992     0377  0872               	movf	___lldiv@divisor,w
  2993     0378  0276               	subwf	___lldiv@dividend,w
  2994     0379                     u1245:
  2995     0379  1C03               	skipc
  2996     037A  2B7C               	goto	u1241
  2997     037B  2B7D               	goto	u1240
  2998     037C                     u1241:
  2999     037C  2B8C               	goto	l2095
  3000     037D                     u1240:
  3001     037D                     l2091:
  3002     037D  0872               	movf	___lldiv@divisor,w
  3003     037E  02F6               	subwf	___lldiv@dividend,f
  3004     037F  0873               	movf	___lldiv@divisor+1,w
  3005     0380  1C03               	skipc
  3006     0381  0F73               	incfsz	___lldiv@divisor+1,w
  3007     0382  02F7               	subwf	___lldiv@dividend+1,f
  3008     0383  0874               	movf	___lldiv@divisor+2,w
  3009     0384  1C03               	skipc
  3010     0385  0F74               	incfsz	___lldiv@divisor+2,w
  3011     0386  02F8               	subwf	___lldiv@dividend+2,f
  3012     0387  0875               	movf	___lldiv@divisor+3,w
  3013     0388  1C03               	skipc
  3014     0389  0F75               	incfsz	___lldiv@divisor+3,w
  3015     038A  02F9               	subwf	___lldiv@dividend+3,f
  3016     038B                     l2093:
  3017     038B  144C               	bsf	___lldiv@quotient,0
  3018     038C                     l2095:
  3019     038C  3001               	movlw	1
  3020     038D                     u1255:
  3021     038D  1003               	clrc
  3022     038E  0CF5               	rrf	___lldiv@divisor+3,f
  3023     038F  0CF4               	rrf	___lldiv@divisor+2,f
  3024     0390  0CF3               	rrf	___lldiv@divisor+1,f
  3025     0391  0CF2               	rrf	___lldiv@divisor,f
  3026     0392  3EFF               	addlw	-1
  3027     0393  1D03               	skipz
  3028     0394  2B8D               	goto	u1255
  3029     0395                     l2097:
  3030     0395  3001               	movlw	1
  3031     0396  02D0               	subwf	___lldiv@counter,f
  3032     0397  1D03               	btfss	3,2
  3033     0398  2B9A               	goto	u1261
  3034     0399  2B9B               	goto	u1260
  3035     039A                     u1261:
  3036     039A  2B62               	goto	l2087
  3037     039B                     u1260:
  3038     039B                     l2099:
  3039     039B  084F               	movf	___lldiv@quotient+3,w
  3040     039C  00F5               	movwf	?___lldiv+3
  3041     039D  084E               	movf	___lldiv@quotient+2,w
  3042     039E  00F4               	movwf	?___lldiv+2
  3043     039F  084D               	movf	___lldiv@quotient+1,w
  3044     03A0  00F3               	movwf	?___lldiv+1
  3045     03A1  084C               	movf	___lldiv@quotient,w
  3046     03A2  00F2               	movwf	?___lldiv
  3047     03A3                     l480:
  3048     03A3  0008               	return
  3049     03A4                     __end_of___lldiv:
  3050                           
  3051                           	psect	text10
  3052     064F                     __ptext10:	
  3053 ;; *************** function _UART_write_char *****************
  3054 ;; Defined at:
  3055 ;;		line 104 in file "USART.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  txt             1    wreg     PTR unsigned char 
  3058 ;;		 -> Ultra(4), infra(4), foto(4), 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  txt             1    5[COMMON] PTR unsigned char 
  3061 ;;		 -> Ultra(4), infra(4), foto(4), 
  3062 ;;  i               2    3[COMMON] int 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3072 ;;      Params:         0       0       0       0       0
  3073 ;;      Locals:         3       0       0       0       0
  3074 ;;      Temps:          1       0       0       0       0
  3075 ;;      Totals:         4       0       0       0       0
  3076 ;;Total ram usage:        4 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086     064F                     _UART_write_char:	
  3087                           ;psect for function _UART_write_char
  3088                           
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in _UART_write_char: [wreg-fsr0h+status,2+status,0]
  3092                           ;UART_write_char@txt stored from wreg
  3093     064F  00F5               	movwf	UART_write_char@txt
  3094     0650                     l1821:
  3095                           
  3096                           ;USART.c: 105:     int i;;USART.c: 106:     for(i = 0; txt[i] != '\0'; i++){
  3097     0650  01F3               	clrf	UART_write_char@i
  3098     0651  01F4               	clrf	UART_write_char@i+1
  3099     0652  2E67               	goto	l1827
  3100     0653                     l301:
  3101     0653  1283               	bcf	3,5	;RP0=0, select bank0
  3102     0654  1303               	bcf	3,6	;RP1=0, select bank0
  3103     0655  1E0C               	btfss	12,4	;volatile
  3104     0656  2E58               	goto	u1011
  3105     0657  2E59               	goto	u1010
  3106     0658                     u1011:
  3107     0658  2E53               	goto	l301
  3108     0659                     u1010:
  3109     0659                     l1823:
  3110                           
  3111                           ;USART.c: 110:         TXREG = txt[i];
  3112     0659  0873               	movf	UART_write_char@i,w
  3113     065A  0775               	addwf	UART_write_char@txt,w
  3114     065B  00F2               	movwf	??_UART_write_char
  3115     065C  0872               	movf	??_UART_write_char,w
  3116     065D  0084               	movwf	4
  3117     065E  1383               	bcf	3,7	;select IRP bank0
  3118     065F  0800               	movf	0,w
  3119     0660  0099               	movwf	25	;volatile
  3120     0661                     l1825:
  3121                           
  3122                           ;USART.c: 111:     }
  3123     0661  3001               	movlw	1
  3124     0662  07F3               	addwf	UART_write_char@i,f
  3125     0663  1803               	skipnc
  3126     0664  0AF4               	incf	UART_write_char@i+1,f
  3127     0665  3000               	movlw	0
  3128     0666  07F4               	addwf	UART_write_char@i+1,f
  3129     0667                     l1827:
  3130     0667  0873               	movf	UART_write_char@i,w
  3131     0668  0775               	addwf	UART_write_char@txt,w
  3132     0669  00F2               	movwf	??_UART_write_char
  3133     066A  0872               	movf	??_UART_write_char,w
  3134     066B  0084               	movwf	4
  3135     066C  1383               	bcf	3,7	;select IRP bank0
  3136     066D  0800               	movf	0,w
  3137     066E  1D03               	btfss	3,2
  3138     066F  2E71               	goto	u1021
  3139     0670  2E72               	goto	u1020
  3140     0671                     u1021:
  3141     0671  2E53               	goto	l301
  3142     0672                     u1020:
  3143     0672                     l305:
  3144     0672  0008               	return
  3145     0673                     __end_of_UART_write_char:
  3146                           
  3147                           	psect	text11
  3148     04C3                     __ptext11:	
  3149 ;; *************** function _Lcd_Write_String8 *****************
  3150 ;; Defined at:
  3151 ;;		line 75 in file "LCD8bits.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  a               2    6[COMMON] PTR unsigned char 
  3154 ;;		 -> STR_12(6), STR_11(5), STR_10(6), Infra(4), 
  3155 ;;		 -> Foto(4), Ultra(4), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  i               2    8[COMMON] int 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         2       0       0       0       0
  3168 ;;      Locals:         2       0       0       0       0
  3169 ;;      Temps:          0       3       0       0       0
  3170 ;;      Totals:         4       3       0       0       0
  3171 ;;Total ram usage:        7 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 3
  3174 ;; This function calls:
  3175 ;;		_Lcd_Write_Char8
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181     04C3                     _Lcd_Write_String8:	
  3182                           ;psect for function _Lcd_Write_String8
  3183                           
  3184     04C3                     l2183:	
  3185                           ;incstack = 0
  3186                           ; Regs used in _Lcd_Write_String8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3187                           
  3188                           
  3189                           ;LCD8bits.c: 76:     int i;;LCD8bits.c: 77:     for (i = 0; a[i] != '\0'; i++)
  3190     04C3  01F8               	clrf	Lcd_Write_String8@i
  3191     04C4  01F9               	clrf	Lcd_Write_String8@i+1
  3192     04C5  2CE8               	goto	l2189
  3193     04C6                     l2185:
  3194                           
  3195                           ;LCD8bits.c: 78:         Lcd_Write_Char8(a[i]);
  3196     04C6  0878               	movf	Lcd_Write_String8@i,w
  3197     04C7  0776               	addwf	Lcd_Write_String8@a,w
  3198     04C8  00CC               	movwf	??_Lcd_Write_String8+1
  3199     04C9  0877               	movf	Lcd_Write_String8@a+1,w
  3200     04CA  00CB               	movwf	??_Lcd_Write_String8
  3201     04CB  1803               	skipnc
  3202     04CC  0ACB               	incf	??_Lcd_Write_String8,f
  3203     04CD  1FF8               	btfss	Lcd_Write_String8@i,7
  3204     04CE  2CD0               	goto	u1360
  3205     04CF  03CB               	decf	??_Lcd_Write_String8,f
  3206     04D0                     u1360:
  3207     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  3208     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  3209     04D2  084B               	movf	??_Lcd_Write_String8,w
  3210     04D3  00CD               	movwf	??_Lcd_Write_String8+2
  3211     04D4  084D               	movf	??_Lcd_Write_String8+2,w
  3212     04D5  00FF               	movwf	btemp+1
  3213     04D6  084C               	movf	??_Lcd_Write_String8+1,w
  3214     04D7  0084               	movwf	4
  3215     04D8  120A  118A  2585  120A  118A  	fcall	stringtab
  3216     04DD  120A  118A  26CD  120A  118A  	fcall	_Lcd_Write_Char8
  3217     04E2                     l2187:
  3218     04E2  3001               	movlw	1
  3219     04E3  07F8               	addwf	Lcd_Write_String8@i,f
  3220     04E4  1803               	skipnc
  3221     04E5  0AF9               	incf	Lcd_Write_String8@i+1,f
  3222     04E6  3000               	movlw	0
  3223     04E7  07F9               	addwf	Lcd_Write_String8@i+1,f
  3224     04E8                     l2189:
  3225     04E8  0878               	movf	Lcd_Write_String8@i,w
  3226     04E9  0776               	addwf	Lcd_Write_String8@a,w
  3227     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3228     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3229     04EC  00CC               	movwf	??_Lcd_Write_String8+1
  3230     04ED  0877               	movf	Lcd_Write_String8@a+1,w
  3231     04EE  00CB               	movwf	??_Lcd_Write_String8
  3232     04EF  1803               	skipnc
  3233     04F0  0ACB               	incf	??_Lcd_Write_String8,f
  3234     04F1  1FF8               	btfss	Lcd_Write_String8@i,7
  3235     04F2  2CF4               	goto	u1370
  3236     04F3  03CB               	decf	??_Lcd_Write_String8,f
  3237     04F4                     u1370:
  3238     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3239     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  3240     04F6  084B               	movf	??_Lcd_Write_String8,w
  3241     04F7  00CD               	movwf	??_Lcd_Write_String8+2
  3242     04F8  084D               	movf	??_Lcd_Write_String8+2,w
  3243     04F9  00FF               	movwf	btemp+1
  3244     04FA  084C               	movf	??_Lcd_Write_String8+1,w
  3245     04FB  0084               	movwf	4
  3246     04FC  120A  118A  2585  120A  118A  	fcall	stringtab
  3247     0501  3A00               	xorlw	0
  3248     0502  1D03               	skipz
  3249     0503  2D05               	goto	u1381
  3250     0504  2D06               	goto	u1380
  3251     0505                     u1381:
  3252     0505  2CC6               	goto	l2185
  3253     0506                     u1380:
  3254     0506                     l88:
  3255     0506  0008               	return
  3256     0507                     __end_of_Lcd_Write_String8:
  3257                           
  3258                           	psect	text12
  3259     06CD                     __ptext12:	
  3260 ;; *************** function _Lcd_Write_Char8 *****************
  3261 ;; Defined at:
  3262 ;;		line 63 in file "LCD8bits.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  a               1    wreg     unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  a               1    5[COMMON] unsigned char 
  3267 ;;  y               1    4[COMMON] unsigned char 
  3268 ;;  temp            1    0        unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       0       0       0       0
  3279 ;;      Locals:         2       0       0       0       0
  3280 ;;      Temps:          1       0       0       0       0
  3281 ;;      Totals:         3       0       0       0       0
  3282 ;;Total ram usage:        3 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 2
  3285 ;; This function calls:
  3286 ;;		_Lcd_Port8
  3287 ;; This function is called by:
  3288 ;;		_Lcd_Write_String8
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292     06CD                     _Lcd_Write_Char8:	
  3293                           ;psect for function _Lcd_Write_Char8
  3294                           
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in _Lcd_Write_Char8: [wreg+status,2+status,0+pclath+cstack]
  3298                           ;Lcd_Write_Char8@a stored from wreg
  3299     06CD  00F5               	movwf	Lcd_Write_Char8@a
  3300     06CE                     l2125:
  3301                           
  3302                           ;LCD8bits.c: 66:     y = a;
  3303     06CE  0875               	movf	Lcd_Write_Char8@a,w
  3304     06CF  00F4               	movwf	Lcd_Write_Char8@y
  3305     06D0                     l2127:
  3306                           
  3307                           ;LCD8bits.c: 67:     PORTEbits.RE0 = 1;
  3308     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3309     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  3310     06D2  1409               	bsf	9,0	;volatile
  3311     06D3                     l2129:
  3312                           
  3313                           ;LCD8bits.c: 68:     Lcd_Port8(y);
  3314     06D3  0874               	movf	Lcd_Write_Char8@y,w
  3315     06D4  120A  118A  2723  120A  118A  	fcall	_Lcd_Port8
  3316     06D9                     l2131:
  3317                           
  3318                           ;LCD8bits.c: 69:     PORTEbits.RE1 = 1;
  3319     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3320     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3321     06DB  1489               	bsf	9,1	;volatile
  3322     06DC                     l2133:
  3323                           
  3324                           ;LCD8bits.c: 70:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3325     06DC  301A               	movlw	26
  3326     06DD  00F3               	movwf	??_Lcd_Write_Char8
  3327     06DE                     u1597:
  3328     06DE  0BF3               	decfsz	??_Lcd_Write_Char8,f
  3329     06DF  2EDE               	goto	u1597
  3330     06E0  0000               	nop
  3331     06E1                     l2135:
  3332                           
  3333                           ;LCD8bits.c: 71:     PORTEbits.RE1 = 0;
  3334     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3335     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  3336     06E3  1089               	bcf	9,1	;volatile
  3337     06E4                     l82:
  3338     06E4  0008               	return
  3339     06E5                     __end_of_Lcd_Write_Char8:
  3340                           
  3341                           	psect	text13
  3342     0673                     __ptext13:	
  3343 ;; *************** function _Lcd_Set_Cursor8 *****************
  3344 ;; Defined at:
  3345 ;;		line 33 in file "LCD8bits.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  a               1    wreg     unsigned char 
  3348 ;;  b               1    6[COMMON] unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  a               1    7[COMMON] unsigned char 
  3351 ;;  temp            1    8[COMMON] unsigned char 
  3352 ;;  y               1    0        unsigned char 
  3353 ;;  z               1    0        unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0, pclath, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3363 ;;      Params:         1       0       0       0       0
  3364 ;;      Locals:         2       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0
  3366 ;;      Totals:         3       0       0       0       0
  3367 ;;Total ram usage:        3 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 3
  3370 ;; This function calls:
  3371 ;;		_Lcd_Cmd8
  3372 ;; This function is called by:
  3373 ;;		_main
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377     0673                     _Lcd_Set_Cursor8:	
  3378                           ;psect for function _Lcd_Set_Cursor8
  3379                           
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _Lcd_Set_Cursor8: [wreg+status,2+status,0+pclath+cstack]
  3383                           ;Lcd_Set_Cursor8@a stored from wreg
  3384     0673  00F7               	movwf	Lcd_Set_Cursor8@a
  3385     0674                     l2161:
  3386                           
  3387                           ;LCD8bits.c: 34:     char temp, z, y;;LCD8bits.c: 35:     if (a == 1) {
  3388     0674  0377               	decf	Lcd_Set_Cursor8@a,w
  3389     0675  1D03               	btfss	3,2
  3390     0676  2E78               	goto	u1341
  3391     0677  2E79               	goto	u1340
  3392     0678                     u1341:
  3393     0678  2E83               	goto	l2167
  3394     0679                     u1340:
  3395     0679                     l2163:
  3396                           
  3397                           ;LCD8bits.c: 36:         temp = 0x80 + b - 1;
  3398     0679  0876               	movf	Lcd_Set_Cursor8@b,w
  3399     067A  3E7F               	addlw	127
  3400     067B  00F8               	movwf	Lcd_Set_Cursor8@temp
  3401     067C                     l2165:
  3402                           
  3403                           ;LCD8bits.c: 37:         Lcd_Cmd8(temp);
  3404     067C  0878               	movf	Lcd_Set_Cursor8@temp,w
  3405     067D  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3406                           
  3407                           ;LCD8bits.c: 38:     } else if (a == 2) {
  3408     0682  2E92               	goto	l76
  3409     0683                     l2167:
  3410     0683  3002               	movlw	2
  3411     0684  0677               	xorwf	Lcd_Set_Cursor8@a,w
  3412     0685  1D03               	btfss	3,2
  3413     0686  2E88               	goto	u1351
  3414     0687  2E89               	goto	u1350
  3415     0688                     u1351:
  3416     0688  2E92               	goto	l76
  3417     0689                     u1350:
  3418     0689                     l2169:
  3419                           
  3420                           ;LCD8bits.c: 39:         temp = 0xC0 + b - 1;
  3421     0689  0876               	movf	Lcd_Set_Cursor8@b,w
  3422     068A  3EBF               	addlw	191
  3423     068B  00F8               	movwf	Lcd_Set_Cursor8@temp
  3424     068C                     l2171:
  3425                           
  3426                           ;LCD8bits.c: 40:         Lcd_Cmd8(temp);
  3427     068C  0878               	movf	Lcd_Set_Cursor8@temp,w
  3428     068D  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3429     0692                     l76:
  3430     0692  0008               	return
  3431     0693                     __end_of_Lcd_Set_Cursor8:
  3432                           
  3433                           	psect	text14
  3434     03A4                     __ptext14:	
  3435 ;; *************** function _Lcd_Init8 *****************
  3436 ;; Defined at:
  3437 ;;		line 44 in file "LCD8bits.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0
  3453 ;;      Temps:          2       0       0       0       0
  3454 ;;      Totals:         2       0       0       0       0
  3455 ;;Total ram usage:        2 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 3
  3458 ;; This function calls:
  3459 ;;		_Lcd_Cmd8
  3460 ;;		_Lcd_Port8
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     03A4                     _Lcd_Init8:	
  3467                           ;psect for function _Lcd_Init8
  3468                           
  3469     03A4                     l2173:	
  3470                           ;incstack = 0
  3471                           ; Regs used in _Lcd_Init8: [wreg+status,2+status,0+pclath+cstack]
  3472                           
  3473                           
  3474                           ;LCD8bits.c: 45:     Lcd_Port8(0x00);
  3475     03A4  3000               	movlw	0
  3476     03A5  120A  118A  2723  120A  118A  	fcall	_Lcd_Port8
  3477     03AA                     l2175:
  3478                           
  3479                           ;LCD8bits.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3480     03AA  3034               	movlw	52
  3481     03AB  00F7               	movwf	??_Lcd_Init8+1
  3482     03AC  30F1               	movlw	241
  3483     03AD  00F6               	movwf	??_Lcd_Init8
  3484     03AE                     u1607:
  3485     03AE  0BF6               	decfsz	??_Lcd_Init8,f
  3486     03AF  2BAE               	goto	u1607
  3487     03B0  0BF7               	decfsz	??_Lcd_Init8+1,f
  3488     03B1  2BAE               	goto	u1607
  3489     03B2  2BB3               	nop2
  3490     03B3                     l2177:
  3491                           
  3492                           ;LCD8bits.c: 47:     Lcd_Cmd8(0x30);
  3493     03B3  3030               	movlw	48
  3494     03B4  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3495                           
  3496                           ;LCD8bits.c: 48:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3497     03B9  300D               	movlw	13
  3498     03BA  00F7               	movwf	??_Lcd_Init8+1
  3499     03BB  30FB               	movlw	251
  3500     03BC  00F6               	movwf	??_Lcd_Init8
  3501     03BD                     u1617:
  3502     03BD  0BF6               	decfsz	??_Lcd_Init8,f
  3503     03BE  2BBD               	goto	u1617
  3504     03BF  0BF7               	decfsz	??_Lcd_Init8+1,f
  3505     03C0  2BBD               	goto	u1617
  3506     03C1  2BC2               	nop2
  3507     03C2                     l2179:
  3508                           
  3509                           ;LCD8bits.c: 49:     Lcd_Cmd8(0x30);
  3510     03C2  3030               	movlw	48
  3511     03C3  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3512     03C8                     l2181:
  3513                           
  3514                           ;LCD8bits.c: 50:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3515     03C8  301D               	movlw	29
  3516     03C9  00F7               	movwf	??_Lcd_Init8+1
  3517     03CA  3091               	movlw	145
  3518     03CB  00F6               	movwf	??_Lcd_Init8
  3519     03CC                     u1627:
  3520     03CC  0BF6               	decfsz	??_Lcd_Init8,f
  3521     03CD  2BCC               	goto	u1627
  3522     03CE  0BF7               	decfsz	??_Lcd_Init8+1,f
  3523     03CF  2BCC               	goto	u1627
  3524                           
  3525                           ;LCD8bits.c: 51:     Lcd_Cmd8(0x30);
  3526     03D0  3030               	movlw	48
  3527     03D1  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3528                           
  3529                           ;LCD8bits.c: 53:     Lcd_Cmd8(0x3C);
  3530     03D6  303C               	movlw	60
  3531     03D7  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3532                           
  3533                           ;LCD8bits.c: 57:     Lcd_Cmd8(0x0C);
  3534     03DC  300C               	movlw	12
  3535     03DD  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3536                           
  3537                           ;LCD8bits.c: 58:     Lcd_Cmd8(0x01);
  3538     03E2  3001               	movlw	1
  3539     03E3  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3540                           
  3541                           ;LCD8bits.c: 60:     Lcd_Cmd8(0x06);
  3542     03E8  3006               	movlw	6
  3543     03E9  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3544     03EE                     l79:
  3545     03EE  0008               	return
  3546     03EF                     __end_of_Lcd_Init8:
  3547                           
  3548                           	psect	text15
  3549     06E5                     __ptext15:	
  3550 ;; *************** function _Lcd_Clear8 *****************
  3551 ;; Defined at:
  3552 ;;		line 28 in file "LCD8bits.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 3
  3573 ;; This function calls:
  3574 ;;		_Lcd_Cmd8
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580     06E5                     _Lcd_Clear8:	
  3581                           ;psect for function _Lcd_Clear8
  3582                           
  3583     06E5                     l2159:	
  3584                           ;incstack = 0
  3585                           ; Regs used in _Lcd_Clear8: [wreg+status,2+status,0+pclath+cstack]
  3586                           
  3587                           
  3588                           ;LCD8bits.c: 29:     Lcd_Cmd8(0);
  3589     06E5  3000               	movlw	0
  3590     06E6  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3591                           
  3592                           ;LCD8bits.c: 30:     Lcd_Cmd8(1);
  3593     06EB  3001               	movlw	1
  3594     06EC  120A  118A  26B3  120A  118A  	fcall	_Lcd_Cmd8
  3595     06F1                     l70:
  3596     06F1  0008               	return
  3597     06F2                     __end_of_Lcd_Clear8:
  3598                           
  3599                           	psect	text16
  3600     06B3                     __ptext16:	
  3601 ;; *************** function _Lcd_Cmd8 *****************
  3602 ;; Defined at:
  3603 ;;		line 20 in file "LCD8bits.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  a               1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  a               1    5[COMMON] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, pclath, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         0       0       0       0       0
  3618 ;;      Locals:         1       0       0       0       0
  3619 ;;      Temps:          2       0       0       0       0
  3620 ;;      Totals:         3       0       0       0       0
  3621 ;;Total ram usage:        3 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; Hardware stack levels required when called: 2
  3624 ;; This function calls:
  3625 ;;		_Lcd_Port8
  3626 ;; This function is called by:
  3627 ;;		_Lcd_Clear8
  3628 ;;		_Lcd_Set_Cursor8
  3629 ;;		_Lcd_Init8
  3630 ;;		_Lcd_Shift_Right8
  3631 ;;		_Lcd_Shift_Left8
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635     06B3                     _Lcd_Cmd8:	
  3636                           ;psect for function _Lcd_Cmd8
  3637                           
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _Lcd_Cmd8: [wreg+status,2+status,0+pclath+cstack]
  3641                           ;Lcd_Cmd8@a stored from wreg
  3642     06B3  00F5               	movwf	Lcd_Cmd8@a
  3643     06B4                     l2115:
  3644                           
  3645                           ;LCD8bits.c: 21:     PORTEbits.RE0 = 0;
  3646     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3647     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3648     06B6  1009               	bcf	9,0	;volatile
  3649     06B7                     l2117:
  3650                           
  3651                           ;LCD8bits.c: 22:     Lcd_Port8(a);
  3652     06B7  0875               	movf	Lcd_Cmd8@a,w
  3653     06B8  120A  118A  2723  120A  118A  	fcall	_Lcd_Port8
  3654     06BD                     l2119:
  3655                           
  3656                           ;LCD8bits.c: 23:     PORTEbits.RE1 = 1;
  3657     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3658     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3659     06BF  1489               	bsf	9,1	;volatile
  3660     06C0                     l2121:
  3661                           
  3662                           ;LCD8bits.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3663     06C0  300B               	movlw	11
  3664     06C1  00F4               	movwf	??_Lcd_Cmd8+1
  3665     06C2  3062               	movlw	98
  3666     06C3  00F3               	movwf	??_Lcd_Cmd8
  3667     06C4                     u1637:
  3668     06C4  0BF3               	decfsz	??_Lcd_Cmd8,f
  3669     06C5  2EC4               	goto	u1637
  3670     06C6  0BF4               	decfsz	??_Lcd_Cmd8+1,f
  3671     06C7  2EC4               	goto	u1637
  3672     06C8  0000               	nop
  3673     06C9                     l2123:
  3674                           
  3675                           ;LCD8bits.c: 25:     PORTEbits.RE1 = 0;
  3676     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3677     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  3678     06CB  1089               	bcf	9,1	;volatile
  3679     06CC                     l67:
  3680     06CC  0008               	return
  3681     06CD                     __end_of_Lcd_Cmd8:
  3682                           
  3683                           	psect	text17
  3684     0723                     __ptext17:	
  3685 ;; *************** function _Lcd_Port8 *****************
  3686 ;; Defined at:
  3687 ;;		line 16 in file "LCD8bits.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  a               1    wreg     unsigned char 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  a               1    2[COMMON] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       0       0       0       0
  3702 ;;      Locals:         1       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0
  3704 ;;      Totals:         1       0       0       0       0
  3705 ;;Total ram usage:        1 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		_Lcd_Cmd8
  3712 ;;		_Lcd_Init8
  3713 ;;		_Lcd_Write_Char8
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717     0723                     _Lcd_Port8:	
  3718                           ;psect for function _Lcd_Port8
  3719                           
  3720                           
  3721                           ;incstack = 0
  3722                           ; Regs used in _Lcd_Port8: [wreg]
  3723                           ;Lcd_Port8@a stored from wreg
  3724     0723  00F2               	movwf	Lcd_Port8@a
  3725     0724                     l2077:
  3726                           
  3727                           ;LCD8bits.c: 17:     PORTD = a;
  3728     0724  0872               	movf	Lcd_Port8@a,w
  3729     0725  1283               	bcf	3,5	;RP0=0, select bank0
  3730     0726  1303               	bcf	3,6	;RP1=0, select bank0
  3731     0727  0088               	movwf	8	;volatile
  3732     0728                     l64:
  3733     0728  0008               	return
  3734     0729                     __end_of_Lcd_Port8:
  3735                           
  3736                           	psect	text18
  3737     06FF                     __ptext18:	
  3738 ;; *************** function _I2C_Master_Write *****************
  3739 ;; Defined at:
  3740 ;;		line 66 in file "I2C.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  d               2    2[COMMON] unsigned int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         2       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0
  3757 ;;      Totals:         2       0       0       0       0
  3758 ;;Total ram usage:        2 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 2
  3761 ;; This function calls:
  3762 ;;		_I2C_Master_Wait
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768     06FF                     _I2C_Master_Write:	
  3769                           ;psect for function _I2C_Master_Write
  3770                           
  3771     06FF                     l1725:	
  3772                           ;incstack = 0
  3773                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3774                           
  3775                           
  3776                           ;I2C.c: 66: void I2C_Master_Write(unsigned d);I2C.c: 67: {;I2C.c: 68:     I2C_Master_Wai
      +                          t();
  3777     06FF  120A  118A  26F2  120A  118A  	fcall	_I2C_Master_Wait
  3778     0704                     l1727:
  3779                           
  3780                           ;I2C.c: 69:     SSPBUF = d;
  3781     0704  0872               	movf	I2C_Master_Write@d,w
  3782     0705  1283               	bcf	3,5	;RP0=0, select bank0
  3783     0706  1303               	bcf	3,6	;RP1=0, select bank0
  3784     0707  0093               	movwf	19	;volatile
  3785     0708                     l47:
  3786     0708  0008               	return
  3787     0709                     __end_of_I2C_Master_Write:
  3788                           
  3789                           	psect	text19
  3790     0709                     __ptext19:	
  3791 ;; *************** function _I2C_Master_Stop *****************
  3792 ;; Defined at:
  3793 ;;		line 56 in file "I2C.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, pclath, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 2
  3814 ;; This function calls:
  3815 ;;		_I2C_Master_Wait
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821     0709                     _I2C_Master_Stop:	
  3822                           ;psect for function _I2C_Master_Stop
  3823                           
  3824     0709                     l1721:	
  3825                           ;incstack = 0
  3826                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3827                           
  3828                           
  3829                           ;I2C.c: 58:     I2C_Master_Wait();
  3830     0709  120A  118A  26F2  120A  118A  	fcall	_I2C_Master_Wait
  3831     070E                     l1723:
  3832                           
  3833                           ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  3834     070E  1683               	bsf	3,5	;RP0=1, select bank1
  3835     070F  1303               	bcf	3,6	;RP1=0, select bank1
  3836     0710  1511               	bsf	17,2	;volatile
  3837     0711                     l44:
  3838     0711  0008               	return
  3839     0712                     __end_of_I2C_Master_Stop:
  3840                           
  3841                           	psect	text20
  3842     0712                     __ptext20:	
  3843 ;; *************** function _I2C_Master_Start *****************
  3844 ;; Defined at:
  3845 ;;		line 40 in file "I2C.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 2
  3866 ;; This function calls:
  3867 ;;		_I2C_Master_Wait
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873     0712                     _I2C_Master_Start:	
  3874                           ;psect for function _I2C_Master_Start
  3875                           
  3876     0712                     l1717:	
  3877                           ;incstack = 0
  3878                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3879                           
  3880                           
  3881                           ;I2C.c: 42:     I2C_Master_Wait();
  3882     0712  120A  118A  26F2  120A  118A  	fcall	_I2C_Master_Wait
  3883     0717                     l1719:
  3884                           
  3885                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  3886     0717  1683               	bsf	3,5	;RP0=1, select bank1
  3887     0718  1303               	bcf	3,6	;RP1=0, select bank1
  3888     0719  1411               	bsf	17,0	;volatile
  3889     071A                     l38:
  3890     071A  0008               	return
  3891     071B                     __end_of_I2C_Master_Start:
  3892                           
  3893                           	psect	text21
  3894     05F5                     __ptext21:	
  3895 ;; *************** function _I2C_Master_Read *****************
  3896 ;; Defined at:
  3897 ;;		line 75 in file "I2C.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  a               2    2[COMMON] unsigned short 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  temp            2    6[COMMON] unsigned short 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  2    2[COMMON] unsigned short 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         2       0       0       0       0
  3912 ;;      Locals:         2       0       0       0       0
  3913 ;;      Temps:          2       0       0       0       0
  3914 ;;      Totals:         6       0       0       0       0
  3915 ;;Total ram usage:        6 bytes
  3916 ;; Hardware stack levels used: 1
  3917 ;; Hardware stack levels required when called: 2
  3918 ;; This function calls:
  3919 ;;		_I2C_Master_Wait
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925     05F5                     _I2C_Master_Read:	
  3926                           ;psect for function _I2C_Master_Read
  3927                           
  3928     05F5                     l1729:	
  3929                           ;incstack = 0
  3930                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3931                           
  3932                           
  3933                           ;I2C.c: 75: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 76: {;I2C.c: 77:    
      +                           unsigned short temp;;I2C.c: 78:     I2C_Master_Wait();
  3934     05F5  120A  118A  26F2  120A  118A  	fcall	_I2C_Master_Wait
  3935     05FA                     l1731:
  3936                           
  3937                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  3938     05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3939     05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3940     05FC  1591               	bsf	17,3	;volatile
  3941                           
  3942                           ;I2C.c: 80:     I2C_Master_Wait();
  3943     05FD  120A  118A  26F2  120A  118A  	fcall	_I2C_Master_Wait
  3944     0602                     l1733:
  3945                           
  3946                           ;I2C.c: 81:     temp = SSPBUF;
  3947     0602  1283               	bcf	3,5	;RP0=0, select bank0
  3948     0603  1303               	bcf	3,6	;RP1=0, select bank0
  3949     0604  0813               	movf	19,w	;volatile
  3950     0605  00F4               	movwf	??_I2C_Master_Read
  3951     0606  01F5               	clrf	??_I2C_Master_Read+1
  3952     0607  0874               	movf	??_I2C_Master_Read,w
  3953     0608  00F6               	movwf	I2C_Master_Read@temp
  3954     0609  0875               	movf	??_I2C_Master_Read+1,w
  3955     060A  00F7               	movwf	I2C_Master_Read@temp+1
  3956     060B                     l1735:
  3957                           
  3958                           ;I2C.c: 82:     I2C_Master_Wait();
  3959     060B  120A  118A  26F2  120A  118A  	fcall	_I2C_Master_Wait
  3960     0610                     l1737:
  3961                           
  3962                           ;I2C.c: 83:     if(a == 1){
  3963     0610  0372               	decf	I2C_Master_Read@a,w
  3964     0611  0473               	iorwf	I2C_Master_Read@a+1,w
  3965     0612  1D03               	btfss	3,2
  3966     0613  2E15               	goto	u931
  3967     0614  2E16               	goto	u930
  3968     0615                     u931:
  3969     0615  2E1A               	goto	l50
  3970     0616                     u930:
  3971     0616                     l1739:
  3972                           
  3973                           ;I2C.c: 84:         SSPCON2bits.ACKDT = 0;
  3974     0616  1683               	bsf	3,5	;RP0=1, select bank1
  3975     0617  1303               	bcf	3,6	;RP1=0, select bank1
  3976     0618  1291               	bcf	17,5	;volatile
  3977                           
  3978                           ;I2C.c: 85:     }else{
  3979     0619  2E1D               	goto	l51
  3980     061A                     l50:
  3981                           
  3982                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 1;
  3983     061A  1683               	bsf	3,5	;RP0=1, select bank1
  3984     061B  1303               	bcf	3,6	;RP1=0, select bank1
  3985     061C  1691               	bsf	17,5	;volatile
  3986     061D                     l51:	
  3987                           ;I2C.c: 87:     }
  3988                           
  3989                           
  3990                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  3991     061D  1611               	bsf	17,4	;volatile
  3992     061E                     l1741:
  3993                           
  3994                           ;I2C.c: 89:     return temp;
  3995     061E  0877               	movf	I2C_Master_Read@temp+1,w
  3996     061F  00F3               	movwf	?_I2C_Master_Read+1
  3997     0620  0876               	movf	I2C_Master_Read@temp,w
  3998     0621  00F2               	movwf	?_I2C_Master_Read
  3999     0622                     l52:
  4000     0622  0008               	return
  4001     0623                     __end_of_I2C_Master_Read:
  4002                           
  4003                           	psect	text22
  4004     06F2                     __ptext22:	
  4005 ;; *************** function _I2C_Master_Wait *****************
  4006 ;; Defined at:
  4007 ;;		line 33 in file "I2C.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4021 ;;      Params:         0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0
  4024 ;;      Totals:         0       0       0       0       0
  4025 ;;Total ram usage:        0 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_I2C_Master_Start
  4032 ;;		_I2C_Master_Stop
  4033 ;;		_I2C_Master_Write
  4034 ;;		_I2C_Master_Read
  4035 ;;		_I2C_Master_RepeatedStart
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039     06F2                     _I2C_Master_Wait:	
  4040                           ;psect for function _I2C_Master_Wait
  4041                           
  4042     06F2                     l1591:	
  4043                           ;incstack = 0
  4044                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4045                           
  4046     06F2                     l32:	
  4047                           ;I2C.c: 35:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4048                           
  4049     06F2  1683               	bsf	3,5	;RP0=1, select bank1
  4050     06F3  1303               	bcf	3,6	;RP1=0, select bank1
  4051     06F4  1914               	btfsc	20,2	;volatile
  4052     06F5  2EF7               	goto	u701
  4053     06F6  2EF8               	goto	u700
  4054     06F7                     u701:
  4055     06F7  2EF2               	goto	l32
  4056     06F8                     u700:
  4057     06F8                     l1593:
  4058     06F8  0811               	movf	17,w	;volatile
  4059     06F9  391F               	andlw	31
  4060     06FA  1D03               	btfss	3,2
  4061     06FB  2EFD               	goto	u711
  4062     06FC  2EFE               	goto	u710
  4063     06FD                     u711:
  4064     06FD  2EF2               	goto	l32
  4065     06FE                     u710:
  4066     06FE                     l35:
  4067     06FE  0008               	return
  4068     06FF                     __end_of_I2C_Master_Wait:
  4069                           
  4070                           	psect	text23
  4071     0693                     __ptext23:	
  4072 ;; *************** function _isr *****************
  4073 ;; Defined at:
  4074 ;;		line 87 in file "Master_Sensores.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       0       0       0       0
  4089 ;;      Locals:         0       0       0       0       0
  4090 ;;      Temps:          2       0       0       0       0
  4091 ;;      Totals:         2       0       0       0       0
  4092 ;;Total ram usage:        2 bytes
  4093 ;; Hardware stack levels used: 1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		Interrupt level 1
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101     0693                     _isr:	
  4102                           ;psect for function _isr
  4103                           
  4104     0693                     i1l1899:
  4105                           
  4106                           ;Master_Sensores.c: 88:     if(PIR1bits.RCIF){
  4107     0693  1283               	bcf	3,5	;RP0=0, select bank0
  4108     0694  1303               	bcf	3,6	;RP1=0, select bank0
  4109     0695  1E8C               	btfss	12,5	;volatile
  4110     0696  2E98               	goto	u110_21
  4111     0697  2E99               	goto	u110_20
  4112     0698                     u110_21:
  4113     0698  2E9B               	goto	i1l1903
  4114     0699                     u110_20:
  4115     0699                     i1l1901:
  4116                           
  4117                           ;Master_Sensores.c: 89:         data = RCREG;
  4118     0699  081A               	movf	26,w	;volatile
  4119     069A  00B2               	movwf	_data
  4120     069B                     i1l1903:
  4121                           
  4122                           ;Master_Sensores.c: 92:     if(INTCONbits.RBIF){
  4123     069B  1C0B               	btfss	11,0	;volatile
  4124     069C  2E9E               	goto	u111_21
  4125     069D  2E9F               	goto	u111_20
  4126     069E                     u111_21:
  4127     069E  2EAC               	goto	i1l205
  4128     069F                     u111_20:
  4129     069F                     i1l1905:
  4130                           
  4131                           ;Master_Sensores.c: 93:         if(PORTBbits.RB0 == 0){
  4132     069F  1806               	btfsc	6,0	;volatile
  4133     06A0  2EA2               	goto	u112_21
  4134     06A1  2EA3               	goto	u112_20
  4135     06A2                     u112_21:
  4136     06A2  2EAB               	goto	i1l1911
  4137     06A3                     u112_20:
  4138     06A3                     i1l202:
  4139     06A3  1C06               	btfss	6,0	;volatile
  4140     06A4  2EA6               	goto	u113_21
  4141     06A5  2EA7               	goto	u113_20
  4142     06A6                     u113_21:
  4143     06A6  2EA3               	goto	i1l202
  4144     06A7                     u113_20:
  4145     06A7                     i1l1909:
  4146                           
  4147                           ;Master_Sensores.c: 95:             BANDERA = 255;
  4148     06A7  30FF               	movlw	255
  4149     06A8  00FA               	movwf	_BANDERA
  4150                           
  4151                           ;Master_Sensores.c: 96:             Bandera = 255;
  4152     06A9  30FF               	movlw	255
  4153     06AA  00B1               	movwf	_Bandera
  4154     06AB                     i1l1911:
  4155                           
  4156                           ;Master_Sensores.c: 98:         INTCONbits.RBIF = 0;
  4157     06AB  100B               	bcf	11,0	;volatile
  4158     06AC                     i1l205:
  4159     06AC  0871               	movf	??_isr+1,w
  4160     06AD  008A               	movwf	10
  4161     06AE  0E70               	swapf	??_isr,w
  4162     06AF  0083               	movwf	3
  4163     06B0  0EFE               	swapf	btemp,f
  4164     06B1  0E7E               	swapf	btemp,w
  4165     06B2  0009               	retfie
  4166     06B3                     __end_of_isr:
  4167     007E                     btemp	set	126	;btemp
  4168     007E                     wtemp0	set	126
  4169                           
  4170                           	psect	intentry
  4171     0004                     __pintentry:	
  4172                           ;incstack = 0
  4173                           ; Regs used in _isr: [wreg]
  4174                           
  4175     0004                     interrupt_function:
  4176     007E                     saved_w	set	btemp
  4177     0004  00FE               	movwf	btemp
  4178     0005  0E03               	swapf	3,w
  4179     0006  00F0               	movwf	??_isr
  4180     0007  080A               	movf	10,w
  4181     0008  00F1               	movwf	??_isr+1
  4182     0009  120A  118A  2E93   	ljmp	_isr
  4183                           
  4184                           	psect	idloc
  4185                           
  4186                           ;Config register IDLOC0 @ 0x2000
  4187                           ;	unspecified, using default values
  4188     2000                     	org	8192
  4189     2000  3FFF               	dw	16383
  4190                           
  4191                           ;Config register IDLOC1 @ 0x2001
  4192                           ;	unspecified, using default values
  4193     2001                     	org	8193
  4194     2001  3FFF               	dw	16383
  4195                           
  4196                           ;Config register IDLOC2 @ 0x2002
  4197                           ;	unspecified, using default values
  4198     2002                     	org	8194
  4199     2002  3FFF               	dw	16383
  4200                           
  4201                           ;Config register IDLOC3 @ 0x2003
  4202                           ;	unspecified, using default values
  4203     2003                     	org	8195
  4204     2003  3FFF               	dw	16383
  4205                           
  4206                           	psect	config
  4207                           
  4208                           ;Config register CONFIG1 @ 0x2007
  4209                           ;	Oscillator Selection bits
  4210                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4211                           ;	Watchdog Timer Enable bit
  4212                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4213                           ;	Power-up Timer Enable bit
  4214                           ;	PWRTE = OFF, PWRT disabled
  4215                           ;	RE3/MCLR pin function select bit
  4216                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4217                           ;	Code Protection bit
  4218                           ;	CP = OFF, Program memory code protection is disabled
  4219                           ;	Data Code Protection bit
  4220                           ;	CPD = OFF, Data memory code protection is disabled
  4221                           ;	Brown Out Reset Selection bits
  4222                           ;	BOREN = OFF, BOR disabled
  4223                           ;	Internal External Switchover bit
  4224                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4225                           ;	Fail-Safe Clock Monitor Enabled bit
  4226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4227                           ;	Low Voltage Programming Enable bit
  4228                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4229                           ;	In-Circuit Debugger Mode bit
  4230                           ;	DEBUG = 0x1, unprogramme  4231     2007                     	org	8199
  4232     2007  20D4               	dw	8404
  4233                           
  4234                           ;Config register CONFIG2 @ 0x2008
  4235                           ;	Brown-out Reset Selection bit
  4236                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4237                           ;	Flash Program Memory Self Write Enable bits
  4238                           ;	WRT = OFF, Write protection off
  4239     2008                     	org	8200
  4240     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    10
    Data        0
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 4
		 -> Ultra(BANK0[4]), infra(BANK0[4]), foto(BANK0[4]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 4
		 -> Ultra(BANK0[4]), infra(BANK0[4]), foto(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_13(CODE[4]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> UART_read_char@CONT(BANK0[15]), Infra(BANK0[4]), Foto(BANK0[4]), ultra(BANK0[4]), 
		 -> Ultra(BANK0[4]), infra(BANK0[4]), foto(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_write_char@txt	PTR unsigned char  size(1) Largest target is 4
		 -> Ultra(BANK0[4]), infra(BANK0[4]), foto(BANK0[4]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 4
		 -> Ultra(BANK0[4]), infra(BANK0[4]), foto(BANK0[4]), 

    Lcd_Write_String8@a	PTR unsigned char  size(2) Largest target is 6
		 -> STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), Infra(BANK0[4]), 
		 -> Foto(BANK0[4]), Ultra(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String8
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String8->_Lcd_Write_Char8
    _Lcd_Write_Char8->_Lcd_Port8
    _Lcd_Set_Cursor8->_Lcd_Cmd8
    _Lcd_Init8->_Lcd_Cmd8
    _Lcd_Clear8->_Lcd_Cmd8
    _Lcd_Cmd8->_Lcd_Port8

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    6532
                                             19 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _Lcd_Clear8
                          _Lcd_Init8
                    _Lcd_Set_Cursor8
                  _Lcd_Write_String8
                    _UART_write_char
                              _setup
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     441
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2304
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     870
                    _I2C_Master_Init
                     _UART_RX_config
                     _UART_TX_config
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                       2     0      2     164
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                       2     0      2     164
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_write_char                                      4     4      0     189
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String8                                    7     5      2     800
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                    _Lcd_Write_Char8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char8                                      4     4      0     130
                                              3 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor8                                      5     4      1     794
                                              6 COMMON     3     2      1
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init8                                            2     2      0      93
                                              6 COMMON     2     2      0
                           _Lcd_Cmd8
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear8                                           0     0      0      62
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd8                                             3     3      0      62
                                              3 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port8                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     706
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear8
     _Lcd_Cmd8
       _Lcd_Port8
   _Lcd_Init8
     _Lcd_Cmd8
     _Lcd_Port8
   _Lcd_Set_Cursor8
     _Lcd_Cmd8
   _Lcd_Write_String8
     _Lcd_Write_Char8
       _Lcd_Port8
   _UART_write_char
   _setup
     _I2C_Master_Init
       ___lldiv
     _UART_RX_config
     _UART_TX_config
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcat

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 31 23:51:58 2023

                        pc 0002                         l32 06F2                         l50 061A  
                       l35 06FE                         l51 061D                         l52 0622  
                       l44 0711                         l29 05F4                         l38 071A  
                       l70 06F1                         l47 0708                         l64 0728  
                       l82 06E4                         l67 06CC                         l76 0692  
                       l79 03EE                         l88 0506                         fsr 0004  
         ?_Lcd_Write_Char8 0070                        l301 0653                        l221 0548  
                      l305 0672                        l440 033B         Lcd_Write_String8@a 0076  
                      l275 0438                        l269 0438                        l285 047E  
                      l279 047E                        l480 03A3         Lcd_Write_String8@i 0078  
                      l716 04C2                        l901 064E                        l726 0584  
                      _GIE 005F                        u700 06F8                        u701 06F7  
                      u710 06FE                        u711 06FD                        u720 0409  
                      u800 0487                        u721 0408                        u801 0486  
                      u730 0417                        u731 0416                        u740 0425  
                      u820 0499                        u741 0424                        u821 0498  
                      u750 0433                        u751 0432                        u815 048B  
                      u760 044F                        u840 04AA                        u761 044E  
                      u841 04A9                        u930 0616                        u770 045D  
                      u931 0615                        u771 045C                        u835 049A  
                      u780 046B                        u860 04BE                        u781 046A  
                      u861 04BD                        u845 04A6                        u790 0479  
                      u791 0478                        u855 04B2                        _RX9 00C6  
                      u990 0633                        u991 0632                        _TX9 04C6  
                      _isr 0693                        fsr0 0004                        indf 0000  
                     l2111 05F2                       l2103 05BD                       l2121 06C0  
                     l2113 05F3                       l2105 05C1                       l2201 0520  
                     l2123 06C9                       l2115 06B4                       l2131 06D9  
                     l2107 05C4                       l2211 0526                       l2203 0522  
                     l2117 06B7                       l2133 06DC                       l2125 06CE  
                     l2109 05F1                       l2213 0527                       l2205 0523  
                     l2141 0554                       l2221 0263                       l2301 0057  
                     l2119 06BD                       l2135 06E1                       l2127 06D0  
                     l2215 0530                       l2207 0524                       l2151 0573  
                     l2143 055B                       l2223 0266                       l2311 0079  
                     l2303 005D                       l2161 0674                       l2129 06D3  
                     l2081 034E                       l2217 0539                       l2209 0525  
                     l2153 057A                       l2145 055F                       l2137 0549  
                     l2241 02A4                       l2233 0277                       l2225 026C  
                     l2401 0233                       l2321 00A8                       l2313 0087  
                     l2305 006A                       l2171 068C                       l2163 0679  
                     l2091 037D                       l2083 0351                       l2147 0563  
                     l2139 0551                       l2155 0580                       l2251 02AF  
                     l2243 02A8                       l2235 0294                       l2227 0271  
                     l2411 025A                       l2403 023B                       l2331 00D7  
                     l2323 00B6                       l2315 008C                       l2307 006B  
                     l2077 0724                       l2181 03C8                       l2173 03A4  
                     l2165 067C                       l2093 038B                       l2085 035E  
                     l1621 03F5                       l2149 056D                       l2261 02E0  
                     l2245 02AD                       l2237 029C                       l2229 0276  
                     l2405 0244                       l2341 0106                       l2333 00E5  
                     l2325 00BB                       l2317 009A                       l2309 0070  
                     l2159 06E5                       l2175 03AA                       l2167 0683  
                     l2183 04C3                       l2095 038C                       l2087 0362  
                     l2079 033C                       l1631 0400                       l1623 03F8  
                     l2191 0507                       l2271 031E                       l2263 02E4  
                     l2255 02CB                       l2239 02A0                       l2407 0253  
                     l2351 0135                       l2343 0114                       l2335 00EA  
                     l2327 00C9                       l2319 009F                       l1721 0709  
                     l2177 03B3                       l2169 0689                       l2185 04C6  
                     l2097 0395                       l2089 036B                       l1641 0425  
                     l1633 0409                       l1625 03F9                       l1617 03EF  
                     l2193 050E                       l2265 02E7                       l2257 02D5  
                     l2273 0327                       l2409 0254                       l2361 0164  
                     l2353 0143                       l2345 0119                       l2337 00F8  
                     l2329 00CE                       l1731 05FA                       l1723 070E  
                     l2179 03C2                       l2187 04E2                       l2099 039B  
                     l1643 042A                       l1635 040E                       l1627 03FA  
                     l1619 03F2                       l1651 0446                       l2195 0510  
                     l2267 0315                       l2259 02DB                       l2275 0337  
                     l1811 062B                       l2371 01A1                       l2363 0172  
                     l2355 0148                       l2347 0127                       l2339 00FD  
                     l2291 0032                       l1741 061E                       l1733 0602  
                     l1717 0712                       l1725 06FF                       l2189 04E8  
                     l1821 0650                       l1645 0433                       l1637 0417  
                     l1629 03FD                       l1661 046B                       l1653 044F  
                     l2197 051B                       l2269 031A                       l1813 0634  
                     l2381 01DE                       l2373 01AF                       l2365 0177  
                     l2357 0156                       l2349 012C                       l2293 003F  
                     l1591 06F2                       l1735 060B                       l1719 0717  
                     l1727 0704                       l1823 0659                       l1639 041C  
                     l1663 0470                       l1655 0454                       l2199 051E  
                     l1671 0481                       l1815 063C                       l1807 0624  
                     l2391 0208                       l2383 01E6                       l2375 01BD  
                     l2367 0185                       l2359 015B                       l2295 0042  
                     l2287 001E                       l1593 06F8                       l1737 0610  
                     l1729 05F5                       l1825 0661                       l1665 0479  
                     l1657 045D                       l1649 0439                       l1681 0499  
                     l1673 0487                       l2449 0289                       l1817 064D  
                     l1809 0627                       l2393 0211                       l2385 01EF  
                     l2377 01CB                       l2369 0193                       l2297 0047  
                     l2289 002D                       l1739 0616                       l1827 0667  
                     l1659 0462                       l1683 04AA                       l1675 048A  
                     l1691 04BE                       l2395 0219                       l2387 01F7  
                     l2379 01D9                       l2299 0054                       l1685 04B0  
                     l1677 0491                       l1669 047F                       l2397 0222  
                     l2389 0200                       l1687 04B1                       l1679 0495  
                     l2399 022A                       l1689 04B8                       ?_isr 0070  
                     STR_1 05B7                       STR_2 05B9                       STR_3 05BB  
                     STR_4 05B0                       STR_5 05B0                       STR_6 05B0  
                     STR_7 05B4                       STR_8 05B4                       STR_9 05B4  
                     _BRGH 04C2                       u1000 064D                       _CREN 00C4  
                     u1001 064C                       u1010 0659                       u1011 0658  
                     u1020 0672                       u1021 0671                       u1200 034E  
                     u1201 034D                       u1220 0362                       u1300 0563  
                     u1221 0361                       u1301 0562                       u1310 056D  
                     u1215 0353                       u1311 056C                       u1240 037D  
                     u1400 02A4                       u1241 037C                       u1401 02A3  
                     u1330 0580                       u1410 02CA                       u1235 0364  
                     u1331 057F                       u1315 0569                       u1411 02C9  
                     u1340 0679                       u1260 039B                       u1420 02D5  
                     _IOCB 0096                       u1341 0678                       u1261 039A  
                     u1245 0379                       u1325 0574                       u1421 02D4  
                     u1350 0689                       u1270 05D4                       u1430 02DB  
                     u1351 0688                       u1255 038D                       u1431 02DA  
                     u1415 02C6                       u1360 04D0                       u1280 0551  
                     u1440 0327                       u1281 0550                       u1441 0326  
                     u1370 04F4                       u1450 0337                       u1275 05CF  
                     u1451 0336                       u1380 0506                       u1460 0032  
                     u1381 0505                       u1461 0031                       u1390 026C  
                     u1470 0047                       u1607 03AE                       u1295 0555  
                     u1391 026B                       u1527 0094                       u1471 0046  
                     u1480 005D                       u1617 03BD                       u1537 00C3  
                     u1481 005C                       u1627 03CC                       u1547 00F2  
                     u1637 06C4                       u1557 0121                       u1567 0150  
                     u1577 017F                       u1587 024C                       u1597 06DE  
                     _PEIE 005E                       _SPEN 00C7                       _TRMT 04C1  
                     _TXEN 04C5                       _TXIF 0064                       _SYNC 04C4  
                     _Foto 0043                       _data 0032                       _main 001E  
                     _foto 0037                       btemp 007E                       start 000C  
         UART_write_char@i 0073                 _Lcd_Clear8 06E5                      ??_isr 0070  
         ?_I2C_Master_Init 0051           ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      STR_10 05A5  
                    STR_11 05AB                      STR_12 059F                      _BRG16 0C3B  
                    _ANSEL 0188            __end_of___lldiv 03A4            __end_of___lwdiv 04C3  
                    i1l202 06A3                      i1l205 06AC            __end_of___lwmod 0585  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      _TXREG 0019  
        _Lcd_Write_String8 04C3                      _Infra 003F                      _Total 0020  
                    _Ultra 0047         ?_Lcd_Write_String8 0076                      _datos 007B  
          __end_of_dpowers 059F                      _infra 0033                      _setup 0507  
                    _ultra 003B                      pclath 000A        ??_Lcd_Write_String8 004B  
                    status 0003                      wtemp0 007E            __end_of_sprintf 033C  
         __end_of_Lcd_Cmd8 06CD            __initialization 000F               __end_of_main 0260  
               _Infrarrojo 002A                     ??_main 005E  __end_of_Lcd_Write_String8 0507  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074                     ?_setup 0070                     _ANSELH 0189  
                   u110_20 0699                     u110_21 0698                     u111_20 069F  
                   u111_21 069E                     u112_20 06A3                     u112_21 06A2  
                   u113_20 06A7                     u113_21 06A6                     i1l1901 0699  
                   i1l1911 06AB                     i1l1903 069B                     i1l1905 069F  
                   i1l1909 06A7                     i1l1899 0693                     _SPBRGH 009A  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                ?_Lcd_Clear8 0070  
                ??___lldiv 004B                  ??___lwdiv 0076                  ??___lwmod 004F  
                   _strcat 0623           Lcd_Write_Char8@a 0075           Lcd_Write_Char8@y 0074  
          _UART_write_char 064F                     saved_w 007E                  ??_sprintf 0054  
  __end_of__initialization 001A          __end_of_Lcd_Init8 03EF          __end_of_Lcd_Port8 0729  
           __pcstackCOMMON 0070              __end_of_setup 0549         UART_write_char@txt 0075  
           _OPTION_REGbits 0081                  ?_Lcd_Cmd8 0070                    ??_setup 007A  
               __pbssBANK0 0020                 __pmaintext 001E          ??_Lcd_Set_Cursor8 0077  
               __pintentry 0004    __end_of_UART_write_char 0673                    _BANDERA 007A  
                  ?_strcat 0072                 ??_Lcd_Cmd8 0073                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0585                    _Bandera 0031  
           _UART_RX_config 03EF             _UART_TX_config 0439                    ___lldiv 033C  
                  ___lwdiv 047F                    ___lwmod 0549                    __ptext1 0623  
                  __ptext2 0260                    __ptext3 0549                    __ptext4 047F  
                  __ptext5 0507                    __ptext6 0439                    __ptext7 03EF  
                  __ptext8 05BD                    __ptext9 033C                    _dpowers 0595  
                  _sprintf 0260                    clrloop0 071C       end_of_initialization 001A  
   __end_of_UART_RX_config 0439     __end_of_UART_TX_config 047F                  Lcd_Cmd8@a 0075  
          ___lldiv@divisor 0072            ___lldiv@counter 0050                  _RCSTAbits 0018  
         I2C_Master_Init@c 0051               ??_Lcd_Clear8 0076           I2C_Master_Read@a 0072  
         ?_UART_write_char 0070           Lcd_Set_Cursor8@a 0077           Lcd_Set_Cursor8@b 0076  
                _PORTBbits 0006                  _PORTEbits 0009                  _TRISCbits 0087  
          ?_UART_RX_config 0072         __end_of_Lcd_Clear8 06F2            ?_UART_TX_config 0072  
              _Ultrasonico 002E          ??_Lcd_Write_Char8 0073                  _TXSTAbits 0098  
                _Lcd_Init8 03A4     UART_RX_config@baudrate 0072                  _Lcd_Port8 0723  
           __end_of_strcat 064F        start_initialization 000F                __end_of_isr 06B3  
          _Lcd_Set_Cursor8 0673          ??_I2C_Master_Init 0055          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072                 ?_Lcd_Init8 0070  
               ?_Lcd_Port8 0070                   ??_strcat 0073                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 004B                sprintf@flag 0058  
              sprintf@prec 0059           _I2C_Master_Start 0712           _I2C_Master_Write 06FF  
         ___lwdiv@dividend 0074                   ?___lldiv 0072                   ?___lwdiv 0072  
                 ?___lwmod 004B                  __pstrings 0585    __end_of_Lcd_Set_Cursor8 0693  
         ___lwdiv@quotient 0077                   ?_sprintf 0051          interrupt_function 0004  
                clear_ram0 071B                   _PIE1bits 008C                   _PIR1bits 000C  
              ??_Lcd_Init8 0076                ??_Lcd_Port8 0072                __stringbase 0594  
         ??_UART_RX_config 0074            _Lcd_Write_Char8 06CD                   _Lcd_Cmd8 06B3  
      I2C_Master_Read@temp 0076           ??_UART_TX_config 0074            _Fotoresistencia 002C  
       __end_of__stringtab 0595                 sprintf@val 005A            _I2C_Master_Init 05BD  
          _I2C_Master_Read 05F5            _I2C_Master_Wait 06F2                 strcat@from 0072  
          _I2C_Master_Stop 0709           ?_Lcd_Set_Cursor8 0076            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0079                   __ptext10 064F                   __ptext11 04C3  
                 __ptext20 0712                   __ptext12 06CD                   __ptext21 05F5  
                 __ptext13 0673                   __ptext22 06F2                   __ptext14 03A4  
                 __ptext23 0693                   __ptext15 06E5                   __ptext16 06B3  
                 __ptext17 0723                   __ptext18 06FF                   __ptext19 0709  
                 _contador 0030     UART_TX_config@baudrate 0072        Lcd_Set_Cursor8@temp 0078  
  __end_of_Lcd_Write_Char8 06E5   __end_of_I2C_Master_Start 071B   __end_of_I2C_Master_Write 0709  
               _INTCONbits 000B                   intlevel1 0000                  sprintf@ap 0057  
                sprintf@sp 005C           ___lwmod@dividend 004D           ___lldiv@dividend 0076  
                stringcode 058F                 _OSCCONbits 008F    __end_of_I2C_Master_Init 05F5  
  __end_of_I2C_Master_Read 0623    __end_of_I2C_Master_Wait 06FF                 Lcd_Port8@a 0072  
  __end_of_I2C_Master_Stop 0712                   sprintf@c 005D                   sprintf@f 0051  
                 strcat@cp 0074                   strcat@to 0075           ___lldiv@quotient 004C  
        I2C_Master_Write@d 0072            ___lwmod@divisor 004B            ___lwmod@counter 0050  
                 stringdir 058F                   stringtab 0585                _SSPCON2bits 0091  
        ??_UART_write_char 0072  
