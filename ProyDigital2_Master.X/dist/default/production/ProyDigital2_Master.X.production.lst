

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Aug 28 15:10:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     000E                     	;# 
    86     000F                     	;# 
    87     0010                     	;# 
    88     0011                     	;# 
    89     0012                     	;# 
    90     0013                     	;# 
    91     0014                     	;# 
    92     0015                     	;# 
    93     0015                     	;# 
    94     0016                     	;# 
    95     0017                     	;# 
    96     0018                     	;# 
    97     0019                     	;# 
    98     001A                     	;# 
    99     001B                     	;# 
   100     001B                     	;# 
   101     001C                     	;# 
   102     001D                     	;# 
   103     001E                     	;# 
   104     001F                     	;# 
   105     0081                     	;# 
   106     0085                     	;# 
   107     0086                     	;# 
   108     0087                     	;# 
   109     0088                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0097                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     0105                     	;# 
   134     0107                     	;# 
   135     0108                     	;# 
   136     0109                     	;# 
   137     010C                     	;# 
   138     010C                     	;# 
   139     010D                     	;# 
   140     010E                     	;# 
   141     010F                     	;# 
   142     0185                     	;# 
   143     0187                     	;# 
   144     0188                     	;# 
   145     0189                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     0000                     	;# 
   149     0001                     	;# 
   150     0002                     	;# 
   151     0003                     	;# 
   152     0004                     	;# 
   153     0005                     	;# 
   154     0006                     	;# 
   155     0007                     	;# 
   156     0008                     	;# 
   157     0009                     	;# 
   158     000A                     	;# 
   159     000B                     	;# 
   160     000C                     	;# 
   161     000D                     	;# 
   162     000E                     	;# 
   163     000E                     	;# 
   164     000F                     	;# 
   165     0010                     	;# 
   166     0011                     	;# 
   167     0012                     	;# 
   168     0013                     	;# 
   169     0014                     	;# 
   170     0015                     	;# 
   171     0015                     	;# 
   172     0016                     	;# 
   173     0017                     	;# 
   174     0018                     	;# 
   175     0019                     	;# 
   176     001A                     	;# 
   177     001B                     	;# 
   178     001B                     	;# 
   179     001C                     	;# 
   180     001D                     	;# 
   181     001E                     	;# 
   182     001F                     	;# 
   183     0081                     	;# 
   184     0085                     	;# 
   185     0086                     	;# 
   186     0087                     	;# 
   187     0088                     	;# 
   188     0089                     	;# 
   189     008C                     	;# 
   190     008D                     	;# 
   191     008E                     	;# 
   192     008F                     	;# 
   193     0090                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0094                     	;# 
   200     0095                     	;# 
   201     0096                     	;# 
   202     0097                     	;# 
   203     0098                     	;# 
   204     0099                     	;# 
   205     009A                     	;# 
   206     009B                     	;# 
   207     009C                     	;# 
   208     009D                     	;# 
   209     009E                     	;# 
   210     009F                     	;# 
   211     0105                     	;# 
   212     0107                     	;# 
   213     0108                     	;# 
   214     0109                     	;# 
   215     010C                     	;# 
   216     010C                     	;# 
   217     010D                     	;# 
   218     010E                     	;# 
   219     010F                     	;# 
   220     0185                     	;# 
   221     0187                     	;# 
   222     0188                     	;# 
   223     0189                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     0000                     	;# 
   227     0001                     	;# 
   228     0002                     	;# 
   229     0003                     	;# 
   230     0004                     	;# 
   231     0005                     	;# 
   232     0006                     	;# 
   233     0007                     	;# 
   234     0008                     	;# 
   235     0009                     	;# 
   236     000A                     	;# 
   237     000B                     	;# 
   238     000C                     	;# 
   239     000D                     	;# 
   240     000E                     	;# 
   241     000E                     	;# 
   242     000F                     	;# 
   243     0010                     	;# 
   244     0011                     	;# 
   245     0012                     	;# 
   246     0013                     	;# 
   247     0014                     	;# 
   248     0015                     	;# 
   249     0015                     	;# 
   250     0016                     	;# 
   251     0017                     	;# 
   252     0018                     	;# 
   253     0019                     	;# 
   254     001A                     	;# 
   255     001B                     	;# 
   256     001B                     	;# 
   257     001C                     	;# 
   258     001D                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     0081                     	;# 
   262     0085                     	;# 
   263     0086                     	;# 
   264     0087                     	;# 
   265     0088                     	;# 
   266     0089                     	;# 
   267     008C                     	;# 
   268     008D                     	;# 
   269     008E                     	;# 
   270     008F                     	;# 
   271     0090                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0094                     	;# 
   278     0095                     	;# 
   279     0096                     	;# 
   280     0097                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009A                     	;# 
   284     009B                     	;# 
   285     009C                     	;# 
   286     009D                     	;# 
   287     009E                     	;# 
   288     009F                     	;# 
   289     0105                     	;# 
   290     0107                     	;# 
   291     0108                     	;# 
   292     0109                     	;# 
   293     010C                     	;# 
   294     010C                     	;# 
   295     010D                     	;# 
   296     010E                     	;# 
   297     010F                     	;# 
   298     0185                     	;# 
   299     0187                     	;# 
   300     0188                     	;# 
   301     0189                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     0000                     	;# 
   305     0001                     	;# 
   306     0002                     	;# 
   307     0003                     	;# 
   308     0004                     	;# 
   309     0005                     	;# 
   310     0006                     	;# 
   311     0007                     	;# 
   312     0008                     	;# 
   313     0009                     	;# 
   314     000A                     	;# 
   315     000B                     	;# 
   316     000C                     	;# 
   317     000D                     	;# 
   318     000E                     	;# 
   319     000E                     	;# 
   320     000F                     	;# 
   321     0010                     	;# 
   322     0011                     	;# 
   323     0012                     	;# 
   324     0013                     	;# 
   325     0014                     	;# 
   326     0015                     	;# 
   327     0015                     	;# 
   328     0016                     	;# 
   329     0017                     	;# 
   330     0018                     	;# 
   331     0019                     	;# 
   332     001A                     	;# 
   333     001B                     	;# 
   334     001B                     	;# 
   335     001C                     	;# 
   336     001D                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     0081                     	;# 
   340     0085                     	;# 
   341     0086                     	;# 
   342     0087                     	;# 
   343     0088                     	;# 
   344     0089                     	;# 
   345     008C                     	;# 
   346     008D                     	;# 
   347     008E                     	;# 
   348     008F                     	;# 
   349     0090                     	;# 
   350     0091                     	;# 
   351     0092                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0094                     	;# 
   356     0095                     	;# 
   357     0096                     	;# 
   358     0097                     	;# 
   359     0098                     	;# 
   360     0099                     	;# 
   361     009A                     	;# 
   362     009B                     	;# 
   363     009C                     	;# 
   364     009D                     	;# 
   365     009E                     	;# 
   366     009F                     	;# 
   367     0105                     	;# 
   368     0107                     	;# 
   369     0108                     	;# 
   370     0109                     	;# 
   371     010C                     	;# 
   372     010C                     	;# 
   373     010D                     	;# 
   374     010E                     	;# 
   375     010F                     	;# 
   376     0185                     	;# 
   377     0187                     	;# 
   378     0188                     	;# 
   379     0189                     	;# 
   380     018C                     	;# 
   381     018D                     	;# 
   382                           
   383                           	psect	strings
   384     0488                     __pstrings:
   385     0488                     stringtab:
   386     0488                     __stringtab:
   387                           
   388                           ;	String table - string pointers are 1 byte each
   389     0488  1BFF               	btfsc	btemp+1,7
   390     0489  2C92               	ljmp	stringcode
   391     048A  1383               	bcf	3,7
   392     048B  187F               	btfsc	btemp+1,0
   393     048C  1783               	bsf	3,7
   394     048D  0800               	movf	0,w
   395     048E  0A84               	incf	4,f
   396     048F  1903               	skipnz
   397     0490  0AFF               	incf	btemp+1,f
   398     0491  0008               	return
   399     0492                     stringcode:
   400     0492                     stringdir:
   401     0492  3004               	movlw	high stringdir
   402     0493  008A               	movwf	10
   403     0494  0804               	movf	4,w
   404     0495  0A84               	incf	4,f
   405     0496  0782               	addwf	2,f
   406     0497                     __stringbase:
   407     0497  3400               	retlw	0
   408     0498                     __end_of__stringtab:
   409     0498                     _dpowers:
   410     0498  3401               	retlw	1
   411     0499  3400               	retlw	0
   412     049A  340A               	retlw	10
   413     049B  3400               	retlw	0
   414     049C  3464               	retlw	100
   415     049D  3400               	retlw	0
   416     049E  34E8               	retlw	232
   417     049F  3403               	retlw	3
   418     04A0  3410               	retlw	16
   419     04A1  3427               	retlw	39
   420     04A2                     __end_of_dpowers:
   421     0009                     _PORTE	set	9
   422     0006                     _PORTB	set	6
   423     0005                     _PORTA	set	5
   424     0006                     _PORTBbits	set	6
   425     000B                     _INTCONbits	set	11
   426     0009                     _PORTEbits	set	9
   427     0008                     _PORTD	set	8
   428     0013                     _SSPBUF	set	19
   429     0014                     _SSPCON	set	20
   430     0063                     _SSPIF	set	99
   431     005E                     _PEIE	set	94
   432     005F                     _GIE	set	95
   433     008F                     _OSCCONbits	set	143
   434     0096                     _IOCB	set	150
   435     0081                     _OPTION_REGbits	set	129
   436     0089                     _TRISE	set	137
   437     0088                     _TRISD	set	136
   438     0086                     _TRISB	set	134
   439     0085                     _TRISA	set	133
   440     0091                     _SSPCON2bits	set	145
   441     0087                     _TRISCbits	set	135
   442     0094                     _SSPSTAT	set	148
   443     0093                     _SSPADD	set	147
   444     0091                     _SSPCON2	set	145
   445     0463                     _SSPIE	set	1123
   446     043C                     _TRISC4	set	1084
   447     043B                     _TRISC3	set	1083
   448     0189                     _ANSELH	set	393
   449     0188                     _ANSEL	set	392
   450     04A2                     STR_6:
   451     04A2  3449               	retlw	73	;'I'
   452     04A3  346E               	retlw	110	;'n'
   453     04A4  3466               	retlw	102	;'f'
   454     04A5  3472               	retlw	114	;'r'
   455     04A6  3461               	retlw	97	;'a'
   456     04A7  3400               	retlw	0
   457     04A8                     STR_4:
   458     04A8  3455               	retlw	85	;'U'
   459     04A9  346C               	retlw	108	;'l'
   460     04AA  3474               	retlw	116	;'t'
   461     04AB  3472               	retlw	114	;'r'
   462     04AC  3461               	retlw	97	;'a'
   463     04AD  3400               	retlw	0
   464     04AE                     STR_5:
   465     04AE  3446               	retlw	70	;'F'
   466     04AF  346F               	retlw	111	;'o'
   467     04B0  3474               	retlw	116	;'t'
   468     04B1  346F               	retlw	111	;'o'
   469     04B2  3400               	retlw	0
   470     04B3                     STR_1:
   471     04B3  3425               	retlw	37	;'%'
   472     04B4  3464               	retlw	100	;'d'
   473     04B5  3400               	retlw	0
   474     04B3                     
   475                           	psect	cinit
   476     000F                     start_initialization:	
   477                           ; #config settings
   478                           
   479     000F                     __initialization:
   480                           
   481                           ; Clear objects allocated to BANK0
   482     000F  1383               	bcf	3,7	;select IRP bank0
   483     0010  3020               	movlw	low __pbssBANK0
   484     0011  0084               	movwf	4
   485     0012  3041               	movlw	low (__pbssBANK0+33)
   486     0013  120A  118A  25B3  120A  118A  	fcall	clear_ram0
   487     0018                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490     0018                     __end_of__initialization:
   491     0018  0183               	clrf	3
   492     0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssBANK0
   495     0020                     __pbssBANK0:
   496     0020                     _Infrarrojo:
   497     0020                     	ds	2
   498     0022                     _Fotoresistencia:
   499     0022                     	ds	2
   500     0024                     _Ultrasonico:
   501     0024                     	ds	2
   502     0026                     _contador:
   503     0026                     	ds	1
   504     0027                     _Bandera:
   505     0027                     	ds	1
   506     0028                     _BANDERA:
   507     0028                     	ds	1
   508     0029                     _Infra:
   509     0029                     	ds	8
   510     0031                     _Foto:
   511     0031                     	ds	8
   512     0039                     _Ultra:
   513     0039                     	ds	8
   514                           
   515                           	psect	clrtext
   516     05B3                     clear_ram0:	
   517                           ;	Called with FSR containing the base address, and
   518                           ;	W with the last address+1
   519                           
   520     05B3  0064               	clrwdt	;clear the watchdog before getting into this loop
   521     05B4                     clrloop0:
   522     05B4  0180               	clrf	0	;clear RAM location pointed to by FSR
   523     05B5  0A84               	incf	4,f	;increment pointer
   524     05B6  0604               	xorwf	4,w	;XOR with final address
   525     05B7  1903               	btfsc	3,2	;have we reached the end yet?
   526     05B8  3400               	retlw	0	;all done for this memory range, return
   527     05B9  0604               	xorwf	4,w	;XOR again to restore value
   528     05BA  2DB4               	goto	clrloop0	;do the next byte
   529                           
   530                           	psect	cstackCOMMON
   531     0070                     __pcstackCOMMON:
   532     0070                     ?_setup:
   533     0070                     ?_I2C_Master_Wait:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_I2C_Master_Start:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_I2C_Master_Stop:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ?_Lcd_Port8:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_Lcd_Cmd8:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_Lcd_Clear8:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_Lcd_Init8:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_Lcd_Write_Char8:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_isr:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ??_isr:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_main:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 1 bytes @ 0x0
   568     0070                     	ds	2
   569     0072                     ??_I2C_Master_Wait:
   570     0072                     ??_I2C_Master_Start:	
   571                           ; 1 bytes @ 0x2
   572                           
   573     0072                     ??_I2C_Master_Stop:	
   574                           ; 1 bytes @ 0x2
   575                           
   576     0072                     ?_I2C_Master_Write:	
   577                           ; 1 bytes @ 0x2
   578                           
   579     0072                     ??_Lcd_Port8:	
   580                           ; 1 bytes @ 0x2
   581                           
   582     0072                     ?_I2C_Master_Read:	
   583                           ; 1 bytes @ 0x2
   584                           
   585     0072                     ?___lwdiv:	
   586                           ; 2 bytes @ 0x2
   587                           
   588     0072                     ?___lldiv:	
   589                           ; 2 bytes @ 0x2
   590                           
   591     0072                     Lcd_Port8@a:	
   592                           ; 4 bytes @ 0x2
   593                           
   594     0072                     I2C_Master_Write@d:	
   595                           ; 1 bytes @ 0x2
   596                           
   597     0072                     I2C_Master_Read@a:	
   598                           ; 2 bytes @ 0x2
   599                           
   600     0072                     ___lwdiv@divisor:	
   601                           ; 2 bytes @ 0x2
   602                           
   603     0072                     ___lldiv@divisor:	
   604                           ; 2 bytes @ 0x2
   605                           
   606                           
   607                           ; 4 bytes @ 0x2
   608     0072                     	ds	1
   609     0073                     ??_Lcd_Cmd8:
   610     0073                     ??_Lcd_Write_Char8:	
   611                           ; 1 bytes @ 0x3
   612                           
   613                           
   614                           ; 1 bytes @ 0x3
   615     0073                     	ds	1
   616     0074                     ??_I2C_Master_Write:
   617     0074                     ??_I2C_Master_Read:	
   618                           ; 1 bytes @ 0x4
   619                           
   620     0074                     Lcd_Write_Char8@y:	
   621                           ; 1 bytes @ 0x4
   622                           
   623     0074                     ___lwdiv@dividend:	
   624                           ; 1 bytes @ 0x4
   625                           
   626                           
   627                           ; 2 bytes @ 0x4
   628     0074                     	ds	1
   629     0075                     Lcd_Cmd8@a:
   630     0075                     Lcd_Write_Char8@a:	
   631                           ; 1 bytes @ 0x5
   632                           
   633                           
   634                           ; 1 bytes @ 0x5
   635     0075                     	ds	1
   636     0076                     ??_Lcd_Clear8:
   637     0076                     ?_Lcd_Set_Cursor8:	
   638                           ; 1 bytes @ 0x6
   639                           
   640     0076                     ??_Lcd_Init8:	
   641                           ; 1 bytes @ 0x6
   642                           
   643     0076                     ?_Lcd_Write_String8:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0076                     ??___lwdiv:	
   647                           ; 1 bytes @ 0x6
   648                           
   649     0076                     Lcd_Set_Cursor8@b:	
   650                           ; 1 bytes @ 0x6
   651                           
   652     0076                     I2C_Master_Read@temp:	
   653                           ; 1 bytes @ 0x6
   654                           
   655     0076                     Lcd_Write_String8@a:	
   656                           ; 2 bytes @ 0x6
   657                           
   658     0076                     ___lldiv@dividend:	
   659                           ; 2 bytes @ 0x6
   660                           
   661                           
   662                           ; 4 bytes @ 0x6
   663     0076                     	ds	1
   664     0077                     ??_Lcd_Set_Cursor8:
   665     0077                     Lcd_Set_Cursor8@a:	
   666                           ; 1 bytes @ 0x7
   667                           
   668     0077                     ___lwdiv@quotient:	
   669                           ; 1 bytes @ 0x7
   670                           
   671                           
   672                           ; 2 bytes @ 0x7
   673     0077                     	ds	1
   674     0078                     ??_Lcd_Write_String8:
   675     0078                     Lcd_Set_Cursor8@temp:	
   676                           ; 1 bytes @ 0x8
   677                           
   678                           
   679                           ; 1 bytes @ 0x8
   680     0078                     	ds	1
   681     0079                     ___lwdiv@counter:
   682                           
   683                           ; 1 bytes @ 0x9
   684     0079                     	ds	1
   685     007A                     ??___lldiv:
   686     007A                     ??___lwmod:	
   687                           ; 1 bytes @ 0xA
   688                           
   689                           
   690                           ; 1 bytes @ 0xA
   691     007A                     	ds	1
   692     007B                     ??_setup:
   693     007B                     ___lwmod@counter:	
   694                           ; 1 bytes @ 0xB
   695                           
   696                           
   697                           ; 1 bytes @ 0xB
   698     007B                     	ds	1
   699                           
   700                           	psect	cstackBANK0
   701     0041                     __pcstackBANK0:
   702     0041                     ?___lwmod:
   703     0041                     Lcd_Write_String8@i:	
   704                           ; 2 bytes @ 0x0
   705                           
   706     0041                     ___lwmod@divisor:	
   707                           ; 2 bytes @ 0x0
   708                           
   709     0041                     ___lldiv@quotient:	
   710                           ; 2 bytes @ 0x0
   711                           
   712                           
   713                           ; 4 bytes @ 0x0
   714     0041                     	ds	2
   715     0043                     ___lwmod@dividend:
   716                           
   717                           ; 2 bytes @ 0x2
   718     0043                     	ds	2
   719     0045                     ?_sprintf:
   720     0045                     sprintf@f:	
   721                           ; 2 bytes @ 0x4
   722                           
   723     0045                     ___lldiv@counter:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 1 bytes @ 0x4
   728     0045                     	ds	1
   729     0046                     ?_I2C_Master_Init:
   730     0046                     I2C_Master_Init@c:	
   731                           ; 1 bytes @ 0x5
   732                           
   733                           
   734                           ; 4 bytes @ 0x5
   735     0046                     	ds	2
   736     0048                     ??_sprintf:
   737                           
   738                           ; 1 bytes @ 0x7
   739     0048                     	ds	2
   740     004A                     ??_I2C_Master_Init:
   741                           
   742                           ; 1 bytes @ 0x9
   743     004A                     	ds	1
   744     004B                     sprintf@ap:
   745                           
   746                           ; 1 bytes @ 0xA
   747     004B                     	ds	1
   748     004C                     sprintf@flag:
   749                           
   750                           ; 1 bytes @ 0xB
   751     004C                     	ds	1
   752     004D                     sprintf@prec:
   753                           
   754                           ; 1 bytes @ 0xC
   755     004D                     	ds	1
   756     004E                     sprintf@val:
   757                           
   758                           ; 2 bytes @ 0xD
   759     004E                     	ds	2
   760     0050                     sprintf@sp:
   761                           
   762                           ; 1 bytes @ 0xF
   763     0050                     	ds	1
   764     0051                     sprintf@c:
   765                           
   766                           ; 1 bytes @ 0x10
   767     0051                     	ds	1
   768     0052                     ??_main:
   769                           
   770                           ; 1 bytes @ 0x11
   771     0052                     	ds	3
   772                           
   773                           	psect	maintext
   774     001C                     __pmaintext:	
   775 ;;
   776 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   777 ;;
   778 ;; *************** function _main *****************
   779 ;; Defined at:
   780 ;;		line 90 in file "Master_Sensores.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : B00/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0
   796 ;;      Temps:          0       3       0       0       0
   797 ;;      Totals:         0       3       0       0       0
   798 ;;Total ram usage:        3 bytes
   799 ;; Hardware stack levels required when called: 4
   800 ;; This function calls:
   801 ;;		_I2C_Master_Read
   802 ;;		_I2C_Master_Start
   803 ;;		_I2C_Master_Stop
   804 ;;		_I2C_Master_Write
   805 ;;		_Lcd_Clear8
   806 ;;		_Lcd_Init8
   807 ;;		_Lcd_Set_Cursor8
   808 ;;		_Lcd_Write_String8
   809 ;;		_setup
   810 ;;		_sprintf
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816     001C                     _main:	
   817                           ;psect for function _main
   818                           
   819     001C                     l1491:	
   820                           ;incstack = 0
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822                           
   823                           
   824                           ;Master_Sensores.c: 91:     setup();
   825     001C  120A  118A  24E4  120A  118A  	fcall	_setup
   826                           
   827                           ;Master_Sensores.c: 92:     Lcd_Init8();
   828     0021  120A  118A  233F  120A  118A  	fcall	_Lcd_Init8
   829                           
   830                           ;Master_Sensores.c: 93:     Lcd_Clear8();
   831     0026  120A  118A  257D  120A  118A  	fcall	_Lcd_Clear8
   832     002B                     l181:	
   833                           ;Master_Sensores.c: 94:     while(1){
   834                           
   835                           
   836                           ;Master_Sensores.c: 98:         I2C_Master_Start();
   837     002B  120A  118A  25AA  120A  118A  	fcall	_I2C_Master_Start
   838                           
   839                           ;Master_Sensores.c: 99:         I2C_Master_Write(0x60);
   840     0030  3060               	movlw	96
   841     0031  00F2               	movwf	I2C_Master_Write@d
   842     0032  3000               	movlw	0
   843     0033  00F3               	movwf	I2C_Master_Write@d+1
   844     0034  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
   845                           
   846                           ;Master_Sensores.c: 100:         I2C_Master_Write(BANDERA);
   847     0039  1283               	bcf	3,5	;RP0=0, select bank0
   848     003A  1303               	bcf	3,6	;RP1=0, select bank0
   849     003B  0828               	movf	_BANDERA,w
   850     003C  00D2               	movwf	??_main
   851     003D  01D3               	clrf	??_main+1
   852     003E  0852               	movf	??_main,w
   853     003F  00F2               	movwf	I2C_Master_Write@d
   854     0040  0853               	movf	??_main+1,w
   855     0041  00F3               	movwf	I2C_Master_Write@d+1
   856     0042  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
   857                           
   858                           ;Master_Sensores.c: 101:         I2C_Master_Stop();
   859     0047  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Stop
   860     004C                     l1493:
   861                           
   862                           ;Master_Sensores.c: 102:         _delay((unsigned long)((100)*(8000000/4000.0)));
   863     004C  3002               	movlw	2
   864     004D  1283               	bcf	3,5	;RP0=0, select bank0
   865     004E  1303               	bcf	3,6	;RP1=0, select bank0
   866     004F  00D4               	movwf	??_main+2
   867     0050  3004               	movlw	4
   868     0051  00D3               	movwf	??_main+1
   869     0052  30B9               	movlw	185
   870     0053  00D2               	movwf	??_main
   871     0054                     u797:
   872     0054  0BD2               	decfsz	??_main,f
   873     0055  2854               	goto	u797
   874     0056  0BD3               	decfsz	??_main+1,f
   875     0057  2854               	goto	u797
   876     0058  0BD4               	decfsz	??_main+2,f
   877     0059  2854               	goto	u797
   878     005A  285B               	nop2
   879     005B                     l1495:
   880                           
   881                           ;Master_Sensores.c: 104:         I2C_Master_Start();
   882     005B  120A  118A  25AA  120A  118A  	fcall	_I2C_Master_Start
   883     0060                     l1497:
   884                           
   885                           ;Master_Sensores.c: 105:         I2C_Master_Write(0x61);
   886     0060  3061               	movlw	97
   887     0061  00F2               	movwf	I2C_Master_Write@d
   888     0062  3000               	movlw	0
   889     0063  00F3               	movwf	I2C_Master_Write@d+1
   890     0064  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
   891     0069                     l1499:
   892                           
   893                           ;Master_Sensores.c: 106:         Fotoresistencia = I2C_Master_Read(0);
   894     0069  3000               	movlw	0
   895     006A  00F2               	movwf	I2C_Master_Read@a
   896     006B  00F3               	movwf	I2C_Master_Read@a+1
   897     006C  120A  118A  24B6  120A  118A  	fcall	_I2C_Master_Read
   898     0071  0873               	movf	?_I2C_Master_Read+1,w
   899     0072  1283               	bcf	3,5	;RP0=0, select bank0
   900     0073  1303               	bcf	3,6	;RP1=0, select bank0
   901     0074  00A3               	movwf	_Fotoresistencia+1
   902     0075  0872               	movf	?_I2C_Master_Read,w
   903     0076  00A2               	movwf	_Fotoresistencia
   904     0077                     l1501:
   905                           
   906                           ;Master_Sensores.c: 107:         I2C_Master_Stop();
   907     0077  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Stop
   908     007C                     l1503:
   909                           
   910                           ;Master_Sensores.c: 108:         _delay((unsigned long)((100)*(8000000/4000.0)));
   911     007C  3002               	movlw	2
   912     007D  1283               	bcf	3,5	;RP0=0, select bank0
   913     007E  1303               	bcf	3,6	;RP1=0, select bank0
   914     007F  00D4               	movwf	??_main+2
   915     0080  3004               	movlw	4
   916     0081  00D3               	movwf	??_main+1
   917     0082  30B9               	movlw	185
   918     0083  00D2               	movwf	??_main
   919     0084                     u807:
   920     0084  0BD2               	decfsz	??_main,f
   921     0085  2884               	goto	u807
   922     0086  0BD3               	decfsz	??_main+1,f
   923     0087  2884               	goto	u807
   924     0088  0BD4               	decfsz	??_main+2,f
   925     0089  2884               	goto	u807
   926     008A  288B               	nop2
   927                           
   928                           ;Master_Sensores.c: 110:         I2C_Master_Start();
   929     008B  120A  118A  25AA  120A  118A  	fcall	_I2C_Master_Start
   930                           
   931                           ;Master_Sensores.c: 111:         I2C_Master_Write(0x70);
   932     0090  3070               	movlw	112
   933     0091  00F2               	movwf	I2C_Master_Write@d
   934     0092  3000               	movlw	0
   935     0093  00F3               	movwf	I2C_Master_Write@d+1
   936     0094  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
   937                           
   938                           ;Master_Sensores.c: 112:         I2C_Master_Write(Bandera);
   939     0099  1283               	bcf	3,5	;RP0=0, select bank0
   940     009A  1303               	bcf	3,6	;RP1=0, select bank0
   941     009B  0827               	movf	_Bandera,w
   942     009C  00D2               	movwf	??_main
   943     009D  01D3               	clrf	??_main+1
   944     009E  0852               	movf	??_main,w
   945     009F  00F2               	movwf	I2C_Master_Write@d
   946     00A0  0853               	movf	??_main+1,w
   947     00A1  00F3               	movwf	I2C_Master_Write@d+1
   948     00A2  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
   949                           
   950                           ;Master_Sensores.c: 113:         I2C_Master_Stop();
   951     00A7  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Stop
   952     00AC                     l1505:
   953                           
   954                           ;Master_Sensores.c: 114:         _delay((unsigned long)((100)*(8000000/4000.0)));
   955     00AC  3002               	movlw	2
   956     00AD  1283               	bcf	3,5	;RP0=0, select bank0
   957     00AE  1303               	bcf	3,6	;RP1=0, select bank0
   958     00AF  00D4               	movwf	??_main+2
   959     00B0  3004               	movlw	4
   960     00B1  00D3               	movwf	??_main+1
   961     00B2  30B9               	movlw	185
   962     00B3  00D2               	movwf	??_main
   963     00B4                     u817:
   964     00B4  0BD2               	decfsz	??_main,f
   965     00B5  28B4               	goto	u817
   966     00B6  0BD3               	decfsz	??_main+1,f
   967     00B7  28B4               	goto	u817
   968     00B8  0BD4               	decfsz	??_main+2,f
   969     00B9  28B4               	goto	u817
   970     00BA  28BB               	nop2
   971     00BB                     l1507:
   972                           
   973                           ;Master_Sensores.c: 116:         I2C_Master_Start();
   974     00BB  120A  118A  25AA  120A  118A  	fcall	_I2C_Master_Start
   975     00C0                     l1509:
   976                           
   977                           ;Master_Sensores.c: 117:         I2C_Master_Write(0x71);
   978     00C0  3071               	movlw	113
   979     00C1  00F2               	movwf	I2C_Master_Write@d
   980     00C2  3000               	movlw	0
   981     00C3  00F3               	movwf	I2C_Master_Write@d+1
   982     00C4  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
   983     00C9                     l1511:
   984                           
   985                           ;Master_Sensores.c: 118:         Infrarrojo = I2C_Master_Read(0);
   986     00C9  3000               	movlw	0
   987     00CA  00F2               	movwf	I2C_Master_Read@a
   988     00CB  00F3               	movwf	I2C_Master_Read@a+1
   989     00CC  120A  118A  24B6  120A  118A  	fcall	_I2C_Master_Read
   990     00D1  0873               	movf	?_I2C_Master_Read+1,w
   991     00D2  1283               	bcf	3,5	;RP0=0, select bank0
   992     00D3  1303               	bcf	3,6	;RP1=0, select bank0
   993     00D4  00A1               	movwf	_Infrarrojo+1
   994     00D5  0872               	movf	?_I2C_Master_Read,w
   995     00D6  00A0               	movwf	_Infrarrojo
   996     00D7                     l1513:
   997                           
   998                           ;Master_Sensores.c: 119:         I2C_Master_Stop();
   999     00D7  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Stop
  1000     00DC                     l1515:
  1001                           
  1002                           ;Master_Sensores.c: 120:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1003     00DC  3002               	movlw	2
  1004     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1005     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1006     00DF  00D4               	movwf	??_main+2
  1007     00E0  3004               	movlw	4
  1008     00E1  00D3               	movwf	??_main+1
  1009     00E2  30B9               	movlw	185
  1010     00E3  00D2               	movwf	??_main
  1011     00E4                     u827:
  1012     00E4  0BD2               	decfsz	??_main,f
  1013     00E5  28E4               	goto	u827
  1014     00E6  0BD3               	decfsz	??_main+1,f
  1015     00E7  28E4               	goto	u827
  1016     00E8  0BD4               	decfsz	??_main+2,f
  1017     00E9  28E4               	goto	u827
  1018     00EA  28EB               	nop2
  1019                           
  1020                           ;Master_Sensores.c: 122:         I2C_Master_Start();
  1021     00EB  120A  118A  25AA  120A  118A  	fcall	_I2C_Master_Start
  1022                           
  1023                           ;Master_Sensores.c: 123:         I2C_Master_Write(0x50);
  1024     00F0  3050               	movlw	80
  1025     00F1  00F2               	movwf	I2C_Master_Write@d
  1026     00F2  3000               	movlw	0
  1027     00F3  00F3               	movwf	I2C_Master_Write@d+1
  1028     00F4  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
  1029                           
  1030                           ;Master_Sensores.c: 124:         I2C_Master_Write(BANDERA);
  1031     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1032     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1033     00FB  0828               	movf	_BANDERA,w
  1034     00FC  00D2               	movwf	??_main
  1035     00FD  01D3               	clrf	??_main+1
  1036     00FE  0852               	movf	??_main,w
  1037     00FF  00F2               	movwf	I2C_Master_Write@d
  1038     0100  0853               	movf	??_main+1,w
  1039     0101  00F3               	movwf	I2C_Master_Write@d+1
  1040     0102  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
  1041                           
  1042                           ;Master_Sensores.c: 125:         I2C_Master_Stop();
  1043     0107  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Stop
  1044     010C                     l1517:
  1045                           
  1046                           ;Master_Sensores.c: 126:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1047     010C  3002               	movlw	2
  1048     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1049     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1050     010F  00D4               	movwf	??_main+2
  1051     0110  3004               	movlw	4
  1052     0111  00D3               	movwf	??_main+1
  1053     0112  30B9               	movlw	185
  1054     0113  00D2               	movwf	??_main
  1055     0114                     u837:
  1056     0114  0BD2               	decfsz	??_main,f
  1057     0115  2914               	goto	u837
  1058     0116  0BD3               	decfsz	??_main+1,f
  1059     0117  2914               	goto	u837
  1060     0118  0BD4               	decfsz	??_main+2,f
  1061     0119  2914               	goto	u837
  1062     011A  291B               	nop2
  1063     011B                     l1519:
  1064                           
  1065                           ;Master_Sensores.c: 128:         I2C_Master_Start();
  1066     011B  120A  118A  25AA  120A  118A  	fcall	_I2C_Master_Start
  1067     0120                     l1521:
  1068                           
  1069                           ;Master_Sensores.c: 129:         I2C_Master_Write(0x51);
  1070     0120  3051               	movlw	81
  1071     0121  00F2               	movwf	I2C_Master_Write@d
  1072     0122  3000               	movlw	0
  1073     0123  00F3               	movwf	I2C_Master_Write@d+1
  1074     0124  120A  118A  2597  120A  118A  	fcall	_I2C_Master_Write
  1075     0129                     l1523:
  1076                           
  1077                           ;Master_Sensores.c: 130:         Ultrasonico = I2C_Master_Read(0);
  1078     0129  3000               	movlw	0
  1079     012A  00F2               	movwf	I2C_Master_Read@a
  1080     012B  00F3               	movwf	I2C_Master_Read@a+1
  1081     012C  120A  118A  24B6  120A  118A  	fcall	_I2C_Master_Read
  1082     0131  0873               	movf	?_I2C_Master_Read+1,w
  1083     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1084     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1085     0134  00A5               	movwf	_Ultrasonico+1
  1086     0135  0872               	movf	?_I2C_Master_Read,w
  1087     0136  00A4               	movwf	_Ultrasonico
  1088     0137                     l1525:
  1089                           
  1090                           ;Master_Sensores.c: 131:         I2C_Master_Stop();
  1091     0137  120A  118A  25A1  120A  118A  	fcall	_I2C_Master_Stop
  1092     013C                     l1527:
  1093                           
  1094                           ;Master_Sensores.c: 132:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1095     013C  3002               	movlw	2
  1096     013D  1283               	bcf	3,5	;RP0=0, select bank0
  1097     013E  1303               	bcf	3,6	;RP1=0, select bank0
  1098     013F  00D4               	movwf	??_main+2
  1099     0140  3004               	movlw	4
  1100     0141  00D3               	movwf	??_main+1
  1101     0142  30B9               	movlw	185
  1102     0143  00D2               	movwf	??_main
  1103     0144                     u847:
  1104     0144  0BD2               	decfsz	??_main,f
  1105     0145  2944               	goto	u847
  1106     0146  0BD3               	decfsz	??_main+1,f
  1107     0147  2944               	goto	u847
  1108     0148  0BD4               	decfsz	??_main+2,f
  1109     0149  2944               	goto	u847
  1110     014A  294B               	nop2
  1111     014B                     l1529:
  1112                           
  1113                           ;Master_Sensores.c: 137:         sprintf(Ultra, "%d", Ultrasonico);
  1114     014B  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1115     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1116     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1117     014E  00C5               	movwf	sprintf@f
  1118     014F  0825               	movf	_Ultrasonico+1,w
  1119     0150  00C7               	movwf	?_sprintf+2
  1120     0151  0824               	movf	_Ultrasonico,w
  1121     0152  00C6               	movwf	?_sprintf+1
  1122     0153  3039               	movlw	(low (_Ultra| 0))& (0+255)
  1123     0154  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1124     0159                     l1531:
  1125                           
  1126                           ;Master_Sensores.c: 138:         sprintf(Foto, "%d", Fotoresistencia);
  1127     0159  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1128     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1129     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1130     015C  00C5               	movwf	sprintf@f
  1131     015D  0823               	movf	_Fotoresistencia+1,w
  1132     015E  00C7               	movwf	?_sprintf+2
  1133     015F  0822               	movf	_Fotoresistencia,w
  1134     0160  00C6               	movwf	?_sprintf+1
  1135     0161  3031               	movlw	(low (_Foto| 0))& (0+255)
  1136     0162  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1137     0167                     l1533:
  1138                           
  1139                           ;Master_Sensores.c: 139:         sprintf(Infra, "%d", Infrarrojo);
  1140     0167  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1141     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1142     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1143     016A  00C5               	movwf	sprintf@f
  1144     016B  0821               	movf	_Infrarrojo+1,w
  1145     016C  00C7               	movwf	?_sprintf+2
  1146     016D  0820               	movf	_Infrarrojo,w
  1147     016E  00C6               	movwf	?_sprintf+1
  1148     016F  3029               	movlw	(low (_Infra| 0))& (0+255)
  1149     0170  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1150     0175                     l1535:
  1151                           
  1152                           ;Master_Sensores.c: 141:         Lcd_Clear8();
  1153     0175  120A  118A  257D  120A  118A  	fcall	_Lcd_Clear8
  1154     017A                     l1537:
  1155                           
  1156                           ;Master_Sensores.c: 142:         Lcd_Set_Cursor8(1,1);
  1157     017A  01F6               	clrf	Lcd_Set_Cursor8@b
  1158     017B  0AF6               	incf	Lcd_Set_Cursor8@b,f
  1159     017C  3001               	movlw	1
  1160     017D  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor8
  1161     0182                     l1539:
  1162                           
  1163                           ;Master_Sensores.c: 143:         Lcd_Write_String8("Ultra");
  1164     0182  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1165     0183  00F6               	movwf	Lcd_Write_String8@a
  1166     0184  3080               	movlw	128
  1167     0185  00F7               	movwf	Lcd_Write_String8@a+1
  1168     0186  120A  118A  238A  120A  118A  	fcall	_Lcd_Write_String8
  1169                           
  1170                           ;Master_Sensores.c: 145:         Lcd_Set_Cursor8(1,8);
  1171     018B  3008               	movlw	8
  1172     018C  00F6               	movwf	Lcd_Set_Cursor8@b
  1173     018D  3001               	movlw	1
  1174     018E  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor8
  1175     0193                     l1541:
  1176                           
  1177                           ;Master_Sensores.c: 146:         Lcd_Write_String8("Foto");
  1178     0193  3017               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1179     0194  00F6               	movwf	Lcd_Write_String8@a
  1180     0195  3080               	movlw	128
  1181     0196  00F7               	movwf	Lcd_Write_String8@a+1
  1182     0197  120A  118A  238A  120A  118A  	fcall	_Lcd_Write_String8
  1183     019C                     l1543:
  1184                           
  1185                           ;Master_Sensores.c: 148:         Lcd_Set_Cursor8(1,14);
  1186     019C  300E               	movlw	14
  1187     019D  00F6               	movwf	Lcd_Set_Cursor8@b
  1188     019E  3001               	movlw	1
  1189     019F  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor8
  1190                           
  1191                           ;Master_Sensores.c: 149:         Lcd_Write_String8("Infra");
  1192     01A4  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1193     01A5  00F6               	movwf	Lcd_Write_String8@a
  1194     01A6  3080               	movlw	128
  1195     01A7  00F7               	movwf	Lcd_Write_String8@a+1
  1196     01A8  120A  118A  238A  120A  118A  	fcall	_Lcd_Write_String8
  1197     01AD                     l1545:
  1198                           
  1199                           ;Master_Sensores.c: 151:         Lcd_Set_Cursor8(2,1);
  1200     01AD  01F6               	clrf	Lcd_Set_Cursor8@b
  1201     01AE  0AF6               	incf	Lcd_Set_Cursor8@b,f
  1202     01AF  3002               	movlw	2
  1203     01B0  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor8
  1204     01B5                     l1547:
  1205                           
  1206                           ;Master_Sensores.c: 152:         Lcd_Write_String8(Ultra);
  1207     01B5  3039               	movlw	(low (_Ultra| 0))& (0+255)
  1208     01B6  00F6               	movwf	Lcd_Write_String8@a
  1209     01B7  3000               	movlw	0
  1210     01B8  00F7               	movwf	Lcd_Write_String8@a+1
  1211     01B9  120A  118A  238A  120A  118A  	fcall	_Lcd_Write_String8
  1212                           
  1213                           ;Master_Sensores.c: 154:         Lcd_Set_Cursor8(2,8);
  1214     01BE  3008               	movlw	8
  1215     01BF  00F6               	movwf	Lcd_Set_Cursor8@b
  1216     01C0  3002               	movlw	2
  1217     01C1  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor8
  1218     01C6                     l1549:
  1219                           
  1220                           ;Master_Sensores.c: 155:         Lcd_Write_String8(Foto);
  1221     01C6  3031               	movlw	(low (_Foto| 0))& (0+255)
  1222     01C7  00F6               	movwf	Lcd_Write_String8@a
  1223     01C8  3000               	movlw	0
  1224     01C9  00F7               	movwf	Lcd_Write_String8@a+1
  1225     01CA  120A  118A  238A  120A  118A  	fcall	_Lcd_Write_String8
  1226     01CF                     l1551:
  1227                           
  1228                           ;Master_Sensores.c: 157:         Lcd_Set_Cursor8(2,14);
  1229     01CF  300E               	movlw	14
  1230     01D0  00F6               	movwf	Lcd_Set_Cursor8@b
  1231     01D1  3002               	movlw	2
  1232     01D2  120A  118A  2511  120A  118A  	fcall	_Lcd_Set_Cursor8
  1233                           
  1234                           ;Master_Sensores.c: 158:         Lcd_Write_String8(Infra);
  1235     01D7  3029               	movlw	(low (_Infra| 0))& (0+255)
  1236     01D8  00F6               	movwf	Lcd_Write_String8@a
  1237     01D9  3000               	movlw	0
  1238     01DA  00F7               	movwf	Lcd_Write_String8@a+1
  1239     01DB  120A  118A  238A  120A  118A  	fcall	_Lcd_Write_String8
  1240     01E0                     l1553:
  1241                           
  1242                           ;Master_Sensores.c: 160:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1243     01E0  3004               	movlw	4
  1244     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1245     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1246     01E3  00D4               	movwf	??_main+2
  1247     01E4  300C               	movlw	12
  1248     01E5  00D3               	movwf	??_main+1
  1249     01E6  3033               	movlw	51
  1250     01E7  00D2               	movwf	??_main
  1251     01E8                     u857:
  1252     01E8  0BD2               	decfsz	??_main,f
  1253     01E9  29E8               	goto	u857
  1254     01EA  0BD3               	decfsz	??_main+1,f
  1255     01EB  29E8               	goto	u857
  1256     01EC  0BD4               	decfsz	??_main+2,f
  1257     01ED  29E8               	goto	u857
  1258     01EE                     l1555:
  1259                           
  1260                           ;Master_Sensores.c: 162:         BANDERA = 0;
  1261     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1262     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1263     01F0  01A8               	clrf	_BANDERA
  1264     01F1                     l1557:
  1265                           
  1266                           ;Master_Sensores.c: 163:         contador++;
  1267     01F1  3001               	movlw	1
  1268     01F2  00D2               	movwf	??_main
  1269     01F3  0852               	movf	??_main,w
  1270     01F4  07A6               	addwf	_contador,f
  1271     01F5                     l1559:
  1272                           
  1273                           ;Master_Sensores.c: 164:         PORTA = Ultrasonico;
  1274     01F5  0824               	movf	_Ultrasonico,w
  1275     01F6  0085               	movwf	5	;volatile
  1276     01F7  282B               	goto	l181
  1277     01F8  120A  118A  280C   	ljmp	start
  1278     01FB                     __end_of_main:
  1279                           
  1280                           	psect	text1
  1281     01FB                     __ptext1:	
  1282 ;; *************** function _sprintf *****************
  1283 ;; Defined at:
  1284 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  sp              1    wreg     PTR unsigned char 
  1287 ;;		 -> Infra(8), Foto(8), Ultra(8), 
  1288 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1289 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1292 ;;		 -> Infra(8), Foto(8), Ultra(8), 
  1293 ;;  tmpval          4    0        struct .
  1294 ;;  val             2   13[BANK0 ] unsigned int 
  1295 ;;  cp              2    0        PTR const unsigned char 
  1296 ;;  len             2    0        unsigned int 
  1297 ;;  c               1   16[BANK0 ] unsigned char 
  1298 ;;  prec            1   12[BANK0 ] char 
  1299 ;;  flag            1   11[BANK0 ] unsigned char 
  1300 ;;  ap              1   10[BANK0 ] PTR void [1]
  1301 ;;		 -> ?_sprintf(2), 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2    4[BANK0 ] int 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       3       0       0       0
  1312 ;;      Locals:         0       7       0       0       0
  1313 ;;      Temps:          0       3       0       0       0
  1314 ;;      Totals:         0      13       0       0       0
  1315 ;;Total ram usage:       13 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 2
  1318 ;; This function calls:
  1319 ;;		___lwdiv
  1320 ;;		___lwmod
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326     01FB                     _sprintf:	
  1327                           ;psect for function _sprintf
  1328                           
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1332                           ;sprintf@sp stored from wreg
  1333     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1334     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1335     01FD  00D0               	movwf	sprintf@sp
  1336     01FE                     l1409:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1339     01FE  3046               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1340     01FF  00CB               	movwf	sprintf@ap
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1343     0200  2AC2               	goto	l1461
  1344     0201                     l1411:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1347     0201  3025               	movlw	37
  1348     0202  0651               	xorwf	sprintf@c,w
  1349     0203  1903               	btfsc	3,2
  1350     0204  2A06               	goto	u691
  1351     0205  2A07               	goto	u690
  1352     0206                     u691:
  1353     0206  2A11               	goto	l1417
  1354     0207                     u690:
  1355     0207                     l1413:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1358     0207  0850               	movf	sprintf@sp,w
  1359     0208  0084               	movwf	4
  1360     0209  0851               	movf	sprintf@c,w
  1361     020A  1383               	bcf	3,7	;select IRP bank0
  1362     020B  0080               	movwf	0
  1363     020C                     l1415:
  1364     020C  3001               	movlw	1
  1365     020D  00C8               	movwf	??_sprintf
  1366     020E  0848               	movf	??_sprintf,w
  1367     020F  07D0               	addwf	sprintf@sp,f
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1370     0210  2AC2               	goto	l1461
  1371     0211                     l1417:
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1374     0211  01CC               	clrf	sprintf@flag
  1375     0212                     l1421:	
  1376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1377                           
  1378     0212  3001               	movlw	1
  1379     0213  07C5               	addwf	sprintf@f,f
  1380     0214  30FF               	movlw	-1
  1381     0215  0745               	addwf	sprintf@f,w
  1382     0216  0084               	movwf	4
  1383     0217  120A  118A  2492  120A  118A  	fcall	stringdir
  1384     021C  00D1               	movwf	sprintf@c
  1385     021D  00C8               	movwf	??_sprintf
  1386     021E  01C9               	clrf	??_sprintf+1
  1387                           
  1388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 1, Range of values is 0 to 0
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte            4     3 (average)
  1394                           ; direct_byte           11     8 (fixed)
  1395                           ; jumptable            260     6 (fixed)
  1396                           ;	Chosen strategy is simple_byte
  1397     021F  0849               	movf	??_sprintf+1,w
  1398     0220  3A00               	xorlw	0	; case 0
  1399     0221  1903               	skipnz
  1400     0222  2A24               	goto	l1581
  1401     0223  2AC2               	goto	l1461
  1402     0224                     l1581:
  1403                           
  1404                           ; Switch size 1, requested type "simple"
  1405                           ; Number of cases is 3, Range of values is 0 to 105
  1406                           ; switch strategies available:
  1407                           ; Name         Instructions Cycles
  1408                           ; simple_byte           10     6 (average)
  1409                           ; jumptable            260     6 (fixed)
  1410                           ;	Chosen strategy is simple_byte
  1411     0224  0848               	movf	??_sprintf,w
  1412     0225  3A00               	xorlw	0	; case 0
  1413     0226  1903               	skipnz
  1414     0227  2AD2               	goto	l1463
  1415     0228  3A64               	xorlw	100	; case 100
  1416     0229  1903               	skipnz
  1417     022A  2A2F               	goto	l1423
  1418     022B  3A0D               	xorlw	13	; case 105
  1419     022C  1903               	skipnz
  1420     022D  2A2F               	goto	l1423
  1421     022E  2AC2               	goto	l1461
  1422     022F                     l1423:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1425     022F  084B               	movf	sprintf@ap,w
  1426     0230  0084               	movwf	4
  1427     0231  1383               	bcf	3,7	;select IRP bank0
  1428     0232  0800               	movf	0,w
  1429     0233  00CE               	movwf	sprintf@val
  1430     0234  0A84               	incf	4,f
  1431     0235  0800               	movf	0,w
  1432     0236  00CF               	movwf	sprintf@val+1
  1433     0237                     l1425:
  1434     0237  3002               	movlw	2
  1435     0238  00C8               	movwf	??_sprintf
  1436     0239  0848               	movf	??_sprintf,w
  1437     023A  07CB               	addwf	sprintf@ap,f
  1438     023B                     l1427:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1441     023B  1FCF               	btfss	sprintf@val+1,7
  1442     023C  2A3E               	goto	u701
  1443     023D  2A3F               	goto	u700
  1444     023E                     u701:
  1445     023E  2A48               	goto	l1433
  1446     023F                     u700:
  1447     023F                     l1429:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1450     023F  3003               	movlw	3
  1451     0240  00C8               	movwf	??_sprintf
  1452     0241  0848               	movf	??_sprintf,w
  1453     0242  04CC               	iorwf	sprintf@flag,f
  1454     0243                     l1431:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1457     0243  09CE               	comf	sprintf@val,f
  1458     0244  09CF               	comf	sprintf@val+1,f
  1459     0245  0ACE               	incf	sprintf@val,f
  1460     0246  1903               	skipnz
  1461     0247  0ACF               	incf	sprintf@val+1,f
  1462     0248                     l1433:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1465     0248  01D1               	clrf	sprintf@c
  1466     0249  0AD1               	incf	sprintf@c,f
  1467     024A                     l1439:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1470     024A  0851               	movf	sprintf@c,w
  1471     024B  00C8               	movwf	??_sprintf
  1472     024C  0748               	addwf	??_sprintf,w
  1473     024D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1474     024E  0084               	movwf	4
  1475     024F  120A  118A  2492  120A  118A  	fcall	stringdir
  1476     0254  00C9               	movwf	??_sprintf+1
  1477     0255  120A  118A  2492  120A  118A  	fcall	stringdir
  1478     025A  00CA               	movwf	??_sprintf+2
  1479     025B  084A               	movf	??_sprintf+2,w
  1480     025C  024F               	subwf	sprintf@val+1,w
  1481     025D  1D03               	skipz
  1482     025E  2A61               	goto	u715
  1483     025F  0849               	movf	??_sprintf+1,w
  1484     0260  024E               	subwf	sprintf@val,w
  1485     0261                     u715:
  1486     0261  1803               	skipnc
  1487     0262  2A64               	goto	u711
  1488     0263  2A65               	goto	u710
  1489     0264                     u711:
  1490     0264  2A66               	goto	l1443
  1491     0265                     u710:
  1492     0265  2A70               	goto	l1445
  1493     0266                     l1443:
  1494     0266  3001               	movlw	1
  1495     0267  00C8               	movwf	??_sprintf
  1496     0268  0848               	movf	??_sprintf,w
  1497     0269  07D1               	addwf	sprintf@c,f
  1498     026A  3005               	movlw	5
  1499     026B  0651               	xorwf	sprintf@c,w
  1500     026C  1D03               	btfss	3,2
  1501     026D  2A6F               	goto	u721
  1502     026E  2A70               	goto	u720
  1503     026F                     u721:
  1504     026F  2A4A               	goto	l1439
  1505     0270                     u720:
  1506     0270                     l1445:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1509     0270  084C               	movf	sprintf@flag,w
  1510     0271  3903               	andlw	3
  1511     0272  1903               	btfsc	3,2
  1512     0273  2A75               	goto	u731
  1513     0274  2A76               	goto	u730
  1514     0275                     u731:
  1515     0275  2A7F               	goto	l1451
  1516     0276                     u730:
  1517     0276                     l1447:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1520     0276  0850               	movf	sprintf@sp,w
  1521     0277  0084               	movwf	4
  1522     0278  302D               	movlw	45
  1523     0279  1383               	bcf	3,7	;select IRP bank0
  1524     027A  0080               	movwf	0
  1525     027B                     l1449:
  1526     027B  3001               	movlw	1
  1527     027C  00C8               	movwf	??_sprintf
  1528     027D  0848               	movf	??_sprintf,w
  1529     027E  07D0               	addwf	sprintf@sp,f
  1530     027F                     l1451:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1533     027F  0851               	movf	sprintf@c,w
  1534     0280  00CD               	movwf	sprintf@prec
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1537     0281  2AB9               	goto	l1459
  1538     0282                     l1453:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1541     0282  300A               	movlw	10
  1542     0283  00C1               	movwf	___lwmod@divisor
  1543     0284  3000               	movlw	0
  1544     0285  00C2               	movwf	___lwmod@divisor+1
  1545     0286  084D               	movf	sprintf@prec,w
  1546     0287  00C8               	movwf	??_sprintf
  1547     0288  0748               	addwf	??_sprintf,w
  1548     0289  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1549     028A  0084               	movwf	4
  1550     028B  120A  118A  2492  120A  118A  	fcall	stringdir
  1551     0290  00F2               	movwf	___lwdiv@divisor
  1552     0291  120A  118A  2492  120A  118A  	fcall	stringdir
  1553     0296  00F3               	movwf	___lwdiv@divisor+1
  1554     0297  084F               	movf	sprintf@val+1,w
  1555     0298  00F5               	movwf	___lwdiv@dividend+1
  1556     0299  084E               	movf	sprintf@val,w
  1557     029A  00F4               	movwf	___lwdiv@dividend
  1558     029B  120A  118A  23D0  120A  118A  	fcall	___lwdiv
  1559     02A0  0873               	movf	?___lwdiv+1,w
  1560     02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1561     02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1562     02A3  00C4               	movwf	___lwmod@dividend+1
  1563     02A4  0872               	movf	?___lwdiv,w
  1564     02A5  00C3               	movwf	___lwmod@dividend
  1565     02A6  120A  118A  2414  120A  118A  	fcall	___lwmod
  1566     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1567     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1568     02AD  0841               	movf	?___lwmod,w
  1569     02AE  3E30               	addlw	48
  1570     02AF  00D1               	movwf	sprintf@c
  1571     02B0                     l1455:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1574     02B0  0850               	movf	sprintf@sp,w
  1575     02B1  0084               	movwf	4
  1576     02B2  0851               	movf	sprintf@c,w
  1577     02B3  1383               	bcf	3,7	;select IRP bank0
  1578     02B4  0080               	movwf	0
  1579     02B5                     l1457:
  1580     02B5  3001               	movlw	1
  1581     02B6  00C8               	movwf	??_sprintf
  1582     02B7  0848               	movf	??_sprintf,w
  1583     02B8  07D0               	addwf	sprintf@sp,f
  1584     02B9                     l1459:
  1585                           
  1586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1587     02B9  30FF               	movlw	255
  1588     02BA  00C8               	movwf	??_sprintf
  1589     02BB  0848               	movf	??_sprintf,w
  1590     02BC  07CD               	addwf	sprintf@prec,f
  1591     02BD  0A4D               	incf	sprintf@prec,w
  1592     02BE  1D03               	btfss	3,2
  1593     02BF  2AC1               	goto	u741
  1594     02C0  2AC2               	goto	u740
  1595     02C1                     u741:
  1596     02C1  2A82               	goto	l1453
  1597     02C2                     u740:
  1598     02C2                     l1461:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1601     02C2  3001               	movlw	1
  1602     02C3  07C5               	addwf	sprintf@f,f
  1603     02C4  30FF               	movlw	-1
  1604     02C5  0745               	addwf	sprintf@f,w
  1605     02C6  0084               	movwf	4
  1606     02C7  120A  118A  2492  120A  118A  	fcall	stringdir
  1607     02CC  00D1               	movwf	sprintf@c
  1608     02CD  0851               	movf	sprintf@c,w
  1609     02CE  1D03               	btfss	3,2
  1610     02CF  2AD1               	goto	u751
  1611     02D0  2AD2               	goto	u750
  1612     02D1                     u751:
  1613     02D1  2A01               	goto	l1411
  1614     02D2                     u750:
  1615     02D2                     l1463:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1618     02D2  0850               	movf	sprintf@sp,w
  1619     02D3  0084               	movwf	4
  1620     02D4  1383               	bcf	3,7	;select IRP bank0
  1621     02D5  0180               	clrf	0
  1622     02D6                     l297:
  1623     02D6  0008               	return
  1624     02D7                     __end_of_sprintf:
  1625                           
  1626                           	psect	text2
  1627     0414                     __ptext2:	
  1628 ;; *************** function ___lwmod *****************
  1629 ;; Defined at:
  1630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  divisor         2    0[BANK0 ] unsigned int 
  1633 ;;  dividend        2    2[BANK0 ] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  counter         1   11[COMMON] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2    0[BANK0 ] unsigned int 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       4       0       0       0
  1646 ;;      Locals:         1       0       0       0       0
  1647 ;;      Temps:          1       0       0       0       0
  1648 ;;      Totals:         2       4       0       0       0
  1649 ;;Total ram usage:        6 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_sprintf
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659     0414                     ___lwmod:	
  1660                           ;psect for function ___lwmod
  1661                           
  1662     0414                     l1291:	
  1663                           ;incstack = 0
  1664                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1665                           
  1666     0414  1283               	bcf	3,5	;RP0=0, select bank0
  1667     0415  1303               	bcf	3,6	;RP1=0, select bank0
  1668     0416  0841               	movf	___lwmod@divisor,w
  1669     0417  0442               	iorwf	___lwmod@divisor+1,w
  1670     0418  1903               	btfsc	3,2
  1671     0419  2C1B               	goto	u571
  1672     041A  2C1C               	goto	u570
  1673     041B                     u571:
  1674     041B  2C4B               	goto	l1309
  1675     041C                     u570:
  1676     041C                     l1293:
  1677     041C  01FB               	clrf	___lwmod@counter
  1678     041D  0AFB               	incf	___lwmod@counter,f
  1679     041E  2C2A               	goto	l1299
  1680     041F                     l1295:
  1681     041F  3001               	movlw	1
  1682     0420                     u585:
  1683     0420  1003               	clrc
  1684     0421  0DC1               	rlf	___lwmod@divisor,f
  1685     0422  0DC2               	rlf	___lwmod@divisor+1,f
  1686     0423  3EFF               	addlw	-1
  1687     0424  1D03               	skipz
  1688     0425  2C20               	goto	u585
  1689     0426                     l1297:
  1690     0426  3001               	movlw	1
  1691     0427  00FA               	movwf	??___lwmod
  1692     0428  087A               	movf	??___lwmod,w
  1693     0429  07FB               	addwf	___lwmod@counter,f
  1694     042A                     l1299:
  1695     042A  1FC2               	btfss	___lwmod@divisor+1,7
  1696     042B  2C2D               	goto	u591
  1697     042C  2C2E               	goto	u590
  1698     042D                     u591:
  1699     042D  2C1F               	goto	l1295
  1700     042E                     u590:
  1701     042E                     l1301:
  1702     042E  0842               	movf	___lwmod@divisor+1,w
  1703     042F  0244               	subwf	___lwmod@dividend+1,w
  1704     0430  1D03               	skipz
  1705     0431  2C34               	goto	u605
  1706     0432  0841               	movf	___lwmod@divisor,w
  1707     0433  0243               	subwf	___lwmod@dividend,w
  1708     0434                     u605:
  1709     0434  1C03               	skipc
  1710     0435  2C37               	goto	u601
  1711     0436  2C38               	goto	u600
  1712     0437                     u601:
  1713     0437  2C3E               	goto	l1305
  1714     0438                     u600:
  1715     0438                     l1303:
  1716     0438  0841               	movf	___lwmod@divisor,w
  1717     0439  02C3               	subwf	___lwmod@dividend,f
  1718     043A  0842               	movf	___lwmod@divisor+1,w
  1719     043B  1C03               	skipc
  1720     043C  03C4               	decf	___lwmod@dividend+1,f
  1721     043D  02C4               	subwf	___lwmod@dividend+1,f
  1722     043E                     l1305:
  1723     043E  3001               	movlw	1
  1724     043F                     u615:
  1725     043F  1003               	clrc
  1726     0440  0CC2               	rrf	___lwmod@divisor+1,f
  1727     0441  0CC1               	rrf	___lwmod@divisor,f
  1728     0442  3EFF               	addlw	-1
  1729     0443  1D03               	skipz
  1730     0444  2C3F               	goto	u615
  1731     0445                     l1307:
  1732     0445  3001               	movlw	1
  1733     0446  02FB               	subwf	___lwmod@counter,f
  1734     0447  1D03               	btfss	3,2
  1735     0448  2C4A               	goto	u621
  1736     0449  2C4B               	goto	u620
  1737     044A                     u621:
  1738     044A  2C2E               	goto	l1301
  1739     044B                     u620:
  1740     044B                     l1309:
  1741     044B  0844               	movf	___lwmod@dividend+1,w
  1742     044C  00C2               	movwf	?___lwmod+1
  1743     044D  0843               	movf	___lwmod@dividend,w
  1744     044E  00C1               	movwf	?___lwmod
  1745     044F                     l583:
  1746     044F  0008               	return
  1747     0450                     __end_of___lwmod:
  1748                           
  1749                           	psect	text3
  1750     03D0                     __ptext3:	
  1751 ;; *************** function ___lwdiv *****************
  1752 ;; Defined at:
  1753 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  divisor         2    2[COMMON] unsigned int 
  1756 ;;  dividend        2    4[COMMON] unsigned int 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  quotient        2    7[COMMON] unsigned int 
  1759 ;;  counter         1    9[COMMON] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2    2[COMMON] unsigned int 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         4       0       0       0       0
  1770 ;;      Locals:         3       0       0       0       0
  1771 ;;      Temps:          1       0       0       0       0
  1772 ;;      Totals:         8       0       0       0       0
  1773 ;;Total ram usage:        8 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_sprintf
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783     03D0                     ___lwdiv:	
  1784                           ;psect for function ___lwdiv
  1785                           
  1786     03D0                     l1265:	
  1787                           ;incstack = 0
  1788                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1789                           
  1790     03D0  01F7               	clrf	___lwdiv@quotient
  1791     03D1  01F8               	clrf	___lwdiv@quotient+1
  1792     03D2                     l1267:
  1793     03D2  0872               	movf	___lwdiv@divisor,w
  1794     03D3  0473               	iorwf	___lwdiv@divisor+1,w
  1795     03D4  1903               	btfsc	3,2
  1796     03D5  2BD7               	goto	u501
  1797     03D6  2BD8               	goto	u500
  1798     03D7                     u501:
  1799     03D7  2C0F               	goto	l1287
  1800     03D8                     u500:
  1801     03D8                     l1269:
  1802     03D8  01F9               	clrf	___lwdiv@counter
  1803     03D9  0AF9               	incf	___lwdiv@counter,f
  1804     03DA  2BE6               	goto	l1275
  1805     03DB                     l1271:
  1806     03DB  3001               	movlw	1
  1807     03DC                     u515:
  1808     03DC  1003               	clrc
  1809     03DD  0DF2               	rlf	___lwdiv@divisor,f
  1810     03DE  0DF3               	rlf	___lwdiv@divisor+1,f
  1811     03DF  3EFF               	addlw	-1
  1812     03E0  1D03               	skipz
  1813     03E1  2BDC               	goto	u515
  1814     03E2                     l1273:
  1815     03E2  3001               	movlw	1
  1816     03E3  00F6               	movwf	??___lwdiv
  1817     03E4  0876               	movf	??___lwdiv,w
  1818     03E5  07F9               	addwf	___lwdiv@counter,f
  1819     03E6                     l1275:
  1820     03E6  1FF3               	btfss	___lwdiv@divisor+1,7
  1821     03E7  2BE9               	goto	u521
  1822     03E8  2BEA               	goto	u520
  1823     03E9                     u521:
  1824     03E9  2BDB               	goto	l1271
  1825     03EA                     u520:
  1826     03EA                     l1277:
  1827     03EA  3001               	movlw	1
  1828     03EB                     u535:
  1829     03EB  1003               	clrc
  1830     03EC  0DF7               	rlf	___lwdiv@quotient,f
  1831     03ED  0DF8               	rlf	___lwdiv@quotient+1,f
  1832     03EE  3EFF               	addlw	-1
  1833     03EF  1D03               	skipz
  1834     03F0  2BEB               	goto	u535
  1835     03F1  0873               	movf	___lwdiv@divisor+1,w
  1836     03F2  0275               	subwf	___lwdiv@dividend+1,w
  1837     03F3  1D03               	skipz
  1838     03F4  2BF7               	goto	u545
  1839     03F5  0872               	movf	___lwdiv@divisor,w
  1840     03F6  0274               	subwf	___lwdiv@dividend,w
  1841     03F7                     u545:
  1842     03F7  1C03               	skipc
  1843     03F8  2BFA               	goto	u541
  1844     03F9  2BFB               	goto	u540
  1845     03FA                     u541:
  1846     03FA  2C02               	goto	l1283
  1847     03FB                     u540:
  1848     03FB                     l1279:
  1849     03FB  0872               	movf	___lwdiv@divisor,w
  1850     03FC  02F4               	subwf	___lwdiv@dividend,f
  1851     03FD  0873               	movf	___lwdiv@divisor+1,w
  1852     03FE  1C03               	skipc
  1853     03FF  03F5               	decf	___lwdiv@dividend+1,f
  1854     0400  02F5               	subwf	___lwdiv@dividend+1,f
  1855     0401                     l1281:
  1856     0401  1477               	bsf	___lwdiv@quotient,0
  1857     0402                     l1283:
  1858     0402  3001               	movlw	1
  1859     0403                     u555:
  1860     0403  1003               	clrc
  1861     0404  0CF3               	rrf	___lwdiv@divisor+1,f
  1862     0405  0CF2               	rrf	___lwdiv@divisor,f
  1863     0406  3EFF               	addlw	-1
  1864     0407  1D03               	skipz
  1865     0408  2C03               	goto	u555
  1866     0409                     l1285:
  1867     0409  3001               	movlw	1
  1868     040A  02F9               	subwf	___lwdiv@counter,f
  1869     040B  1D03               	btfss	3,2
  1870     040C  2C0E               	goto	u561
  1871     040D  2C0F               	goto	u560
  1872     040E                     u561:
  1873     040E  2BEA               	goto	l1277
  1874     040F                     u560:
  1875     040F                     l1287:
  1876     040F  0878               	movf	___lwdiv@quotient+1,w
  1877     0410  00F3               	movwf	?___lwdiv+1
  1878     0411  0877               	movf	___lwdiv@quotient,w
  1879     0412  00F2               	movwf	?___lwdiv
  1880     0413                     l573:
  1881     0413  0008               	return
  1882     0414                     __end_of___lwdiv:
  1883                           
  1884                           	psect	text4
  1885     04E4                     __ptext4:	
  1886 ;; *************** function _setup *****************
  1887 ;; Defined at:
  1888 ;;		line 172 in file "Master_Sensores.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 3
  1909 ;; This function calls:
  1910 ;;		_I2C_Master_Init
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     04E4                     _setup:	
  1917                           ;psect for function _setup
  1918                           
  1919     04E4                     l1373:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1922                           
  1923                           
  1924                           ;Master_Sensores.c: 173:     ANSEL = 0;
  1925     04E4  1683               	bsf	3,5	;RP0=1, select bank3
  1926     04E5  1703               	bsf	3,6	;RP1=1, select bank3
  1927     04E6  0188               	clrf	8	;volatile
  1928                           
  1929                           ;Master_Sensores.c: 174:     ANSELH = 0;
  1930     04E7  0189               	clrf	9	;volatile
  1931                           
  1932                           ;Master_Sensores.c: 177:     TRISA = 0;
  1933     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  1934     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  1935     04EA  0185               	clrf	5	;volatile
  1936     04EB                     l1375:
  1937                           
  1938                           ;Master_Sensores.c: 178:     TRISB = 0b11111111;
  1939     04EB  30FF               	movlw	255
  1940     04EC  0086               	movwf	6	;volatile
  1941     04ED                     l1377:
  1942                           
  1943                           ;Master_Sensores.c: 179:     TRISD = 0;
  1944     04ED  0188               	clrf	8	;volatile
  1945     04EE                     l1379:
  1946                           
  1947                           ;Master_Sensores.c: 180:     TRISE = 0;
  1948     04EE  0189               	clrf	9	;volatile
  1949     04EF                     l1381:
  1950                           
  1951                           ;Master_Sensores.c: 183:     PORTA = 0;
  1952     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1953     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1954     04F1  0185               	clrf	5	;volatile
  1955     04F2                     l1383:
  1956                           
  1957                           ;Master_Sensores.c: 184:     PORTB = 0;
  1958     04F2  0186               	clrf	6	;volatile
  1959     04F3                     l1385:
  1960                           
  1961                           ;Master_Sensores.c: 185:     PORTD = 0;
  1962     04F3  0188               	clrf	8	;volatile
  1963     04F4                     l1387:
  1964                           
  1965                           ;Master_Sensores.c: 186:     PORTE = 0;
  1966     04F4  0189               	clrf	9	;volatile
  1967     04F5                     l1389:
  1968                           
  1969                           ;Master_Sensores.c: 188:     OPTION_REGbits.nRBPU = 0;
  1970     04F5  1683               	bsf	3,5	;RP0=1, select bank1
  1971     04F6  1303               	bcf	3,6	;RP1=0, select bank1
  1972     04F7  1381               	bcf	1,7	;volatile
  1973     04F8                     l1391:
  1974                           
  1975                           ;Master_Sensores.c: 189:     IOCB = 0b11111111;
  1976     04F8  30FF               	movlw	255
  1977     04F9  0096               	movwf	22	;volatile
  1978     04FA                     l1393:
  1979                           
  1980                           ;Master_Sensores.c: 191:     OSCCONbits.IRCF = 0b111;
  1981     04FA  3070               	movlw	112
  1982     04FB  048F               	iorwf	15,f	;volatile
  1983     04FC                     l1395:
  1984                           
  1985                           ;Master_Sensores.c: 192:     OSCCONbits.SCS = 1;
  1986     04FC  140F               	bsf	15,0	;volatile
  1987     04FD                     l1397:
  1988                           
  1989                           ;Master_Sensores.c: 194:     INTCONbits.RBIF = 0;
  1990     04FD  100B               	bcf	11,0	;volatile
  1991     04FE                     l1399:
  1992                           
  1993                           ;Master_Sensores.c: 195:     INTCONbits.RBIE = 1;
  1994     04FE  158B               	bsf	11,3	;volatile
  1995     04FF                     l1401:
  1996                           
  1997                           ;Master_Sensores.c: 196:     INTCONbits.GIE = 1;
  1998     04FF  178B               	bsf	11,7	;volatile
  1999     0500                     l1403:
  2000                           
  2001                           ;Master_Sensores.c: 197:     INTCONbits.PEIE = 1;
  2002     0500  170B               	bsf	11,6	;volatile
  2003     0501                     l1405:
  2004                           
  2005                           ;Master_Sensores.c: 199:     I2C_Master_Init(100000);
  2006     0501  3000               	movlw	0
  2007     0502  1283               	bcf	3,5	;RP0=0, select bank0
  2008     0503  1303               	bcf	3,6	;RP1=0, select bank0
  2009     0504  00C9               	movwf	I2C_Master_Init@c+3
  2010     0505  3001               	movlw	1
  2011     0506  00C8               	movwf	I2C_Master_Init@c+2
  2012     0507  3086               	movlw	134
  2013     0508  00C7               	movwf	I2C_Master_Init@c+1
  2014     0509  30A0               	movlw	160
  2015     050A  00C6               	movwf	I2C_Master_Init@c
  2016     050B  120A  118A  2450  120A  118A  	fcall	_I2C_Master_Init
  2017     0510                     l187:
  2018     0510  0008               	return
  2019     0511                     __end_of_setup:
  2020                           
  2021                           	psect	text5
  2022     0450                     __ptext5:	
  2023 ;; *************** function _I2C_Master_Init *****************
  2024 ;; Defined at:
  2025 ;;		line 17 in file "I2C.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  c               4    5[BANK0 ] const unsigned long 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       4       0       0       0
  2040 ;;      Locals:         0       0       0       0       0
  2041 ;;      Temps:          0       4       0       0       0
  2042 ;;      Totals:         0       8       0       0       0
  2043 ;;Total ram usage:        8 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 2
  2046 ;; This function calls:
  2047 ;;		___lldiv
  2048 ;; This function is called by:
  2049 ;;		_setup
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053     0450                     _I2C_Master_Init:	
  2054                           ;psect for function _I2C_Master_Init
  2055                           
  2056     0450                     l1227:	
  2057                           ;incstack = 0
  2058                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2059                           
  2060                           
  2061                           ;I2C.c: 17: void I2C_Master_Init(const unsigned long c);I2C.c: 18: {;I2C.c: 19:     SSPC
      +                          ON = 0b00101000;
  2062     0450  3028               	movlw	40
  2063     0451  1283               	bcf	3,5	;RP0=0, select bank0
  2064     0452  1303               	bcf	3,6	;RP1=0, select bank0
  2065     0453  0094               	movwf	20	;volatile
  2066     0454                     l1229:
  2067                           
  2068                           ;I2C.c: 20:     SSPCON2 = 0;
  2069     0454  1683               	bsf	3,5	;RP0=1, select bank1
  2070     0455  1303               	bcf	3,6	;RP1=0, select bank1
  2071     0456  0191               	clrf	17	;volatile
  2072     0457                     l1231:
  2073                           
  2074                           ;I2C.c: 21:     SSPADD = (8000000/(4*c))-1;
  2075     0457  1283               	bcf	3,5	;RP0=0, select bank0
  2076     0458  1303               	bcf	3,6	;RP1=0, select bank0
  2077     0459  0846               	movf	I2C_Master_Init@c,w
  2078     045A  00CA               	movwf	??_I2C_Master_Init
  2079     045B  0847               	movf	I2C_Master_Init@c+1,w
  2080     045C  00CB               	movwf	??_I2C_Master_Init+1
  2081     045D  0848               	movf	I2C_Master_Init@c+2,w
  2082     045E  00CC               	movwf	??_I2C_Master_Init+2
  2083     045F  0849               	movf	I2C_Master_Init@c+3,w
  2084     0460  00CD               	movwf	??_I2C_Master_Init+3
  2085     0461  3002               	movlw	2
  2086     0462                     u475:
  2087     0462  1003               	clrc
  2088     0463  0DCA               	rlf	??_I2C_Master_Init,f
  2089     0464  0DCB               	rlf	??_I2C_Master_Init+1,f
  2090     0465  0DCC               	rlf	??_I2C_Master_Init+2,f
  2091     0466  0DCD               	rlf	??_I2C_Master_Init+3,f
  2092     0467                     u470:
  2093     0467  3EFF               	addlw	-1
  2094     0468  1D03               	skipz
  2095     0469  2C62               	goto	u475
  2096     046A  084D               	movf	??_I2C_Master_Init+3,w
  2097     046B  00F5               	movwf	___lldiv@divisor+3
  2098     046C  084C               	movf	??_I2C_Master_Init+2,w
  2099     046D  00F4               	movwf	___lldiv@divisor+2
  2100     046E  084B               	movf	??_I2C_Master_Init+1,w
  2101     046F  00F3               	movwf	___lldiv@divisor+1
  2102     0470  084A               	movf	??_I2C_Master_Init,w
  2103     0471  00F2               	movwf	___lldiv@divisor
  2104     0472  3000               	movlw	0
  2105     0473  00F9               	movwf	___lldiv@dividend+3
  2106     0474  307A               	movlw	122
  2107     0475  00F8               	movwf	___lldiv@dividend+2
  2108     0476  3012               	movlw	18
  2109     0477  00F7               	movwf	___lldiv@dividend+1
  2110     0478  3000               	movlw	0
  2111     0479  00F6               	movwf	___lldiv@dividend
  2112     047A  120A  118A  22D7  120A  118A  	fcall	___lldiv
  2113     047F  0872               	movf	?___lldiv,w
  2114     0480  3EFF               	addlw	255
  2115     0481  1683               	bsf	3,5	;RP0=1, select bank1
  2116     0482  1303               	bcf	3,6	;RP1=0, select bank1
  2117     0483  0093               	movwf	19	;volatile
  2118     0484                     l1233:
  2119                           
  2120                           ;I2C.c: 22:     SSPSTAT = 0;
  2121     0484  0194               	clrf	20	;volatile
  2122     0485                     l1235:
  2123                           
  2124                           ;I2C.c: 23:     TRISCbits.TRISC3 = 1;
  2125     0485  1587               	bsf	7,3	;volatile
  2126     0486                     l1237:
  2127                           
  2128                           ;I2C.c: 24:     TRISCbits.TRISC4 = 1;
  2129     0486  1607               	bsf	7,4	;volatile
  2130     0487                     l29:
  2131     0487  0008               	return
  2132     0488                     __end_of_I2C_Master_Init:
  2133                           
  2134                           	psect	text6
  2135     02D7                     __ptext6:	
  2136 ;; *************** function ___lldiv *****************
  2137 ;; Defined at:
  2138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  divisor         4    2[COMMON] unsigned long 
  2141 ;;  dividend        4    6[COMMON] unsigned long 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  quotient        4    0[BANK0 ] unsigned long 
  2144 ;;  counter         1    4[BANK0 ] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  4    2[COMMON] unsigned long 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         8       0       0       0       0
  2155 ;;      Locals:         0       5       0       0       0
  2156 ;;      Temps:          1       0       0       0       0
  2157 ;;      Totals:         9       5       0       0       0
  2158 ;;Total ram usage:       14 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_I2C_Master_Init
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168     02D7                     ___lldiv:	
  2169                           ;psect for function ___lldiv
  2170                           
  2171     02D7                     l1203:	
  2172                           ;incstack = 0
  2173                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2174                           
  2175     02D7  3000               	movlw	0
  2176     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2177     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2178     02DA  00C4               	movwf	___lldiv@quotient+3
  2179     02DB  3000               	movlw	0
  2180     02DC  00C3               	movwf	___lldiv@quotient+2
  2181     02DD  3000               	movlw	0
  2182     02DE  00C2               	movwf	___lldiv@quotient+1
  2183     02DF  3000               	movlw	0
  2184     02E0  00C1               	movwf	___lldiv@quotient
  2185     02E1  0875               	movf	___lldiv@divisor+3,w
  2186     02E2  0474               	iorwf	___lldiv@divisor+2,w
  2187     02E3  0473               	iorwf	___lldiv@divisor+1,w
  2188     02E4  0472               	iorwf	___lldiv@divisor,w
  2189     02E5  1903               	skipnz
  2190     02E6  2AE8               	goto	u401
  2191     02E7  2AE9               	goto	u400
  2192     02E8                     u401:
  2193     02E8  2B36               	goto	l1223
  2194     02E9                     u400:
  2195     02E9                     l1205:
  2196     02E9  01C5               	clrf	___lldiv@counter
  2197     02EA  0AC5               	incf	___lldiv@counter,f
  2198     02EB  2AF9               	goto	l1209
  2199     02EC                     l1207:
  2200     02EC  3001               	movlw	1
  2201     02ED  00FA               	movwf	??___lldiv
  2202     02EE                     u415:
  2203     02EE  1003               	clrc
  2204     02EF  0DF2               	rlf	___lldiv@divisor,f
  2205     02F0  0DF3               	rlf	___lldiv@divisor+1,f
  2206     02F1  0DF4               	rlf	___lldiv@divisor+2,f
  2207     02F2  0DF5               	rlf	___lldiv@divisor+3,f
  2208     02F3  0BFA               	decfsz	??___lldiv,f
  2209     02F4  2AEE               	goto	u415
  2210     02F5  3001               	movlw	1
  2211     02F6  00FA               	movwf	??___lldiv
  2212     02F7  087A               	movf	??___lldiv,w
  2213     02F8  07C5               	addwf	___lldiv@counter,f
  2214     02F9                     l1209:
  2215     02F9  1FF5               	btfss	___lldiv@divisor+3,7
  2216     02FA  2AFC               	goto	u421
  2217     02FB  2AFD               	goto	u420
  2218     02FC                     u421:
  2219     02FC  2AEC               	goto	l1207
  2220     02FD                     u420:
  2221     02FD                     l1211:
  2222     02FD  3001               	movlw	1
  2223     02FE  00FA               	movwf	??___lldiv
  2224     02FF                     u435:
  2225     02FF  1003               	clrc
  2226     0300  0DC1               	rlf	___lldiv@quotient,f
  2227     0301  0DC2               	rlf	___lldiv@quotient+1,f
  2228     0302  0DC3               	rlf	___lldiv@quotient+2,f
  2229     0303  0DC4               	rlf	___lldiv@quotient+3,f
  2230     0304  0BFA               	decfsz	??___lldiv,f
  2231     0305  2AFF               	goto	u435
  2232     0306                     l1213:
  2233     0306  0875               	movf	___lldiv@divisor+3,w
  2234     0307  0279               	subwf	___lldiv@dividend+3,w
  2235     0308  1D03               	skipz
  2236     0309  2B14               	goto	u445
  2237     030A  0874               	movf	___lldiv@divisor+2,w
  2238     030B  0278               	subwf	___lldiv@dividend+2,w
  2239     030C  1D03               	skipz
  2240     030D  2B14               	goto	u445
  2241     030E  0873               	movf	___lldiv@divisor+1,w
  2242     030F  0277               	subwf	___lldiv@dividend+1,w
  2243     0310  1D03               	skipz
  2244     0311  2B14               	goto	u445
  2245     0312  0872               	movf	___lldiv@divisor,w
  2246     0313  0276               	subwf	___lldiv@dividend,w
  2247     0314                     u445:
  2248     0314  1C03               	skipc
  2249     0315  2B17               	goto	u441
  2250     0316  2B18               	goto	u440
  2251     0317                     u441:
  2252     0317  2B27               	goto	l1219
  2253     0318                     u440:
  2254     0318                     l1215:
  2255     0318  0872               	movf	___lldiv@divisor,w
  2256     0319  02F6               	subwf	___lldiv@dividend,f
  2257     031A  0873               	movf	___lldiv@divisor+1,w
  2258     031B  1C03               	skipc
  2259     031C  0F73               	incfsz	___lldiv@divisor+1,w
  2260     031D  02F7               	subwf	___lldiv@dividend+1,f
  2261     031E  0874               	movf	___lldiv@divisor+2,w
  2262     031F  1C03               	skipc
  2263     0320  0F74               	incfsz	___lldiv@divisor+2,w
  2264     0321  02F8               	subwf	___lldiv@dividend+2,f
  2265     0322  0875               	movf	___lldiv@divisor+3,w
  2266     0323  1C03               	skipc
  2267     0324  0F75               	incfsz	___lldiv@divisor+3,w
  2268     0325  02F9               	subwf	___lldiv@dividend+3,f
  2269     0326                     l1217:
  2270     0326  1441               	bsf	___lldiv@quotient,0
  2271     0327                     l1219:
  2272     0327  3001               	movlw	1
  2273     0328                     u455:
  2274     0328  1003               	clrc
  2275     0329  0CF5               	rrf	___lldiv@divisor+3,f
  2276     032A  0CF4               	rrf	___lldiv@divisor+2,f
  2277     032B  0CF3               	rrf	___lldiv@divisor+1,f
  2278     032C  0CF2               	rrf	___lldiv@divisor,f
  2279     032D  3EFF               	addlw	-1
  2280     032E  1D03               	skipz
  2281     032F  2B28               	goto	u455
  2282     0330                     l1221:
  2283     0330  3001               	movlw	1
  2284     0331  02C5               	subwf	___lldiv@counter,f
  2285     0332  1D03               	btfss	3,2
  2286     0333  2B35               	goto	u461
  2287     0334  2B36               	goto	u460
  2288     0335                     u461:
  2289     0335  2AFD               	goto	l1211
  2290     0336                     u460:
  2291     0336                     l1223:
  2292     0336  0844               	movf	___lldiv@quotient+3,w
  2293     0337  00F5               	movwf	?___lldiv+3
  2294     0338  0843               	movf	___lldiv@quotient+2,w
  2295     0339  00F4               	movwf	?___lldiv+2
  2296     033A  0842               	movf	___lldiv@quotient+1,w
  2297     033B  00F3               	movwf	?___lldiv+1
  2298     033C  0841               	movf	___lldiv@quotient,w
  2299     033D  00F2               	movwf	?___lldiv
  2300     033E                     l337:
  2301     033E  0008               	return
  2302     033F                     __end_of___lldiv:
  2303                           
  2304                           	psect	text7
  2305     038A                     __ptext7:	
  2306 ;; *************** function _Lcd_Write_String8 *****************
  2307 ;; Defined at:
  2308 ;;		line 75 in file "LCD8bits.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  a               2    6[COMMON] PTR unsigned char 
  2311 ;;		 -> STR_6(6), STR_5(5), STR_4(6), Infra(8), 
  2312 ;;		 -> Foto(8), Ultra(8), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  i               2    0[BANK0 ] int 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         2       0       0       0       0
  2325 ;;      Locals:         0       2       0       0       0
  2326 ;;      Temps:          3       0       0       0       0
  2327 ;;      Totals:         5       2       0       0       0
  2328 ;;Total ram usage:        7 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 3
  2331 ;; This function calls:
  2332 ;;		_Lcd_Write_Char8
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338     038A                     _Lcd_Write_String8:	
  2339                           ;psect for function _Lcd_Write_String8
  2340                           
  2341     038A                     l1365:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _Lcd_Write_String8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2344                           
  2345                           
  2346                           ;LCD8bits.c: 76:     int i;;LCD8bits.c: 77:     for (i = 0; a[i] != '\0'; i++)
  2347     038A  1283               	bcf	3,5	;RP0=0, select bank0
  2348     038B  1303               	bcf	3,6	;RP1=0, select bank0
  2349     038C  01C1               	clrf	Lcd_Write_String8@i
  2350     038D  01C2               	clrf	Lcd_Write_String8@i+1
  2351     038E  2BB3               	goto	l1371
  2352     038F                     l1367:
  2353                           
  2354                           ;LCD8bits.c: 78:         Lcd_Write_Char8(a[i]);
  2355     038F  0841               	movf	Lcd_Write_String8@i,w
  2356     0390  0776               	addwf	Lcd_Write_String8@a,w
  2357     0391  00F9               	movwf	??_Lcd_Write_String8+1
  2358     0392  0877               	movf	Lcd_Write_String8@a+1,w
  2359     0393  00F8               	movwf	??_Lcd_Write_String8
  2360     0394  1803               	skipnc
  2361     0395  0AF8               	incf	??_Lcd_Write_String8,f
  2362     0396  1FC1               	btfss	Lcd_Write_String8@i,7
  2363     0397  2B99               	goto	u660
  2364     0398  03F8               	decf	??_Lcd_Write_String8,f
  2365     0399                     u660:
  2366     0399  0878               	movf	??_Lcd_Write_String8,w
  2367     039A  00FA               	movwf	??_Lcd_Write_String8+2
  2368     039B  087A               	movf	??_Lcd_Write_String8+2,w
  2369     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2370     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2371     039E  00FF               	movwf	btemp+1
  2372     039F  0879               	movf	??_Lcd_Write_String8+1,w
  2373     03A0  0084               	movwf	4
  2374     03A1  120A  118A  2488  120A  118A  	fcall	stringtab
  2375     03A6  120A  118A  2565  120A  118A  	fcall	_Lcd_Write_Char8
  2376     03AB                     l1369:
  2377     03AB  3001               	movlw	1
  2378     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2379     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2380     03AE  07C1               	addwf	Lcd_Write_String8@i,f
  2381     03AF  1803               	skipnc
  2382     03B0  0AC2               	incf	Lcd_Write_String8@i+1,f
  2383     03B1  3000               	movlw	0
  2384     03B2  07C2               	addwf	Lcd_Write_String8@i+1,f
  2385     03B3                     l1371:
  2386     03B3  0841               	movf	Lcd_Write_String8@i,w
  2387     03B4  0776               	addwf	Lcd_Write_String8@a,w
  2388     03B5  00F9               	movwf	??_Lcd_Write_String8+1
  2389     03B6  0877               	movf	Lcd_Write_String8@a+1,w
  2390     03B7  00F8               	movwf	??_Lcd_Write_String8
  2391     03B8  1803               	skipnc
  2392     03B9  0AF8               	incf	??_Lcd_Write_String8,f
  2393     03BA  1FC1               	btfss	Lcd_Write_String8@i,7
  2394     03BB  2BBD               	goto	u670
  2395     03BC  03F8               	decf	??_Lcd_Write_String8,f
  2396     03BD                     u670:
  2397     03BD  0878               	movf	??_Lcd_Write_String8,w
  2398     03BE  00FA               	movwf	??_Lcd_Write_String8+2
  2399     03BF  087A               	movf	??_Lcd_Write_String8+2,w
  2400     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2401     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2402     03C2  00FF               	movwf	btemp+1
  2403     03C3  0879               	movf	??_Lcd_Write_String8+1,w
  2404     03C4  0084               	movwf	4
  2405     03C5  120A  118A  2488  120A  118A  	fcall	stringtab
  2406     03CA  3A00               	xorlw	0
  2407     03CB  1D03               	skipz
  2408     03CC  2BCE               	goto	u681
  2409     03CD  2BCF               	goto	u680
  2410     03CE                     u681:
  2411     03CE  2B8F               	goto	l1367
  2412     03CF                     u680:
  2413     03CF                     l88:
  2414     03CF  0008               	return
  2415     03D0                     __end_of_Lcd_Write_String8:
  2416                           
  2417                           	psect	text8
  2418     0565                     __ptext8:	
  2419 ;; *************** function _Lcd_Write_Char8 *****************
  2420 ;; Defined at:
  2421 ;;		line 63 in file "LCD8bits.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  a               1    wreg     unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  a               1    5[COMMON] unsigned char 
  2426 ;;  y               1    4[COMMON] unsigned char 
  2427 ;;  temp            1    0        unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0       0       0       0
  2438 ;;      Locals:         2       0       0       0       0
  2439 ;;      Temps:          1       0       0       0       0
  2440 ;;      Totals:         3       0       0       0       0
  2441 ;;Total ram usage:        3 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 2
  2444 ;; This function calls:
  2445 ;;		_Lcd_Port8
  2446 ;; This function is called by:
  2447 ;;		_Lcd_Write_String8
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451     0565                     _Lcd_Write_Char8:	
  2452                           ;psect for function _Lcd_Write_Char8
  2453                           
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _Lcd_Write_Char8: [wreg+status,2+status,0+pclath+cstack]
  2457                           ;Lcd_Write_Char8@a stored from wreg
  2458     0565  00F5               	movwf	Lcd_Write_Char8@a
  2459     0566                     l1253:
  2460                           
  2461                           ;LCD8bits.c: 66:     y = a;
  2462     0566  0875               	movf	Lcd_Write_Char8@a,w
  2463     0567  00F4               	movwf	Lcd_Write_Char8@y
  2464     0568                     l1255:
  2465                           
  2466                           ;LCD8bits.c: 67:     PORTEbits.RE0 = 1;
  2467     0568  1283               	bcf	3,5	;RP0=0, select bank0
  2468     0569  1303               	bcf	3,6	;RP1=0, select bank0
  2469     056A  1409               	bsf	9,0	;volatile
  2470     056B                     l1257:
  2471                           
  2472                           ;LCD8bits.c: 68:     Lcd_Port8(y);
  2473     056B  0874               	movf	Lcd_Write_Char8@y,w
  2474     056C  120A  118A  25BB  120A  118A  	fcall	_Lcd_Port8
  2475     0571                     l1259:
  2476                           
  2477                           ;LCD8bits.c: 69:     PORTEbits.RE1 = 1;
  2478     0571  1283               	bcf	3,5	;RP0=0, select bank0
  2479     0572  1303               	bcf	3,6	;RP1=0, select bank0
  2480     0573  1489               	bsf	9,1	;volatile
  2481     0574                     l1261:
  2482                           
  2483                           ;LCD8bits.c: 70:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2484     0574  301A               	movlw	26
  2485     0575  00F3               	movwf	??_Lcd_Write_Char8
  2486     0576                     u867:
  2487     0576  0BF3               	decfsz	??_Lcd_Write_Char8,f
  2488     0577  2D76               	goto	u867
  2489     0578  0000               	nop
  2490     0579                     l1263:
  2491                           
  2492                           ;LCD8bits.c: 71:     PORTEbits.RE1 = 0;
  2493     0579  1283               	bcf	3,5	;RP0=0, select bank0
  2494     057A  1303               	bcf	3,6	;RP1=0, select bank0
  2495     057B  1089               	bcf	9,1	;volatile
  2496     057C                     l82:
  2497     057C  0008               	return
  2498     057D                     __end_of_Lcd_Write_Char8:
  2499                           
  2500                           	psect	text9
  2501     0511                     __ptext9:	
  2502 ;; *************** function _Lcd_Set_Cursor8 *****************
  2503 ;; Defined at:
  2504 ;;		line 33 in file "LCD8bits.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  a               1    wreg     unsigned char 
  2507 ;;  b               1    6[COMMON] unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  a               1    7[COMMON] unsigned char 
  2510 ;;  temp            1    8[COMMON] unsigned char 
  2511 ;;  y               1    0        unsigned char 
  2512 ;;  z               1    0        unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, pclath, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         1       0       0       0       0
  2523 ;;      Locals:         2       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0
  2525 ;;      Totals:         3       0       0       0       0
  2526 ;;Total ram usage:        3 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 3
  2529 ;; This function calls:
  2530 ;;		_Lcd_Cmd8
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536     0511                     _Lcd_Set_Cursor8:	
  2537                           ;psect for function _Lcd_Set_Cursor8
  2538                           
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _Lcd_Set_Cursor8: [wreg+status,2+status,0+pclath+cstack]
  2542                           ;Lcd_Set_Cursor8@a stored from wreg
  2543     0511  00F7               	movwf	Lcd_Set_Cursor8@a
  2544     0512                     l1343:
  2545                           
  2546                           ;LCD8bits.c: 34:     char temp, z, y;;LCD8bits.c: 35:     if (a == 1) {
  2547     0512  0377               	decf	Lcd_Set_Cursor8@a,w
  2548     0513  1D03               	btfss	3,2
  2549     0514  2D16               	goto	u641
  2550     0515  2D17               	goto	u640
  2551     0516                     u641:
  2552     0516  2D21               	goto	l1349
  2553     0517                     u640:
  2554     0517                     l1345:
  2555                           
  2556                           ;LCD8bits.c: 36:         temp = 0x80 + b - 1;
  2557     0517  0876               	movf	Lcd_Set_Cursor8@b,w
  2558     0518  3E7F               	addlw	127
  2559     0519  00F8               	movwf	Lcd_Set_Cursor8@temp
  2560     051A                     l1347:
  2561                           
  2562                           ;LCD8bits.c: 37:         Lcd_Cmd8(temp);
  2563     051A  0878               	movf	Lcd_Set_Cursor8@temp,w
  2564     051B  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2565                           
  2566                           ;LCD8bits.c: 38:     } else if (a == 2) {
  2567     0520  2D30               	goto	l76
  2568     0521                     l1349:
  2569     0521  3002               	movlw	2
  2570     0522  0677               	xorwf	Lcd_Set_Cursor8@a,w
  2571     0523  1D03               	btfss	3,2
  2572     0524  2D26               	goto	u651
  2573     0525  2D27               	goto	u650
  2574     0526                     u651:
  2575     0526  2D30               	goto	l76
  2576     0527                     u650:
  2577     0527                     l1351:
  2578                           
  2579                           ;LCD8bits.c: 39:         temp = 0xC0 + b - 1;
  2580     0527  0876               	movf	Lcd_Set_Cursor8@b,w
  2581     0528  3EBF               	addlw	191
  2582     0529  00F8               	movwf	Lcd_Set_Cursor8@temp
  2583     052A                     l1353:
  2584                           
  2585                           ;LCD8bits.c: 40:         Lcd_Cmd8(temp);
  2586     052A  0878               	movf	Lcd_Set_Cursor8@temp,w
  2587     052B  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2588     0530                     l76:
  2589     0530  0008               	return
  2590     0531                     __end_of_Lcd_Set_Cursor8:
  2591                           
  2592                           	psect	text10
  2593     033F                     __ptext10:	
  2594 ;; *************** function _Lcd_Init8 *****************
  2595 ;; Defined at:
  2596 ;;		line 44 in file "LCD8bits.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0
  2612 ;;      Temps:          2       0       0       0       0
  2613 ;;      Totals:         2       0       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 3
  2617 ;; This function calls:
  2618 ;;		_Lcd_Cmd8
  2619 ;;		_Lcd_Port8
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625     033F                     _Lcd_Init8:	
  2626                           ;psect for function _Lcd_Init8
  2627                           
  2628     033F                     l1355:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _Lcd_Init8: [wreg+status,2+status,0+pclath+cstack]
  2631                           
  2632                           
  2633                           ;LCD8bits.c: 45:     Lcd_Port8(0x00);
  2634     033F  3000               	movlw	0
  2635     0340  120A  118A  25BB  120A  118A  	fcall	_Lcd_Port8
  2636     0345                     l1357:
  2637                           
  2638                           ;LCD8bits.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2639     0345  3034               	movlw	52
  2640     0346  00F7               	movwf	??_Lcd_Init8+1
  2641     0347  30F1               	movlw	241
  2642     0348  00F6               	movwf	??_Lcd_Init8
  2643     0349                     u877:
  2644     0349  0BF6               	decfsz	??_Lcd_Init8,f
  2645     034A  2B49               	goto	u877
  2646     034B  0BF7               	decfsz	??_Lcd_Init8+1,f
  2647     034C  2B49               	goto	u877
  2648     034D  2B4E               	nop2
  2649     034E                     l1359:
  2650                           
  2651                           ;LCD8bits.c: 47:     Lcd_Cmd8(0x30);
  2652     034E  3030               	movlw	48
  2653     034F  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2654                           
  2655                           ;LCD8bits.c: 48:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2656     0354  300D               	movlw	13
  2657     0355  00F7               	movwf	??_Lcd_Init8+1
  2658     0356  30FB               	movlw	251
  2659     0357  00F6               	movwf	??_Lcd_Init8
  2660     0358                     u887:
  2661     0358  0BF6               	decfsz	??_Lcd_Init8,f
  2662     0359  2B58               	goto	u887
  2663     035A  0BF7               	decfsz	??_Lcd_Init8+1,f
  2664     035B  2B58               	goto	u887
  2665     035C  2B5D               	nop2
  2666     035D                     l1361:
  2667                           
  2668                           ;LCD8bits.c: 49:     Lcd_Cmd8(0x30);
  2669     035D  3030               	movlw	48
  2670     035E  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2671     0363                     l1363:
  2672                           
  2673                           ;LCD8bits.c: 50:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2674     0363  301D               	movlw	29
  2675     0364  00F7               	movwf	??_Lcd_Init8+1
  2676     0365  3091               	movlw	145
  2677     0366  00F6               	movwf	??_Lcd_Init8
  2678     0367                     u897:
  2679     0367  0BF6               	decfsz	??_Lcd_Init8,f
  2680     0368  2B67               	goto	u897
  2681     0369  0BF7               	decfsz	??_Lcd_Init8+1,f
  2682     036A  2B67               	goto	u897
  2683                           
  2684                           ;LCD8bits.c: 51:     Lcd_Cmd8(0x30);
  2685     036B  3030               	movlw	48
  2686     036C  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2687                           
  2688                           ;LCD8bits.c: 53:     Lcd_Cmd8(0x3C);
  2689     0371  303C               	movlw	60
  2690     0372  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2691                           
  2692                           ;LCD8bits.c: 57:     Lcd_Cmd8(0x0C);
  2693     0377  300C               	movlw	12
  2694     0378  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2695                           
  2696                           ;LCD8bits.c: 58:     Lcd_Cmd8(0x01);
  2697     037D  3001               	movlw	1
  2698     037E  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2699                           
  2700                           ;LCD8bits.c: 60:     Lcd_Cmd8(0x06);
  2701     0383  3006               	movlw	6
  2702     0384  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2703     0389                     l79:
  2704     0389  0008               	return
  2705     038A                     __end_of_Lcd_Init8:
  2706                           
  2707                           	psect	text11
  2708     057D                     __ptext11:	
  2709 ;; *************** function _Lcd_Clear8 *****************
  2710 ;; Defined at:
  2711 ;;		line 28 in file "LCD8bits.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;		None
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0, pclath, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2725 ;;      Params:         0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0
  2728 ;;      Totals:         0       0       0       0       0
  2729 ;;Total ram usage:        0 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 3
  2732 ;; This function calls:
  2733 ;;		_Lcd_Cmd8
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739     057D                     _Lcd_Clear8:	
  2740                           ;psect for function _Lcd_Clear8
  2741                           
  2742     057D                     l1341:	
  2743                           ;incstack = 0
  2744                           ; Regs used in _Lcd_Clear8: [wreg+status,2+status,0+pclath+cstack]
  2745                           
  2746                           
  2747                           ;LCD8bits.c: 29:     Lcd_Cmd8(0);
  2748     057D  3000               	movlw	0
  2749     057E  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2750                           
  2751                           ;LCD8bits.c: 30:     Lcd_Cmd8(1);
  2752     0583  3001               	movlw	1
  2753     0584  120A  118A  2531  120A  118A  	fcall	_Lcd_Cmd8
  2754     0589                     l70:
  2755     0589  0008               	return
  2756     058A                     __end_of_Lcd_Clear8:
  2757                           
  2758                           	psect	text12
  2759     0531                     __ptext12:	
  2760 ;; *************** function _Lcd_Cmd8 *****************
  2761 ;; Defined at:
  2762 ;;		line 20 in file "LCD8bits.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  a               1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  a               1    5[COMMON] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         1       0       0       0       0
  2778 ;;      Temps:          2       0       0       0       0
  2779 ;;      Totals:         3       0       0       0       0
  2780 ;;Total ram usage:        3 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 2
  2783 ;; This function calls:
  2784 ;;		_Lcd_Port8
  2785 ;; This function is called by:
  2786 ;;		_Lcd_Clear8
  2787 ;;		_Lcd_Set_Cursor8
  2788 ;;		_Lcd_Init8
  2789 ;;		_Lcd_Shift_Right8
  2790 ;;		_Lcd_Shift_Left8
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794     0531                     _Lcd_Cmd8:	
  2795                           ;psect for function _Lcd_Cmd8
  2796                           
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _Lcd_Cmd8: [wreg+status,2+status,0+pclath+cstack]
  2800                           ;Lcd_Cmd8@a stored from wreg
  2801     0531  00F5               	movwf	Lcd_Cmd8@a
  2802     0532                     l1243:
  2803                           
  2804                           ;LCD8bits.c: 21:     PORTEbits.RE0 = 0;
  2805     0532  1283               	bcf	3,5	;RP0=0, select bank0
  2806     0533  1303               	bcf	3,6	;RP1=0, select bank0
  2807     0534  1009               	bcf	9,0	;volatile
  2808     0535                     l1245:
  2809                           
  2810                           ;LCD8bits.c: 22:     Lcd_Port8(a);
  2811     0535  0875               	movf	Lcd_Cmd8@a,w
  2812     0536  120A  118A  25BB  120A  118A  	fcall	_Lcd_Port8
  2813     053B                     l1247:
  2814                           
  2815                           ;LCD8bits.c: 23:     PORTEbits.RE1 = 1;
  2816     053B  1283               	bcf	3,5	;RP0=0, select bank0
  2817     053C  1303               	bcf	3,6	;RP1=0, select bank0
  2818     053D  1489               	bsf	9,1	;volatile
  2819     053E                     l1249:
  2820                           
  2821                           ;LCD8bits.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2822     053E  300B               	movlw	11
  2823     053F  00F4               	movwf	??_Lcd_Cmd8+1
  2824     0540  3062               	movlw	98
  2825     0541  00F3               	movwf	??_Lcd_Cmd8
  2826     0542                     u907:
  2827     0542  0BF3               	decfsz	??_Lcd_Cmd8,f
  2828     0543  2D42               	goto	u907
  2829     0544  0BF4               	decfsz	??_Lcd_Cmd8+1,f
  2830     0545  2D42               	goto	u907
  2831     0546  0000               	nop
  2832     0547                     l1251:
  2833                           
  2834                           ;LCD8bits.c: 25:     PORTEbits.RE1 = 0;
  2835     0547  1283               	bcf	3,5	;RP0=0, select bank0
  2836     0548  1303               	bcf	3,6	;RP1=0, select bank0
  2837     0549  1089               	bcf	9,1	;volatile
  2838     054A                     l67:
  2839     054A  0008               	return
  2840     054B                     __end_of_Lcd_Cmd8:
  2841                           
  2842                           	psect	text13
  2843     05BB                     __ptext13:	
  2844 ;; *************** function _Lcd_Port8 *****************
  2845 ;; Defined at:
  2846 ;;		line 16 in file "LCD8bits.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  a               1    wreg     unsigned char 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  a               1    2[COMMON] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         1       0       0       0       0
  2864 ;;Total ram usage:        1 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_Lcd_Cmd8
  2871 ;;		_Lcd_Init8
  2872 ;;		_Lcd_Write_Char8
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     05BB                     _Lcd_Port8:	
  2877                           ;psect for function _Lcd_Port8
  2878                           
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _Lcd_Port8: [wreg]
  2882                           ;Lcd_Port8@a stored from wreg
  2883     05BB  00F2               	movwf	Lcd_Port8@a
  2884     05BC                     l1201:
  2885                           
  2886                           ;LCD8bits.c: 17:     PORTD = a;
  2887     05BC  0872               	movf	Lcd_Port8@a,w
  2888     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2889     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  2890     05BF  0088               	movwf	8	;volatile
  2891     05C0                     l64:
  2892     05C0  0008               	return
  2893     05C1                     __end_of_Lcd_Port8:
  2894                           
  2895                           	psect	text14
  2896     0597                     __ptext14:	
  2897 ;; *************** function _I2C_Master_Write *****************
  2898 ;; Defined at:
  2899 ;;		line 66 in file "I2C.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  d               2    2[COMMON] unsigned int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, pclath, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         2       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0
  2916 ;;      Totals:         2       0       0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 2
  2920 ;; This function calls:
  2921 ;;		_I2C_Master_Wait
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927     0597                     _I2C_Master_Write:	
  2928                           ;psect for function _I2C_Master_Write
  2929                           
  2930     0597                     l1321:	
  2931                           ;incstack = 0
  2932                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2933                           
  2934                           
  2935                           ;I2C.c: 66: void I2C_Master_Write(unsigned d);I2C.c: 67: {;I2C.c: 68:     I2C_Master_Wai
      +                          t();
  2936     0597  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Wait
  2937     059C                     l1323:
  2938                           
  2939                           ;I2C.c: 69:     SSPBUF = d;
  2940     059C  0872               	movf	I2C_Master_Write@d,w
  2941     059D  1283               	bcf	3,5	;RP0=0, select bank0
  2942     059E  1303               	bcf	3,6	;RP1=0, select bank0
  2943     059F  0093               	movwf	19	;volatile
  2944     05A0                     l47:
  2945     05A0  0008               	return
  2946     05A1                     __end_of_I2C_Master_Write:
  2947                           
  2948                           	psect	text15
  2949     05A1                     __ptext15:	
  2950 ;; *************** function _I2C_Master_Stop *****************
  2951 ;; Defined at:
  2952 ;;		line 56 in file "I2C.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 2
  2973 ;; This function calls:
  2974 ;;		_I2C_Master_Wait
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     05A1                     _I2C_Master_Stop:	
  2981                           ;psect for function _I2C_Master_Stop
  2982                           
  2983     05A1                     l1317:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2986                           
  2987                           
  2988                           ;I2C.c: 58:     I2C_Master_Wait();
  2989     05A1  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Wait
  2990     05A6                     l1319:
  2991                           
  2992                           ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  2993     05A6  1683               	bsf	3,5	;RP0=1, select bank1
  2994     05A7  1303               	bcf	3,6	;RP1=0, select bank1
  2995     05A8  1511               	bsf	17,2	;volatile
  2996     05A9                     l44:
  2997     05A9  0008               	return
  2998     05AA                     __end_of_I2C_Master_Stop:
  2999                           
  3000                           	psect	text16
  3001     05AA                     __ptext16:	
  3002 ;; *************** function _I2C_Master_Start *****************
  3003 ;; Defined at:
  3004 ;;		line 40 in file "I2C.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 2
  3025 ;; This function calls:
  3026 ;;		_I2C_Master_Wait
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032     05AA                     _I2C_Master_Start:	
  3033                           ;psect for function _I2C_Master_Start
  3034                           
  3035     05AA                     l1313:	
  3036                           ;incstack = 0
  3037                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3038                           
  3039                           
  3040                           ;I2C.c: 42:     I2C_Master_Wait();
  3041     05AA  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Wait
  3042     05AF                     l1315:
  3043                           
  3044                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  3045     05AF  1683               	bsf	3,5	;RP0=1, select bank1
  3046     05B0  1303               	bcf	3,6	;RP1=0, select bank1
  3047     05B1  1411               	bsf	17,0	;volatile
  3048     05B2                     l38:
  3049     05B2  0008               	return
  3050     05B3                     __end_of_I2C_Master_Start:
  3051                           
  3052                           	psect	text17
  3053     04B6                     __ptext17:	
  3054 ;; *************** function _I2C_Master_Read *****************
  3055 ;; Defined at:
  3056 ;;		line 75 in file "I2C.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  a               2    2[COMMON] unsigned short 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  temp            2    6[COMMON] unsigned short 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  2    2[COMMON] unsigned short 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3070 ;;      Params:         2       0       0       0       0
  3071 ;;      Locals:         2       0       0       0       0
  3072 ;;      Temps:          2       0       0       0       0
  3073 ;;      Totals:         6       0       0       0       0
  3074 ;;Total ram usage:        6 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 2
  3077 ;; This function calls:
  3078 ;;		_I2C_Master_Wait
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084     04B6                     _I2C_Master_Read:	
  3085                           ;psect for function _I2C_Master_Read
  3086                           
  3087     04B6                     l1325:	
  3088                           ;incstack = 0
  3089                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3090                           
  3091                           
  3092                           ;I2C.c: 75: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 76: {;I2C.c: 77:    
      +                           unsigned short temp;;I2C.c: 78:     I2C_Master_Wait();
  3093     04B6  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Wait
  3094     04BB                     l1327:
  3095                           
  3096                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  3097     04BB  1683               	bsf	3,5	;RP0=1, select bank1
  3098     04BC  1303               	bcf	3,6	;RP1=0, select bank1
  3099     04BD  1591               	bsf	17,3	;volatile
  3100                           
  3101                           ;I2C.c: 80:     I2C_Master_Wait();
  3102     04BE  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Wait
  3103     04C3                     l1329:
  3104                           
  3105                           ;I2C.c: 81:     temp = SSPBUF;
  3106     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  3107     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  3108     04C5  0813               	movf	19,w	;volatile
  3109     04C6  00F4               	movwf	??_I2C_Master_Read
  3110     04C7  01F5               	clrf	??_I2C_Master_Read+1
  3111     04C8  0874               	movf	??_I2C_Master_Read,w
  3112     04C9  00F6               	movwf	I2C_Master_Read@temp
  3113     04CA  0875               	movf	??_I2C_Master_Read+1,w
  3114     04CB  00F7               	movwf	I2C_Master_Read@temp+1
  3115     04CC                     l1331:
  3116                           
  3117                           ;I2C.c: 82:     I2C_Master_Wait();
  3118     04CC  120A  118A  258A  120A  118A  	fcall	_I2C_Master_Wait
  3119     04D1                     l1333:
  3120                           
  3121                           ;I2C.c: 83:     if(a == 1){
  3122     04D1  0372               	decf	I2C_Master_Read@a,w
  3123     04D2  0473               	iorwf	I2C_Master_Read@a+1,w
  3124     04D3  1D03               	btfss	3,2
  3125     04D4  2CD6               	goto	u631
  3126     04D5  2CD7               	goto	u630
  3127     04D6                     u631:
  3128     04D6  2CDB               	goto	l50
  3129     04D7                     u630:
  3130     04D7                     l1335:
  3131                           
  3132                           ;I2C.c: 84:         SSPCON2bits.ACKDT = 0;
  3133     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  3134     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  3135     04D9  1291               	bcf	17,5	;volatile
  3136                           
  3137                           ;I2C.c: 85:     }else{
  3138     04DA  2CDE               	goto	l51
  3139     04DB                     l50:
  3140                           
  3141                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 1;
  3142     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3143     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3144     04DD  1691               	bsf	17,5	;volatile
  3145     04DE                     l51:	
  3146                           ;I2C.c: 87:     }
  3147                           
  3148                           
  3149                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  3150     04DE  1611               	bsf	17,4	;volatile
  3151     04DF                     l1337:
  3152                           
  3153                           ;I2C.c: 89:     return temp;
  3154     04DF  0877               	movf	I2C_Master_Read@temp+1,w
  3155     04E0  00F3               	movwf	?_I2C_Master_Read+1
  3156     04E1  0876               	movf	I2C_Master_Read@temp,w
  3157     04E2  00F2               	movwf	?_I2C_Master_Read
  3158     04E3                     l52:
  3159     04E3  0008               	return
  3160     04E4                     __end_of_I2C_Master_Read:
  3161                           
  3162                           	psect	text18
  3163     058A                     __ptext18:	
  3164 ;; *************** function _I2C_Master_Wait *****************
  3165 ;; Defined at:
  3166 ;;		line 33 in file "I2C.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_I2C_Master_Start
  3191 ;;		_I2C_Master_Stop
  3192 ;;		_I2C_Master_Write
  3193 ;;		_I2C_Master_Read
  3194 ;;		_I2C_Master_RepeatedStart
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198     058A                     _I2C_Master_Wait:	
  3199                           ;psect for function _I2C_Master_Wait
  3200                           
  3201     058A                     l1239:	
  3202                           ;incstack = 0
  3203                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3204                           
  3205     058A                     l32:	
  3206                           ;I2C.c: 35:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3207                           
  3208     058A  1683               	bsf	3,5	;RP0=1, select bank1
  3209     058B  1303               	bcf	3,6	;RP1=0, select bank1
  3210     058C  1914               	btfsc	20,2	;volatile
  3211     058D  2D8F               	goto	u481
  3212     058E  2D90               	goto	u480
  3213     058F                     u481:
  3214     058F  2D8A               	goto	l32
  3215     0590                     u480:
  3216     0590                     l1241:
  3217     0590  0811               	movf	17,w	;volatile
  3218     0591  391F               	andlw	31
  3219     0592  1D03               	btfss	3,2
  3220     0593  2D95               	goto	u491
  3221     0594  2D96               	goto	u490
  3222     0595                     u491:
  3223     0595  2D8A               	goto	l32
  3224     0596                     u490:
  3225     0596                     l35:
  3226     0596  0008               	return
  3227     0597                     __end_of_I2C_Master_Wait:
  3228                           
  3229                           	psect	text19
  3230     054B                     __ptext19:	
  3231 ;; *************** function _isr *****************
  3232 ;; Defined at:
  3233 ;;		line 76 in file "Master_Sensores.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0
  3249 ;;      Temps:          2       0       0       0       0
  3250 ;;      Totals:         2       0       0       0       0
  3251 ;;Total ram usage:        2 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		Interrupt level 1
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260     054B                     _isr:	
  3261                           ;psect for function _isr
  3262                           
  3263     054B                     i1l1479:
  3264                           
  3265                           ;Master_Sensores.c: 77:     if(INTCONbits.RBIF){
  3266     054B  1C0B               	btfss	11,0	;volatile
  3267     054C  2D4E               	goto	u76_21
  3268     054D  2D4F               	goto	u76_20
  3269     054E                     u76_21:
  3270     054E  2D5E               	goto	i1l176
  3271     054F                     u76_20:
  3272     054F                     i1l1481:
  3273                           
  3274                           ;Master_Sensores.c: 78:         if(PORTBbits.RB0 == 0){
  3275     054F  1283               	bcf	3,5	;RP0=0, select bank0
  3276     0550  1303               	bcf	3,6	;RP1=0, select bank0
  3277     0551  1806               	btfsc	6,0	;volatile
  3278     0552  2D54               	goto	u77_21
  3279     0553  2D55               	goto	u77_20
  3280     0554                     u77_21:
  3281     0554  2D5D               	goto	i1l1487
  3282     0555                     u77_20:
  3283     0555                     i1l173:
  3284     0555  1C06               	btfss	6,0	;volatile
  3285     0556  2D58               	goto	u78_21
  3286     0557  2D59               	goto	u78_20
  3287     0558                     u78_21:
  3288     0558  2D55               	goto	i1l173
  3289     0559                     u78_20:
  3290     0559                     i1l1485:
  3291                           
  3292                           ;Master_Sensores.c: 80:             BANDERA = 255;
  3293     0559  30FF               	movlw	255
  3294     055A  00A8               	movwf	_BANDERA
  3295                           
  3296                           ;Master_Sensores.c: 81:             Bandera = 255;
  3297     055B  30FF               	movlw	255
  3298     055C  00A7               	movwf	_Bandera
  3299     055D                     i1l1487:
  3300                           
  3301                           ;Master_Sensores.c: 83:         INTCONbits.RBIF = 0;
  3302     055D  100B               	bcf	11,0	;volatile
  3303     055E                     i1l176:
  3304     055E  0871               	movf	??_isr+1,w
  3305     055F  008A               	movwf	10
  3306     0560  0E70               	swapf	??_isr,w
  3307     0561  0083               	movwf	3
  3308     0562  0EFE               	swapf	btemp,f
  3309     0563  0E7E               	swapf	btemp,w
  3310     0564  0009               	retfie
  3311     0565                     __end_of_isr:
  3312     007E                     btemp	set	126	;btemp
  3313     007E                     wtemp0	set	126
  3314                           
  3315                           	psect	intentry
  3316     0004                     __pintentry:	
  3317                           ;incstack = 0
  3318                           ; Regs used in _isr: [wreg]
  3319                           
  3320     0004                     interrupt_function:
  3321     007E                     saved_w	set	btemp
  3322     0004  00FE               	movwf	btemp
  3323     0005  0E03               	swapf	3,w
  3324     0006  00F0               	movwf	??_isr
  3325     0007  080A               	movf	10,w
  3326     0008  00F1               	movwf	??_isr+1
  3327     0009  120A  118A  2D4B   	ljmp	_isr
  3328                           
  3329                           	psect	idloc
  3330                           
  3331                           ;Config register IDLOC0 @ 0x2000
  3332                           ;	unspecified, using default values
  3333     2000                     	org	8192
  3334     2000  3FFF               	dw	16383
  3335                           
  3336                           ;Config register IDLOC1 @ 0x2001
  3337                           ;	unspecified, using default values
  3338     2001                     	org	8193
  3339     2001  3FFF               	dw	16383
  3340                           
  3341                           ;Config register IDLOC2 @ 0x2002
  3342                           ;	unspecified, using default values
  3343     2002                     	org	8194
  3344     2002  3FFF               	dw	16383
  3345                           
  3346                           ;Config register IDLOC3 @ 0x2003
  3347                           ;	unspecified, using default values
  3348     2003                     	org	8195
  3349     2003  3FFF               	dw	16383
  3350                           
  3351                           	psect	config
  3352                           
  3353                           ;Config register CONFIG1 @ 0x2007
  3354                           ;	Oscillator Selection bits
  3355                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3356                           ;	Watchdog Timer Enable bit
  3357                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3358                           ;	Power-up Timer Enable bit
  3359                           ;	PWRTE = OFF, PWRT disabled
  3360                           ;	RE3/MCLR pin function select bit
  3361                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3362                           ;	Code Protection bit
  3363                           ;	CP = OFF, Program memory code protection is disabled
  3364                           ;	Data Code Protection bit
  3365                           ;	CPD = OFF, Data memory code protection is disabled
  3366                           ;	Brown Out Reset Selection bits
  3367                           ;	BOREN = OFF, BOR disabled
  3368                           ;	Internal External Switchover bit
  3369                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3370                           ;	Fail-Safe Clock Monitor Enabled bit
  3371                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3372                           ;	Low Voltage Programming Enable bit
  3373                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3374                           ;	In-Circuit Debugger Mode bit
  3375                           ;	DEBUG = 0x1, unprogramme  3376     2007                     	org	8199
  3377     2007  20D4               	dw	8404
  3378                           
  3379                           ;Config register CONFIG2 @ 0x2008
  3380                           ;	Brown-out Reset Selection bit
  3381                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3382                           ;	Flash Program Memory Self Write Enable bits
  3383                           ;	WRT = OFF, Write protection off
  3384     2008                     	org	8200
  3385     2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    10
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     20      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> Infra(BANK0[8]), Foto(BANK0[8]), Ultra(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String8@a	PTR unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), Infra(BANK0[8]), 
		 -> Foto(BANK0[8]), Ultra(BANK0[8]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String8->_Lcd_Write_Char8
    _Lcd_Write_Char8->_Lcd_Port8
    _Lcd_Set_Cursor8->_Lcd_Cmd8
    _Lcd_Init8->_Lcd_Cmd8
    _Lcd_Clear8->_Lcd_Cmd8
    _Lcd_Cmd8->_Lcd_Port8

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4200
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _Lcd_Clear8
                          _Lcd_Init8
                    _Lcd_Set_Cursor8
                  _Lcd_Write_String8
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1429
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String8                                    7     5      2     636
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                    _Lcd_Write_Char8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char8                                      4     4      0      90
                                              3 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor8                                      5     4      1     634
                                              6 COMMON     3     2      1
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init8                                            2     2      0      66
                                              6 COMMON     2     2      0
                           _Lcd_Cmd8
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear8                                           0     0      0      44
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd8                                             3     3      0      44
                                              3 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port8                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     706
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear8
     _Lcd_Cmd8
       _Lcd_Port8
   _Lcd_Init8
     _Lcd_Cmd8
     _Lcd_Port8
   _Lcd_Set_Cursor8
     _Lcd_Cmd8
   _Lcd_Write_String8
     _Lcd_Write_Char8
       _Lcd_Port8
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Aug 28 15:10:17 2023

                        pc 0002                         l32 058A                         l50 04DB  
                       l35 0596                         l51 04DE                         l52 04E3  
                       l44 05A9                         l29 0487                         l38 05B2  
                       l70 0589                         l47 05A0                         l64 05C0  
                       l82 057C                         l67 054A                         l76 0530  
                       l79 0389                         l88 03CF                         fsr 0004  
         ?_Lcd_Write_Char8 0070                        l181 002B         Lcd_Write_String8@a 0076  
                      l337 033E                        l187 0510         Lcd_Write_String8@i 0041  
                      l297 02D6                        l573 0413                        l583 044F  
                      _GIE 005F                        u400 02E9                        u401 02E8  
                      u420 02FD                        u500 03D8                        u421 02FC  
                      u501 03D7                        u415 02EE                        u440 0318  
                      u520 03EA                        u600 0438                        u441 0317  
                      u521 03E9                        u601 0437                        u435 02FF  
                      u515 03DC                        u460 0336                        u540 03FB  
                      u620 044B                        u700 023F                        u461 0335  
                      u445 0314                        u541 03FA                        u621 044A  
                      u605 0434                        u701 023E                        u630 04D7  
                      u470 0467                        u710 0265                        u631 04D6  
                      u455 0328                        u535 03EB                        u615 043F  
                      u711 0264                        u480 0590                        u640 0517  
                      u560 040F                        u720 0270                        u481 058F  
                      u641 0516                        u561 040E                        u545 03F7  
                      u721 026F                        u490 0596                        u650 0527  
                      u570 041C                        u730 0276                        u491 0595  
                      u651 0526                        u475 0462                        u555 0403  
                      u571 041B                        u731 0275                        u715 0261  
                      u660 0399                        u740 02C2                        u741 02C1  
                      u670 03BD                        u590 042E                        u750 02D2  
                      u591 042D                        u751 02D1                        u807 0084  
                      u680 03CF                        u681 03CE                        u585 0420  
                      u817 00B4                        u690 0207                        u907 0542  
                      u691 0206                        u827 00E4                        u837 0114  
                      u847 0144                        u857 01E8                        u867 0576  
                      u877 0349                        u797 0054                        u887 0358  
                      u897 0367                        _isr 054B                        fsr0 0004  
                      indf 0000                       l1201 05BC                       l1211 02FD  
                     l1203 02D7                       l1221 0330                       l1213 0306  
                     l1205 02E9                       l1301 042E                       l1215 0318  
                     l1207 02EC                       l1223 0336                       l1231 0457  
                     l1303 0438                       l1241 0590                       l1313 05AA  
                     l1321 0597                       l1217 0326                       l1209 02F9  
                     l1233 0484                       l1401 04FF                       l1305 043E  
                     l1331 04CC                       l1315 05AF                       l1323 059C  
                     l1251 0547                       l1243 0532                       l1219 0327  
                     l1235 0485                       l1227 0450                       l1403 0500  
                     l1307 0445                       l1411 0201                       l1333 04D1  
                     l1325 04B6                       l1317 05A1                       l1245 0535  
                     l1341 057D                       l1261 0574                       l1253 0566  
                     l1237 0486                       l1229 0454                       l1405 0501  
                     l1309 044B                       l1421 0212                       l1413 0207  
                     l1501 0077                       l1239 058A                       l1335 04D7  
                     l1327 04BB                       l1319 05A6                       l1247 053B  
                     l1351 0527                       l1343 0512                       l1263 0579  
                     l1255 0568                       l1271 03DB                       l1431 0243  
                     l1423 022F                       l1415 020C                       l1511 00C9  
                     l1503 007C                       l1337 04DF                       l1329 04C3  
                     l1249 053E                       l1361 035D                       l1353 052A  
                     l1345 0517                       l1257 056B                       l1281 0401  
                     l1273 03E2                       l1265 03D0                       l1433 0248  
                     l1425 0237                       l1417 0211                       l1409 01FE  
                     l1521 0120                       l1513 00D7                       l1505 00AC  
                     l1363 0363                       l1355 033F                       l1347 051A  
                     l1259 0571                       l1371 03B3                       l1283 0402  
                     l1275 03E6                       l1267 03D2                       l1291 0414  
                     l1451 027F                       l1443 0266                       l1427 023B  
                     l1531 0159                       l1523 0129                       l1515 00DC  
                     l1507 00BB                       l1357 0345                       l1349 0521  
                     l1365 038A                       l1381 04EF                       l1373 04E4  
                     l1285 0409                       l1277 03EA                       l1269 03D8  
                     l1293 041C                       l1453 0282                       l1445 0270  
                     l1429 023F                       l1461 02C2                       l1541 0193  
                     l1533 0167                       l1525 0137                       l1517 010C  
                     l1509 00C0                       l1359 034E                       l1367 038F  
                     l1391 04F8                       l1383 04F2                       l1375 04EB  
                     l1279 03FB                       l1287 040F                       l1295 041F  
                     l1455 02B0                       l1447 0276                       l1439 024A  
                     l1463 02D2                       l1551 01CF                       l1543 019C  
                     l1535 0175                       l1527 013C                       l1519 011B  
                     l1369 03AB                       l1393 04FA                       l1385 04F3  
                     l1377 04ED                       l1297 0426                       l1457 02B5  
                     l1449 027B                       l1553 01E0                       l1545 01AD  
                     l1537 017A                       l1529 014B                       l1395 04FC  
                     l1387 04F4                       l1379 04EE                       l1299 042A  
                     l1459 02B9                       l1555 01EE                       l1547 01B5  
                     l1539 0182                       l1491 001C                       l1397 04FD  
                     l1389 04F5                       l1581 0224                       l1557 01F1  
                     l1549 01C6                       l1493 004C                       l1399 04FE  
                     l1559 01F5                       l1495 005B                       l1497 0060  
                     l1499 0069                       ?_isr 0070                       STR_1 04B3  
                     STR_2 04B3                       STR_3 04B3                       STR_4 04A8  
                     STR_5 04AE                       STR_6 04A2                       _IOCB 0096  
                     _PEIE 005E                       _Foto 0031                       _main 001C  
                     btemp 007E                       start 000C                 _Lcd_Clear8 057D  
                    ??_isr 0070           ?_I2C_Master_Init 0046           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ANSEL 0188            __end_of___lldiv 033F            __end_of___lwdiv 0414  
                    i1l173 0555                      i1l176 055E            __end_of___lwmod 0450  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      u76_20 054F                      u76_21 054E  
                    u77_20 0555                      u77_21 0554                      u78_20 0559  
                    u78_21 0558          _Lcd_Write_String8 038A                      _Infra 0029  
                    _Ultra 0039         ?_Lcd_Write_String8 0076            __end_of_dpowers 04A2  
                    _setup 04E4                      pclath 000A        ??_Lcd_Write_String8 0078  
                    status 0003                      wtemp0 007E            __end_of_sprintf 02D7  
         __end_of_Lcd_Cmd8 054B            __initialization 000F               __end_of_main 01FB  
               _Infrarrojo 0020                     ??_main 0052  __end_of_Lcd_Write_String8 03D0  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074                     ?_setup 0070                     _ANSELH 0189  
                   i1l1481 054F                     i1l1485 0559                     i1l1487 055D  
                   i1l1479 054B                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
              ?_Lcd_Clear8 0070                  ??___lldiv 007A                  ??___lwdiv 0076  
                ??___lwmod 007A           Lcd_Write_Char8@a 0075           Lcd_Write_Char8@y 0074  
                   saved_w 007E                  ??_sprintf 0048    __end_of__initialization 0018  
        __end_of_Lcd_Init8 038A          __end_of_Lcd_Port8 05C1             __pcstackCOMMON 0070  
            __end_of_setup 0511             _OPTION_REGbits 0081                  ?_Lcd_Cmd8 0070  
                  ??_setup 007B                 __pbssBANK0 0020                 __pmaintext 001C  
        ??_Lcd_Set_Cursor8 0077                 __pintentry 0004                    _BANDERA 0028  
               ??_Lcd_Cmd8 0073                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0488                    _Bandera 0027                    ___lldiv 02D7  
                  ___lwdiv 03D0                    ___lwmod 0414                    __ptext1 01FB  
                  __ptext2 0414                    __ptext3 03D0                    __ptext4 04E4  
                  __ptext5 0450                    __ptext6 02D7                    __ptext7 038A  
                  __ptext8 0565                    __ptext9 0511                    _dpowers 0498  
                  _sprintf 01FB                    clrloop0 05B4       end_of_initialization 0018  
                Lcd_Cmd8@a 0075            ___lldiv@divisor 0072            ___lldiv@counter 0045  
         I2C_Master_Init@c 0046               ??_Lcd_Clear8 0076           I2C_Master_Read@a 0072  
         Lcd_Set_Cursor8@a 0077           Lcd_Set_Cursor8@b 0076                  _PORTBbits 0006  
                _PORTEbits 0009                  _TRISCbits 0087         __end_of_Lcd_Clear8 058A  
              _Ultrasonico 0024          ??_Lcd_Write_Char8 0073                  _Lcd_Init8 033F  
                _Lcd_Port8 05BB        start_initialization 000F                __end_of_isr 0565  
          _Lcd_Set_Cursor8 0511          ??_I2C_Master_Init 004A          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072                 ?_Lcd_Init8 0070  
               ?_Lcd_Port8 0070                  ___latbits 0002              __pcstackBANK0 0041  
              sprintf@flag 004C                sprintf@prec 004D           _I2C_Master_Start 05AA  
         _I2C_Master_Write 0597           ___lwdiv@dividend 0074                   ?___lldiv 0072  
                 ?___lwdiv 0072                   ?___lwmod 0041                  __pstrings 0488  
  __end_of_Lcd_Set_Cursor8 0531           ___lwdiv@quotient 0077                   ?_sprintf 0045  
        interrupt_function 0004                  clear_ram0 05B3                ??_Lcd_Init8 0076  
              ??_Lcd_Port8 0072                __stringbase 0497            _Lcd_Write_Char8 0565  
                 _Lcd_Cmd8 0531        I2C_Master_Read@temp 0076            _Fotoresistencia 0022  
       __end_of__stringtab 0498                 sprintf@val 004E            _I2C_Master_Init 0450  
          _I2C_Master_Read 04B6            _I2C_Master_Wait 058A            _I2C_Master_Stop 05A1  
         ?_Lcd_Set_Cursor8 0076            ___lwdiv@divisor 0072            ___lwdiv@counter 0079  
                 __ptext10 033F                   __ptext11 057D                   __ptext12 0531  
                 __ptext13 05BB                   __ptext14 0597                   __ptext15 05A1  
                 __ptext16 05AA                   __ptext17 04B6                   __ptext18 058A  
                 __ptext19 054B                   _contador 0026        Lcd_Set_Cursor8@temp 0078  
  __end_of_Lcd_Write_Char8 057D   __end_of_I2C_Master_Start 05B3   __end_of_I2C_Master_Write 05A1  
               _INTCONbits 000B                   intlevel1 0000                  sprintf@ap 004B  
                sprintf@sp 0050           ___lwmod@dividend 0043           ___lldiv@dividend 0076  
                stringcode 0492                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0488  
  __end_of_I2C_Master_Read 04E4    __end_of_I2C_Master_Wait 0597                 Lcd_Port8@a 0072  
  __end_of_I2C_Master_Stop 05AA                   sprintf@c 0051                   sprintf@f 0045  
         ___lldiv@quotient 0041          I2C_Master_Write@d 0072            ___lwmod@divisor 0041  
          ___lwmod@counter 007B                   stringdir 0492                   stringtab 0488  
              _SSPCON2bits 0091  
